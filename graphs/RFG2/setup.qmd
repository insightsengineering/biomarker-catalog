---
exclude-listing: true
---

## Setup

These templates are helpful when we are interested in modelling the effects of continuous biomarker variables on the binary response outcome, conditional on covariates and/or stratification variables included in (conditional) logistic regression models.
We would like to assess how the estimates effects change when we look at different subgroups.

In detail the differences to [RFG1](../../graphs/RFG1/rfg01.qmd) are the following:

-   The `extract_rsp_subgroups()` and `tabulate_rsp_subgroups()` functions used in RFG1 evaluate the treatment effects from two arms, across subgroups. On the other hand, the `extract_rsp_biomarkers()` and `tabulate_rsp_biomarkers()` functions used here in RFG2 evaluate the effects from continuous biomarkers on the probability for response.
-   The `extract_rsp_subgroups()` and `tabulate_rsp_subgroups()` functions only allow specification of a single treatment arm variable, while the `extract_rsp_biomarkers()` and `tabulate_rsp_biomarkers()` allow to look at multiple continuous biomarker variables at once.
-   In addition to the treatment arms, the use of `extract_rsp_subgroups()` and `tabulate_rsp_subgroups()` functions can be extended to other binary variables. For example, we could define the binarized `ARM` variable as `AGE>=65` vs. `AGE<65` and then look at the odds ratios across subgroups. For the `extract_rsp_biomarkers()` and `tabulate_rsp_biomarkers()` functions, we could use the original continuous biomarker variable `AGE`, and then look at the estimated effect across subgroups.

Similarly like in [RFG1](../../graphs/RFG1/rfg01.qmd), we will use the `synthetic_cdisc_data$adrs` data set from the `scda` package.
Here we just filter for the Best Confirmed Overall Response by Investigator and patients with measurable disease at baseline, and define a new variable `COMPRESP` to include complete responses only.

```{r, message = FALSE}
library(tern)
library(dplyr)
library(hermes)

adrs <- scda::synthetic_cdisc_data("latest")$adrs

adrs_f <- adrs %>%
  df_explicit_na() %>%
  filter(PARAMCD == "BESRSPI", BMEASIFL == "Y") %>%
  mutate(COMPRESP = (AVALC == "CR"))
```
