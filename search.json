[
  {
    "objectID": "tables/tet01.html",
    "href": "tables/tet01.html",
    "title": "TET1",
    "section": "",
    "text": "Setup\nTable\nTime-to-Event Summary Table with Stratified Analysis (TET1A)\nSession Info\n\n\n\nWe will use the synthetic_cdisc_data$adtte data set from the scda package for the time-to-event summary table. We start by filtering the adtte data set for the overall survival observations, converting time of overall survival to months, creating new variables for event and non-event information and binarizing the ARM variable.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(\n    PARAMCD == \"OS\"\n  ) %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0,\n    is_not_event = CNSR == 1,\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = c(\"B: Placebo\"),\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    )\n  )\n\n\n\n\nThis time-to-event summary table splits the columns by treatment arm using split_cols_by(), creates a summary for patients with and without event using summarize_vars(), summarizes survival time using surv_time() and summarizes the analysis from unstratified Cox Proportional Hazards models using coxph_pairwise().\n\nCodelyt &lt;- basic_table() %&gt;%\n  split_cols_by(\n    var = \"ARM_BIN\",\n    ref_group = \"CTRL\"\n  ) %&gt;%\n  add_colcounts() %&gt;%\n  summarize_vars(\n    vars = \"is_event\",\n    .stats = \"count_fraction\",\n    .labels = c(count_fraction = \"Patients with event (%)\"),\n    nested = FALSE,\n    show_labels = \"hidden\"\n  ) %&gt;%\n  summarize_vars(\n    vars = \"is_not_event\",\n    .stats = \"count_fraction\",\n    .labels = c(count_fraction = \"Patients without event (%)\"),\n    nested = FALSE,\n    show_labels = \"hidden\"\n  ) %&gt;%\n  surv_time(\n    vars = \"AVAL\",\n    var_labels = \"Time to Event (months)\",\n    is_event = \"is_event\",\n    table_names = \"time_to_event\"\n  ) %&gt;%\n  coxph_pairwise(\n    vars = \"AVAL\",\n    is_event = \"is_event\",\n    var_labels = c(\"Unstratified Analysis\"),\n    control = control_coxph(pval_method = \"log-rank\"),\n    table_names = \"coxph_unstratified\"\n  )\n\nbuild_table(lyt, adtte)\n\n                                 CTRL           TRT     \n                               (N=134)        (N=266)   \n————————————————————————————————————————————————————————\nPatients with event (%)       87 (64.9%)    195 (73.3%) \nPatients without event (%)    47 (35.1%)     71 (26.7%) \nTime to Event (months)                                  \n  Median                         27.5           21.3    \n  95% CI                     (17.3, 30.2)   (16.3, 25.6)\n  25% and 75%-ile             9.5, 54.9      7.1, 50.9  \n  Range (censored)           0.9 to 91.0    0.3 to 154.7\n  Range (event)              0.0 to 122.4   0.1 to 116.4\nUnstratified Analysis                                   \n  p-value (log-rank)                           0.2146   \n  Hazard Ratio                                  1.17    \n  95% CI                                    (0.91, 1.51)\n\n\n\n\nWe can add the summary of an analysis with Cox Proportional Hazards models stratified by SEX to the table above using coxph_pairwise().\n\nCodelyt2 &lt;- lyt %&gt;%\n  coxph_pairwise(\n    vars = \"AVAL\",\n    is_event = \"is_event\",\n    var_labels = c(\"Stratified Analysis\"),\n    strat = \"SEX\",\n    control = control_coxph(pval_method = \"log-rank\"),\n    table_names = \"coxph_stratified\"\n  )\n\nbuild_table(lyt2, adtte)\n\n                                 CTRL           TRT     \n                               (N=134)        (N=266)   \n————————————————————————————————————————————————————————\nPatients with event (%)       87 (64.9%)    195 (73.3%) \nPatients without event (%)    47 (35.1%)     71 (26.7%) \nTime to Event (months)                                  \n  Median                         27.5           21.3    \n  95% CI                     (17.3, 30.2)   (16.3, 25.6)\n  25% and 75%-ile             9.5, 54.9      7.1, 50.9  \n  Range (censored)           0.9 to 91.0    0.3 to 154.7\n  Range (event)              0.0 to 122.4   0.1 to 116.4\nUnstratified Analysis                                   \n  p-value (log-rank)                           0.2146   \n  Hazard Ratio                                  1.17    \n  95% CI                                    (0.91, 1.51)\nStratified Analysis                                     \n  p-value (log-rank)                           0.2072   \n  Hazard Ratio                                  1.18    \n  95% CI                                    (0.91, 1.52)\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.2.2 (2022-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.2 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3\nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.2           tern_0.8.1.9012       rtables_0.6.0.3      \n[4] magrittr_2.0.3        formatters_0.4.1.9001\n\nloaded via a namespace (and not attached):\n [1] compiler_4.2.2    pillar_1.9.0      forcats_1.0.0     tools_4.2.2      \n [5] digest_0.6.31     lattice_0.21-8    jsonlite_1.8.4    evaluate_0.20    \n [9] lifecycle_1.0.3   tibble_3.2.1      gtable_0.3.3      checkmate_2.2.0  \n[13] pkgconfig_2.0.3   rlang_1.1.0       Matrix_1.5-4      cli_3.6.1        \n[17] yaml_2.3.7        xfun_0.39         fastmap_1.1.1     knitr_1.42       \n[21] generics_0.1.3    vctrs_0.6.2       htmlwidgets_1.6.2 grid_4.2.2       \n[25] tidyselect_1.2.0  glue_1.6.2        R6_2.5.1          fansi_1.0.4      \n[29] Rdpack_2.4        survival_3.5-5    rmarkdown_2.21    scda_0.1.6.9000  \n[33] ggplot2_3.4.2     purrr_1.0.1       tidyr_1.3.0       codetools_0.2-19 \n[37] splines_4.2.2     backports_1.4.1   scales_1.2.1      htmltools_0.5.5  \n[41] rbibutils_2.2.13  colorspace_2.1-0  utf8_1.2.3        munsell_0.5.0    \n[45] broom_1.0.4"
  },
  {
    "objectID": "tables/dt02.html",
    "href": "tables/dt02.html",
    "title": "DT2",
    "section": "",
    "text": "Setup\nTable\nDemographics Table Allowing Testing to Compare Demographic Variables Between Non-BEP vs. BEP population (DT2A)\nSession Info\n\n\n\nThe tables below compare the biomarker evaluable population (BEP, below in the table “BEP Yes”) with the remainder non-BEP (“BEP No”) within each treatment arm with regards to selected demographic variables.\nWe will use the synthetic_cdisc_data$adsl data set from the scda package to illustrate the tables.\nIn order to compare the BEP with the non-BEP, we only need to split columns on the BEP flag variable BEP01FL that categorises the evaluable and non evaluable subgroups. For readability in the tables, we define a separate label variable BEP_label below which is parallel to the original flag variable.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadsl &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adsl %&gt;%\n  df_explicit_na() %&gt;%\n  mutate(\n    BEP_label = case_when(\n      BEP01FL == \"Y\" ~ \"BEP Yes\",\n      BEP01FL == \"N\" ~ \"BEP No\"\n    )\n  )\n\n\nThis can then be used by the rtables layout function split_cols_by() below.\n\n\nThe demographics table DT2 splits the columns by treatment arm and by the biomarker population (Yes vs. No), and summarizes selected demographic variables in the rows. You can see here how we use the separate labels variable to specify the labels used in the column headers.\n\nCodelyt &lt;- basic_table() %&gt;%\n  split_cols_by(\"ARM\") %&gt;%\n  add_colcounts() %&gt;%\n  split_cols_by(\"BEP01FL\", labels_var = \"BEP_label\") %&gt;%\n  summarize_vars(c(\"AGE\", \"SEX\"))\n\nbuild_table(lyt, adsl)\n\n                      A: Drug X                  B: Placebo                C: Combination      \n                BEP Yes       BEP No        BEP Yes       BEP No        BEP Yes       BEP No   \n                (N=68)        (N=66)        (N=63)        (N=71)        (N=66)        (N=66)   \n———————————————————————————————————————————————————————————————————————————————————————————————\nAGE                                                                                            \n  n               68            66            63            71            66            66     \n  Mean (SD)   32.9 (6.6)    34.6 (6.5)    35.7 (8.3)    35.2 (7.6)    35.1 (8.1)    35.8 (7.3) \n  Median         32.0          34.0          35.0          35.0          34.0          35.0    \n  Min - Max   21.0 - 50.0   24.0 - 48.0   23.0 - 62.0   21.0 - 58.0   21.0 - 69.0   20.0 - 64.0\nSEX                                                                                            \n  n               68            66            63            71            66            66     \n  F           44 (64.7%)     35 (53%)     42 (66.7%)    40 (56.3%)    40 (60.6%)    30 (45.5%) \n  M           24 (35.3%)     31 (47%)     21 (33.3%)    31 (43.7%)    26 (39.4%)    36 (54.5%) \n\n\n\n\nThe demographics table DT2A splits the columns by treatment arm and by BEP vs. non-BEP, summarizes selected demographic variables in the rows and performs tests to compare demographic variables between Non-BEP vs. BEP population. Note that p-values can be NA when the test could not be performed due to row counts being all zero, e.g.\n\nCodelyt &lt;- basic_table() %&gt;%\n  split_cols_by(\"ARM\") %&gt;%\n  add_colcounts() %&gt;%\n  split_cols_by(\"BEP01FL\", labels_var = \"BEP_label\", ref_group = \"Y\") %&gt;%\n  compare_vars(c(\"AGE\", \"SEX\"))\n\nbuild_table(lyt, adsl)\n\n                                      A: Drug X                B: Placebo              C: Combination     \n                                BEP Yes       BEP No      BEP Yes       BEP No      BEP Yes       BEP No  \n                                 (N=68)       (N=66)       (N=63)       (N=71)       (N=66)       (N=66)  \n——————————————————————————————————————————————————————————————————————————————————————————————————————————\nAGE                                                                                                       \n  n                                68           66           63           71           66           66    \n  Mean (SD)                    32.9 (6.6)   34.6 (6.5)   35.7 (8.3)   35.2 (7.6)   35.1 (8.1)   35.8 (7.3)\n  p-value (t-test)                            0.1384                    0.6846                    0.6139  \nSEX                                                                                                       \n  n                                68           66           63           71           66           66    \n  F                            44 (64.7%)    35 (53%)    42 (66.7%)   40 (56.3%)   40 (60.6%)   30 (45.5%)\n  M                            24 (35.3%)    31 (47%)    21 (33.3%)   31 (43.7%)   26 (39.4%)   36 (54.5%)\n  p-value (chi-squared test)                  0.2309                    0.2951                    0.1165  \n\n\n\n\n\nCodesessionInfo()\n\nR version 4.2.2 (2022-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.2 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3\nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.2           tern_0.8.1.9012       rtables_0.6.0.3      \n[4] magrittr_2.0.3        formatters_0.4.1.9001\n\nloaded via a namespace (and not attached):\n [1] compiler_4.2.2    pillar_1.9.0      forcats_1.0.0     tools_4.2.2      \n [5] digest_0.6.31     lattice_0.21-8    jsonlite_1.8.4    evaluate_0.20    \n [9] lifecycle_1.0.3   tibble_3.2.1      gtable_0.3.3      checkmate_2.2.0  \n[13] pkgconfig_2.0.3   rlang_1.1.0       Matrix_1.5-4      cli_3.6.1        \n[17] yaml_2.3.7        xfun_0.39         fastmap_1.1.1     knitr_1.42       \n[21] generics_0.1.3    vctrs_0.6.2       htmlwidgets_1.6.2 grid_4.2.2       \n[25] tidyselect_1.2.0  glue_1.6.2        R6_2.5.1          fansi_1.0.4      \n[29] Rdpack_2.4        survival_3.5-5    rmarkdown_2.21    scda_0.1.6.9000  \n[33] ggplot2_3.4.2     purrr_1.0.1       tidyr_1.3.0       codetools_0.2-19 \n[37] splines_4.2.2     backports_1.4.1   scales_1.2.1      htmltools_0.5.5  \n[41] rbibutils_2.2.13  colorspace_2.1-0  utf8_1.2.3        munsell_0.5.0    \n[45] broom_1.0.4"
  },
  {
    "objectID": "tables/dt01.html",
    "href": "tables/dt01.html",
    "title": "DT1",
    "section": "",
    "text": "Setup\nTable\nReorder Treatment Arms in Demographics Table (DT1A)\nCombine Treatment Arms in Demographics Table (DT1B)\nAlternative BEP Indicator in Demographics Table (DT1C)\nSession Info\n\n\n\nThe tables below compare the overall population (“All”) with the biomarker evaluable population (“BEP”) with regards to selected demographic variables.\nWe will use the synthetic_cdisc_data$adsl data set from the scda package to illustrate the tables. We add a second artificial BEP flag variable BEP02FL.\nIn order to compare All with BEP, we need to define a list bep_groups defining these two groups. The reason is that these two groups are overlapping (BEP is a subset of All). Here, we refer in the list elements to the levels Y and N of the biomarker population flag variable BEP01FL from adsl which we will use below:\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nset.seed(123)\nadsl &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adsl %&gt;%\n  df_explicit_na() %&gt;%\n  mutate(BEP02FL = factor(sample(c(\"Y\", \"N\"), size = n(), replace = TRUE)))\n\nbep_groups &lt;- list(\n  \"All\" = c(\"Y\", \"N\"),\n  \"BEP\" = \"Y\"\n)\n\n\nThis can then be used by the tern layout function split_cols_by_groups() below.\n\n\nThe simplest demographics table DT1 splits the columns by treatment arm and All vs. BEP, and summarizes selected demographic variables in the rows.\n\nCodelyt &lt;- basic_table() %&gt;%\n  split_cols_by(\"ARM\") %&gt;%\n  split_cols_by_groups(\"BEP01FL\", bep_groups) %&gt;%\n  summarize_vars(c(\"AGE\", \"SEX\")) %&gt;%\n  add_colcounts()\n\nbuild_table(lyt, adsl)\n\n                      A: Drug X                  B: Placebo                C: Combination      \n                  All           BEP           All           BEP           All           BEP    \n                (N=134)       (N=68)        (N=134)       (N=63)        (N=132)       (N=66)   \n———————————————————————————————————————————————————————————————————————————————————————————————\nAGE                                                                                            \n  n               134           68            134           63            132           66     \n  Mean (SD)   33.8 (6.6)    32.9 (6.6)    35.4 (7.9)    35.7 (8.3)    35.4 (7.7)    35.1 (8.1) \n  Median         33.0          32.0          35.0          35.0          35.0          34.0    \n  Min - Max   21.0 - 50.0   21.0 - 50.0   21.0 - 62.0   23.0 - 62.0   20.0 - 69.0   21.0 - 69.0\nSEX                                                                                            \n  n               134           68            134           63            132           66     \n  F            79 (59%)     44 (64.7%)    82 (61.2%)    42 (66.7%)     70 (53%)     40 (60.6%) \n  M            55 (41%)     24 (35.3%)    52 (38.8%)    21 (33.3%)     62 (47%)     26 (39.4%) \n\n\n\n\nWe can reorder the treatment arm columns in the demographics table DT1 by using the reorder_split_levels() splitting function in split_cols_by() as done here.\n\nCodelyt &lt;- basic_table() %&gt;%\n  split_cols_by(\"ARM\", split_fun = reorder_split_levels(c(\"B: Placebo\", \"A: Drug X\", \"C: Combination\"))) %&gt;%\n  split_cols_by_groups(\"BEP01FL\", bep_groups) %&gt;%\n  summarize_vars(c(\"AGE\", \"SEX\")) %&gt;%\n  add_colcounts()\n\nbuild_table(lyt, adsl)\n\n                     B: Placebo                   A: Drug X                C: Combination      \n                  All           BEP           All           BEP           All           BEP    \n                (N=134)       (N=63)        (N=134)       (N=68)        (N=132)       (N=66)   \n———————————————————————————————————————————————————————————————————————————————————————————————\nAGE                                                                                            \n  n               134           63            134           68            132           66     \n  Mean (SD)   35.4 (7.9)    35.7 (8.3)    33.8 (6.6)    32.9 (6.6)    35.4 (7.7)    35.1 (8.1) \n  Median         35.0          35.0          33.0          32.0          35.0          34.0    \n  Min - Max   21.0 - 62.0   23.0 - 62.0   21.0 - 50.0   21.0 - 50.0   20.0 - 69.0   21.0 - 69.0\nSEX                                                                                            \n  n               134           63            134           68            132           66     \n  F           82 (61.2%)    42 (66.7%)     79 (59%)     44 (64.7%)     70 (53%)     40 (60.6%) \n  M           52 (38.8%)    21 (33.3%)     55 (41%)     24 (35.3%)     62 (47%)     26 (39.4%) \n\n\n\n\nIt is simple to omit the treatment arm split in the demographics table DT1, thus effectively combining the treatment arms.\n\nCodelyt &lt;- basic_table() %&gt;%\n  split_cols_by_groups(\"BEP01FL\", bep_groups) %&gt;%\n  summarize_vars(c(\"AGE\", \"SEX\")) %&gt;%\n  add_colcounts()\n\nbuild_table(lyt, adsl)\n\n                  All           BEP    \n                (N=400)       (N=197)  \n———————————————————————————————————————\nAGE                                    \n  n               400           197    \n  Mean (SD)   34.9 (7.4)    34.6 (7.7) \n  Median         34.0          34.0    \n  Min - Max   20.0 - 69.0   21.0 - 69.0\nSEX                                    \n  n               400           197    \n  F           231 (57.8%)    126 (64%) \n  M           169 (42.2%)    71 (36%)  \n\n\n\n\nWe can of course use a different BEP factor variable BEP02FL with corresponding groups definition bep2_groups in the demographics table DT1.\n\nCodebep2_groups &lt;- list(\n  \"All\" = c(\"Y\", \"N\"),\n  \"BEP2\" = \"Y\"\n)\n\nlyt &lt;- basic_table() %&gt;%\n  split_cols_by(\"ARM\") %&gt;%\n  split_cols_by_groups(\"BEP02FL\", bep2_groups) %&gt;%\n  summarize_vars(c(\"AGE\", \"SEX\")) %&gt;%\n  add_colcounts()\n\nbuild_table(lyt, adsl)\n\n                      A: Drug X                  B: Placebo                C: Combination      \n                  All          BEP2           All          BEP2           All          BEP2    \n                (N=134)       (N=68)        (N=134)       (N=75)        (N=132)       (N=68)   \n———————————————————————————————————————————————————————————————————————————————————————————————\nAGE                                                                                            \n  n               134           68            134           75            132           68     \n  Mean (SD)   33.8 (6.6)    32.3 (6.2)    35.4 (7.9)    35.5 (7.4)    35.4 (7.7)    35.3 (6.7) \n  Median         33.0          31.0          35.0          36.0          35.0          35.0    \n  Min - Max   21.0 - 50.0   21.0 - 47.0   21.0 - 62.0   23.0 - 58.0   20.0 - 69.0   21.0 - 49.0\nSEX                                                                                            \n  n               134           68            134           75            132           68     \n  F            79 (59%)     42 (61.8%)    82 (61.2%)     48 (64%)      70 (53%)      34 (50%)  \n  M            55 (41%)     26 (38.2%)    52 (38.8%)     27 (36%)      62 (47%)      34 (50%)  \n\n\n\n\n\nCodesessionInfo()\n\nR version 4.2.2 (2022-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.2 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3\nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.2           tern_0.8.1.9012       rtables_0.6.0.3      \n[4] magrittr_2.0.3        formatters_0.4.1.9001\n\nloaded via a namespace (and not attached):\n [1] compiler_4.2.2    pillar_1.9.0      forcats_1.0.0     tools_4.2.2      \n [5] digest_0.6.31     lattice_0.21-8    jsonlite_1.8.4    evaluate_0.20    \n [9] lifecycle_1.0.3   tibble_3.2.1      gtable_0.3.3      checkmate_2.2.0  \n[13] pkgconfig_2.0.3   rlang_1.1.0       Matrix_1.5-4      cli_3.6.1        \n[17] yaml_2.3.7        xfun_0.39         fastmap_1.1.1     knitr_1.42       \n[21] generics_0.1.3    vctrs_0.6.2       htmlwidgets_1.6.2 grid_4.2.2       \n[25] tidyselect_1.2.0  glue_1.6.2        R6_2.5.1          fansi_1.0.4      \n[29] Rdpack_2.4        survival_3.5-5    rmarkdown_2.21    scda_0.1.6.9000  \n[33] ggplot2_3.4.2     purrr_1.0.1       tidyr_1.3.0       codetools_0.2-19 \n[37] splines_4.2.2     backports_1.4.1   scales_1.2.1      htmltools_0.5.5  \n[41] rbibutils_2.2.13  colorspace_2.1-0  utf8_1.2.3        munsell_0.5.0    \n[45] broom_1.0.4"
  },
  {
    "objectID": "tables/cmt01.html",
    "href": "tables/cmt01.html",
    "title": "CMT1",
    "section": "",
    "text": "Setup\nTable\nSession Info\n\n\n\nWe will use the synthetic_cdisc_data$adtte data set from the scda package to illustrate the tables. We start by selecting the biomarker evaluable population (BEP) and the time-to-event endpoint of interest, here overall survival. We then convert time of overall survival to months and create a new variable for the event information.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"OS\", BEP01FL == \"Y\") %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    event = 1 - CNSR\n  )\n\n\n\n\nThe summarize_coxreg() function in tern takes the same variables, at, and control arguments that are used to fit a model using the fit_coxreg_univar() function - specifying the time, event and covariate in a variables list, and control and at with any further customizations to the model. Note that the default confidence level is 95% but this can be customized via the conf_level element in control.\nRather than fitting the model and then tidying the output via the broom::tidy() function, we can directly input these three arguments into the summarize_coxreg() function to summarize the model fit in a table layout, building the table with our pre-processed adtte data set.\n\nCodelyt &lt;- basic_table() %&gt;%\n  summarize_coxreg(variables = list(\n    time = \"AVAL\",\n    event = \"event\",\n    covariates = \"COUNTRY\"\n  ))\n\nbuild_table(lyt, adtte)\n\n                              Hazard Ratio      95% CI      p-value\n———————————————————————————————————————————————————————————————————\nCovariate:                                                         \n  Country (reference = CHN)                                 0.8447 \n    USA                           1.36       (0.70, 2.64)   0.3633 \n    BRA                           1.02       (0.55, 1.87)   0.9564 \n    PAK                           1.03       (0.54, 1.94)   0.9316 \n    NGA                           0.97       (0.46, 2.03)   0.9405 \n    RUS                           1.48       (0.64, 3.42)   0.3574 \n    JPN                           1.52       (0.61, 3.76)   0.3686 \n    GBR                           0.75       (0.30, 1.85)   0.5287 \n    CAN                           2.09       (0.65, 6.70)   0.2163 \n\n\n\n\n\nCodesessionInfo()\n\nR version 4.2.2 (2022-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.2 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3\nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.2           tern_0.8.1.9012       rtables_0.6.0.3      \n[4] magrittr_2.0.3        formatters_0.4.1.9001\n\nloaded via a namespace (and not attached):\n [1] compiler_4.2.2    pillar_1.9.0      forcats_1.0.0     tools_4.2.2      \n [5] digest_0.6.31     lattice_0.21-8    jsonlite_1.8.4    evaluate_0.20    \n [9] lifecycle_1.0.3   tibble_3.2.1      gtable_0.3.3      checkmate_2.2.0  \n[13] pkgconfig_2.0.3   rlang_1.1.0       Matrix_1.5-4      cli_3.6.1        \n[17] yaml_2.3.7        xfun_0.39         fastmap_1.1.1     stringr_1.5.0    \n[21] knitr_1.42        generics_0.1.3    vctrs_0.6.2       htmlwidgets_1.6.2\n[25] grid_4.2.2        tidyselect_1.2.0  glue_1.6.2        R6_2.5.1         \n[29] fansi_1.0.4       Rdpack_2.4        survival_3.5-5    rmarkdown_2.21   \n[33] carData_3.0-5     scda_0.1.6.9000   car_3.1-2         ggplot2_3.4.2    \n[37] purrr_1.0.1       tidyr_1.3.0       codetools_0.2-19  splines_4.2.2    \n[41] backports_1.4.1   scales_1.2.1      htmltools_0.5.5   rbibutils_2.2.13 \n[45] abind_1.4-5       colorspace_2.1-0  utf8_1.2.3        stringi_1.7.12   \n[49] munsell_0.5.0     broom_1.0.4"
  },
  {
    "objectID": "tables/cmt02.html",
    "href": "tables/cmt02.html",
    "title": "CMT2",
    "section": "",
    "text": "Setup\nTable\nChanging Reference Levels in the Cox Proportional Hazards Model Table (CMT2A)\nSession Info\n\n\n\nWe prepare the data similarly as in CMT1.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"OS\", BEP01FL == \"Y\") %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0\n  ) %&gt;%\n  var_relabel(\n    BMRKR1 = \"Biomarker (Continuous)\",\n    BMRKR2 = \"Biomarker (Categorical)\"\n  )\n\n\n\n\nThe multivariate Cox Proportional Hazards model can be displayed in a summary table using the summarize_coxreg function from tern with the multivar argument set to TRUE. Like the corresponding model fitting function fit_coxreg_multivar(), we specify the time, event, arm and covariates in a variables list, and any further customizations via the control argument. Note that the default confidence level is 95% but this can be customized via the conf_level element in control.\nRather than fitting the model and then tidying the output via the broom::tidy() function, we can directly input these three arguments into the summarize_coxreg() function to summarize the model fit in a table layout, building the table with our pre-processed adtte data set.\n\nCoderesult &lt;- basic_table() %&gt;%\n  summarize_coxreg(\n    variables = list(\n      time = \"AVAL\",\n      event = \"is_event\",\n      arm = \"ARM\",\n      covariates = c(\"AGE\", \"BMRKR1\", \"BMRKR2\")\n    ),\n    multivar = TRUE\n  ) %&gt;%\n  append_topleft(\"Effect/Covariate Included in the Model\") %&gt;%\n  build_table(adtte)\n\nresult\n\nEffect/Covariate Included in the Model                 Hazard Ratio      95% CI      p-value\n————————————————————————————————————————————————————————————————————————————————————————————\nTreatment:                                                                                  \n  Description of Planned Arm (reference = A: Drug X)                                 &lt;0.0001\n    B: Placebo                                             1.49       (0.92, 2.40)   0.1037 \n    C: Combination                                         3.91       (2.53, 6.04)   &lt;0.0001\nCovariate:                                                                                  \n  Age                                                                                       \n    All                                                    1.00       (0.99, 1.02)   0.6236 \n  Biomarker (Continuous)                                                                    \n    All                                                    0.98       (0.93, 1.02)   0.3023 \n  Biomarker (Categorical) (reference = LOW)                                          0.6704 \n    MEDIUM                                                 1.00       (0.65, 1.53)   0.9909 \n    HIGH                                                   0.84       (0.56, 1.28)   0.4211 \n\n\n\n\nFor changing the reference levels, for example to use placebo as reference for a treatment arm variable, we can just reorder the levels of the corresponding factor variables, and pass the resulting dataset to the model fitting function as before. The forcats package provides convenience functions for the level reordering.\n\nCodeadtte2 &lt;- adtte %&gt;%\n  mutate(\n    ARM = forcats::fct_relevel(\n      ARM,\n      \"B: Placebo\",\n      \"C: Combination\",\n      \"A: Drug X\"\n    )\n  )\n\n\nNow we can proceed in the same way as in CMT2 above.\n\nCoderesult &lt;- basic_table() %&gt;%\n  summarize_coxreg(\n    variables = list(\n      time = \"AVAL\",\n      event = \"is_event\",\n      arm = \"ARM\",\n      covariates = c(\"AGE\", \"BMRKR1\", \"BMRKR2\")\n    ),\n    multivar = TRUE\n  ) %&gt;%\n  append_topleft(\"Effect/Covariate Included in the Model\") %&gt;%\n  build_table(adtte2)\n\nresult\n\nEffect/Covariate Included in the Model                  Hazard Ratio      95% CI      p-value\n—————————————————————————————————————————————————————————————————————————————————————————————\nTreatment:                                                                                   \n  Description of Planned Arm (reference = B: Placebo)                                 &lt;0.0001\n    C: Combination                                          2.63       (1.70, 4.05)   &lt;0.0001\n    A: Drug X                                               0.67       (0.42, 1.08)   0.1037 \nCovariate:                                                                                   \n  Age                                                                                        \n    All                                                     1.00       (0.99, 1.02)   0.6236 \n  Biomarker (Continuous)                                                                     \n    All                                                     0.98       (0.93, 1.02)   0.3023 \n  Biomarker (Categorical) (reference = LOW)                                           0.6704 \n    MEDIUM                                                  1.00       (0.65, 1.53)   0.9909 \n    HIGH                                                    0.84       (0.56, 1.28)   0.4211 \n\n\n\n\n\nCodesessionInfo()\n\nR version 4.2.2 (2022-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.2 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3\nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.2           tern_0.8.1.9012       rtables_0.6.0.3      \n[4] magrittr_2.0.3        formatters_0.4.1.9001\n\nloaded via a namespace (and not attached):\n [1] compiler_4.2.2    pillar_1.9.0      forcats_1.0.0     tools_4.2.2      \n [5] digest_0.6.31     lattice_0.21-8    jsonlite_1.8.4    evaluate_0.20    \n [9] lifecycle_1.0.3   tibble_3.2.1      gtable_0.3.3      checkmate_2.2.0  \n[13] pkgconfig_2.0.3   rlang_1.1.0       Matrix_1.5-4      cli_3.6.1        \n[17] yaml_2.3.7        xfun_0.39         fastmap_1.1.1     stringr_1.5.0    \n[21] knitr_1.42        generics_0.1.3    vctrs_0.6.2       htmlwidgets_1.6.2\n[25] grid_4.2.2        tidyselect_1.2.0  glue_1.6.2        R6_2.5.1         \n[29] fansi_1.0.4       Rdpack_2.4        survival_3.5-5    rmarkdown_2.21   \n[33] carData_3.0-5     scda_0.1.6.9000   car_3.1-2         ggplot2_3.4.2    \n[37] purrr_1.0.1       tidyr_1.3.0       codetools_0.2-19  splines_4.2.2    \n[41] backports_1.4.1   scales_1.2.1      htmltools_0.5.5   rbibutils_2.2.13 \n[45] abind_1.4-5       colorspace_2.1-0  utf8_1.2.3        stringi_1.7.12   \n[49] munsell_0.5.0     broom_1.0.4"
  },
  {
    "objectID": "tables/cmt03.html",
    "href": "tables/cmt03.html",
    "title": "CMT3",
    "section": "",
    "text": "Setup\nTable\nSession Info\n\n\n\nWe prepare the data in the same way as in CMT1.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"OS\", BEP01FL == \"Y\") %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    event = 1 - CNSR\n  )\n\n\n\n\nThe separate Cox Proportional Hazards models for each covariate can be fitted and summarized in a table using the summarize_coxreg() function in tern. This function takes the same variables, at, and control arguments that are used to fit a model using the fit_coxreg_univar() function - specifying the time, event and covariate in a variables list, and control and at with any further customizations to the model. Note that the default confidence level is 95% but this can be customized via the conf_level element in control.\nWe input these three arguments into the summarize_coxreg() function to summarize the model fit in a table layout, and then build the table with our pre-processed adtte data set.\n\nCodelyt &lt;- basic_table() %&gt;%\n  summarize_coxreg(\n    variables = list(\n      time = \"AVAL\",\n      event = \"event\",\n      covariates = c(\"COUNTRY\", \"AGE\")\n    )\n  )\n\nbuild_table(lyt = lyt, df = adtte)\n\n                              Hazard Ratio      95% CI      p-value\n———————————————————————————————————————————————————————————————————\nCovariate:                                                         \n  Country (reference = CHN)                                 0.8447 \n    USA                           1.36       (0.70, 2.64)   0.3633 \n    BRA                           1.02       (0.55, 1.87)   0.9564 \n    PAK                           1.03       (0.54, 1.94)   0.9316 \n    NGA                           0.97       (0.46, 2.03)   0.9405 \n    RUS                           1.48       (0.64, 3.42)   0.3574 \n    JPN                           1.52       (0.61, 3.76)   0.3686 \n    GBR                           0.75       (0.30, 1.85)   0.5287 \n    CAN                           2.09       (0.65, 6.70)   0.2163 \n  Age                                                              \n    All                           1.01       (0.99, 1.03)   0.5869 \n\n\n\n\n\nCodesessionInfo()\n\nR version 4.2.2 (2022-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.2 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3\nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.2           tern_0.8.1.9012       rtables_0.6.0.3      \n[4] magrittr_2.0.3        formatters_0.4.1.9001\n\nloaded via a namespace (and not attached):\n [1] compiler_4.2.2    pillar_1.9.0      forcats_1.0.0     tools_4.2.2      \n [5] digest_0.6.31     lattice_0.21-8    jsonlite_1.8.4    evaluate_0.20    \n [9] lifecycle_1.0.3   tibble_3.2.1      gtable_0.3.3      checkmate_2.2.0  \n[13] pkgconfig_2.0.3   rlang_1.1.0       Matrix_1.5-4      cli_3.6.1        \n[17] yaml_2.3.7        xfun_0.39         fastmap_1.1.1     stringr_1.5.0    \n[21] knitr_1.42        generics_0.1.3    vctrs_0.6.2       htmlwidgets_1.6.2\n[25] grid_4.2.2        tidyselect_1.2.0  glue_1.6.2        R6_2.5.1         \n[29] fansi_1.0.4       Rdpack_2.4        survival_3.5-5    rmarkdown_2.21   \n[33] carData_3.0-5     scda_0.1.6.9000   car_3.1-2         ggplot2_3.4.2    \n[37] purrr_1.0.1       tidyr_1.3.0       codetools_0.2-19  splines_4.2.2    \n[41] backports_1.4.1   scales_1.2.1      htmltools_0.5.5   rbibutils_2.2.13 \n[45] abind_1.4-5       colorspace_2.1-0  utf8_1.2.3        stringi_1.7.12   \n[49] munsell_0.5.0     broom_1.0.4"
  },
  {
    "objectID": "tables/index.html",
    "href": "tables/index.html",
    "title": "",
    "section": "",
    "text": "Tables\nThis is a collection of Biomarker Analysis table templates."
  },
  {
    "objectID": "session_info.html#session-info",
    "href": "session_info.html#session-info",
    "title": "",
    "section": "Session Info",
    "text": "Session Info\n\nCodesessionInfo()\n\nR version 4.2.2 (2022-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.2 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3\nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nloaded via a namespace (and not attached):\n [1] htmlwidgets_1.6.2 compiler_4.2.2    fastmap_1.1.1     cli_3.6.1        \n [5] tools_4.2.2       htmltools_0.5.5   yaml_2.3.7        rmarkdown_2.21   \n [9] knitr_1.42        jsonlite_1.8.4    xfun_0.39         digest_0.6.31    \n[13] rlang_1.1.0       evaluate_0.20"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "",
    "section": "",
    "text": "Introduction\nThis is a collection of Biomarker Analysis templates including tables and graphs."
  },
  {
    "objectID": "NEWS.html",
    "href": "NEWS.html",
    "title": "",
    "section": "",
    "text": "biomarker.catalog 0.1.0\n\nNew Features\n\nNew catalog!"
  },
  {
    "objectID": "graphs/index.html",
    "href": "graphs/index.html",
    "title": "",
    "section": "",
    "text": "Graphs\nThis is a collection of Biomarker Analysis graph templates."
  }
]