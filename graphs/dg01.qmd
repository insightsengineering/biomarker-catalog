---
title: DG1
subtitle: Histograms of Numeric Variables
---

------------------------------------------------------------------------

::: panel-tabset
## Setup

We will use the `synthetic_cdisc_data$adsl` data set from the `scda` package and `ggplot2` to create the plots.
In this example, we will plot histograms of one or multiple numeric variables.
We start by selecting the biomarker evaluable population with the flag variable `BEP01FL` and then populating a new continuous biomarker variable, `BMRKR3`.

```{r, message = FALSE}
library(tern)
library(ggplot2.utils)
library(dplyr)
library(tibble)
library(tidyr)

adsl <- scda::synthetic_cdisc_data("rcd_2022_06_27")$adsl %>%
  df_explicit_na() %>%
  filter(BEP01FL == "Y") %>%
  mutate(BMRKR3 = rnorm(n(), mean = 7, sd = 2))
```

## Standard Plot

In this example, we will create a combined histogram/density graph of a continuous biomarker variable.
Note that you may run into warning messages after producing the graph if the variable you want to analyze contains NAs.
To avoid these warning messages, you can use the `drop_na()` function from `tidyr` in the data manipulation step above to remove the NAs rows from the dataset (e.g `drop_na(BMRKR1)`).

```{r}
graph <- ggplot(adsl, aes(BMRKR1)) +
  geom_histogram(aes(y = after_stat(density)), bins = 30) +
  geom_density(aes(y = after_stat(density)))

graph
```

We can also calculate some descriptive statistics and populate a table that we can overlay on top of the plot.
The `tibble` function is used to build a data frame `data_tb` with 3 variables.
The `x` and `y` variables represent the coordinates on the plot to show the statistic values and can be modified based on preference.
For example, `x = 1` and `y = 1` will put the statistics table in the top right corner of the graph, while `x = 0` and `y = 0` will put the statistics table in the bottom left corner of the graph.
The `tb` variable contains the statistics to be shown on the plot, in the form of a nested list column starting from the original statistics tibble `orig_tb`.
Finally, we can use the `geom_table_npc()` layer function to process the `data_tb` input and add the statistics table to the existing graph.

```{r}
orig_tb <- with(adsl, tribble(
  ~Statistic, ~Value,
  "N", length(BMRKR1),
  "SD", sd(BMRKR1),
  "Median", median(BMRKR1),
  "Min.", min(BMRKR1),
  "Max.", max(BMRKR1)
))

data_tb <- tibble(x = 1, y = 1, tb = list(orig_tb))

graph <- graph +
  geom_table_npc(data = data_tb, aes(npcx = x, npcy = y, label = tb))

graph
```

## Histograms of Two Numeric Variables (DG1A)

In this example, we will manipulate the variables that we want to show in the graph into a long data format using the `pivot_longer()` function from `tidyr`.
This is necessary such that below we can use the faceting layer `facet_grid()` to plot each variable in its own facet.

```{r}
num_var_long <- adsl %>%
  pivot_longer(
    c(BMRKR1, BMRKR3),
    names_to = "var",
    values_to = "value"
  ) %>%
  select(var, value)
```

Producing the base plot is then simple: We use the same code as above but just add the faceting layer.

```{r}
graph <- ggplot(num_var_long, aes(value)) +
  geom_histogram(aes(y = after_stat(density)), bins = 30) +
  geom_density(aes(y = after_stat(density))) +
  facet_grid(var ~ .)

graph
```

Similar to the DG1 example, we will calculate and populate the statistics table to accompany the plot.
Note that also here we can use the `pivot_longer()` function to also obtain the statistics table input `orig_tb` and then `data_tb` in long format, and thus parallel to the biomarker variable format in `num_var_long`.

```{r}
orig_tb <- num_var_long %>%
  group_by(var) %>%
  summarize_at("value", list(mean = mean, median = median)) %>%
  pivot_longer(
    c(mean, median),
    names_to = "Statistic",
    values_to = "Value"
  )

data_tb <- orig_tb %>%
  group_by(var) %>%
  summarize(x = 1, y = 1, tb = list(tibble(Statistic, Value)))

graph <- graph +
  geom_table_npc(data = data_tb, aes(npcx = x, npcy = y, label = tb))

graph
```

## Histogram of One Numeric Variable by Treatment Arm (DG1B)

Below example shows histograms for the `BMRKR1` variable by treatment `ARM`.
Including a statistics table in this graph works in the same way as we did above for DG1A.

```{r}
graph <- ggplot(adsl, aes(BMRKR1)) +
  geom_histogram(aes(y = after_stat(density)), bins = 30) +
  geom_density(aes(y = after_stat(density))) +
  facet_grid(ARM ~ .)

graph
```

{{< include ../session_info.qmd >}}
:::
