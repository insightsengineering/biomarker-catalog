---
title: RFG2
subtitle: Response Forest Graphs for Comparing Continuous Biomarker Effects Across Subgroups
---

------------------------------------------------------------------------

::: panel-tabset
## Setup

These templates are helpful when we are interested in modelling the effects of continuous biomarker variables on the binary response outcome, conditional on covariates and/or stratification variables included in (conditional) logistic regression models.
We would like to assess how the estimates effects change when we look at different subgroups.

In detail the differences to [RFG1](../graphs/rfg01.qmd) are the following:

-   The `extract_rsp_subgroups()` and `tabulate_rsp_subgroups()` functions used in RFG1 evaluate the treatment effects from two arms, across subgroups. On the other hand, the `extract_rsp_biomarkers()` and `tabulate_rsp_biomarkers()` functions used here in RFG2 evaluate the effects from continuous biomarkers on the probability for response.
-   The `extract_rsp_subgroups()` and `tabulate_rsp_subgroups()` functions only allow specification of a single treatment arm variable, while the `extract_rsp_biomarkers()` and `tabulate_rsp_biomarkers()` allow to look at multiple continuous biomarker variables at once.
-   In addition to the treatment arms, the use of `extract_rsp_subgroups()` and `tabulate_rsp_subgroups()` functions can be extended to other binary variables. For example, we could define the binarized `ARM` variable as `AGE>=65` vs. `AGE<65` and then look at the odds ratios across subgroups. For the `extract_rsp_biomarkers()` and `tabulate_rsp_biomarkers()` functions, we could use the original continuous biomarker variable `AGE`, and then look at the estimated effect across subgroups.

Similarly like in [RFG1](../graphs/rfg01.qmd), we will use the `synthetic_cdisc_data$adrs` data set from the `scda` package.
Here we just filter for the Best Confirmed Overall Response by Investigator and patients with measurable disease at baseline, and define a new variable `COMPRESP` to include complete responses only.

```{r, message = FALSE}
library(tern)
library(dplyr)
library(hermes)

adrs <- scda::synthetic_cdisc_data("latest")$adrs

adrs_f <- adrs %>%
  df_explicit_na() %>%
  filter(PARAMCD == "BESRSPI", BMEASIFL == "Y") %>%
  mutate(COMPRESP = (AVALC == "CR"))
```

## Response Forest Graph for Multiple Continuous Biomarkers (RFG2A)

Here we specify that we would like to analyze the two continuous biomarkers `BMRKR1` and `AGE`, conditional on the covariate `SEX`, in the subgroups defined by the levels of `BMRKR2`.

```{r}
df <- extract_rsp_biomarkers(
  variables = list(
    rsp = "COMPRESP",
    biomarkers = c("BMRKR1", "AGE"),
    covariates = "SEX",
    subgroups = "BMRKR2"
  ),
  data = adrs_f
)

result <- tabulate_rsp_biomarkers(df, vars = c("n_tot", "n_rsp", "prop", "or", "ci"))
```

We can look at the result in the console already.

```{r}
result
```

Note that in addition to the `Categorical Level Biomarker 2` subgroups we automatically also get the estimates for the overall patient population.

We can then produce the final forest plot using the `g_forest()` function on this tabular result.

```{r, fig.width = 15}
g_forest(result, xlim = c(0.7, 1.4))
```

## Response Forest Graph for Multiple Continuous Biomarkers by Manual Subgroup Categories (RFG2B)

It is also possible to join and select subgroup categories manually using the `groups_lists` argument, as follows.

```{r, fig.width = 15}
df <- extract_rsp_biomarkers(
  variables = list(
    rsp = "COMPRESP",
    biomarkers = c("BMRKR1", "AGE"),
    covariates = "SEX",
    subgroups = "BMRKR2"
  ),
  data = adrs_f,
  groups_list = list(
    BMRKR2 = list(
      one = c("LOW", "MEDIUM"),
      two = "HIGH"
    )
  )
)

result <- tabulate_rsp_biomarkers(df, vars = c("n_tot", "n_rsp", "prop", "or", "ci"))
g_forest(result, xlim = c(0.7, 1.4))
```

## Response Forest Graph for Multiple Continuous Biomarkers with Stratification (RFG2C)

Finally we can also specify stratification variables with the `strat` variable element, which leads to the use of conditional logistic regression models.

```{r, fig.width = 15}
df <- extract_rsp_biomarkers(
  variables = list(
    rsp = "COMPRESP",
    biomarkers = c("BMRKR1", "AGE"),
    covariates = "SEX",
    subgroups = "BMRKR2",
    strat = c("STRATA1", "STRATA2")
  ),
  data = adrs_f
)

result <- tabulate_rsp_biomarkers(df, vars = c("n_tot", "n_rsp", "prop", "or", "ci"))
g_forest(result, xlim = c(0.7, 1.4))
```

{{< include ../session_info.qmd >}}
:::
