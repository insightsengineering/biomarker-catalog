[
  {
    "objectID": "tables/DT2/setup.html#setup",
    "href": "tables/DT2/setup.html#setup",
    "title": "",
    "section": "Setup",
    "text": "Setup\nThe tables below compare the biomarker evaluable population (BEP, below in the table “BEP Yes”) with the remainder non-BEP (“BEP No”) within each treatment arm with regards to selected demographic variables.\nWe will use the cadsl data set from the random.cdisc.data package to illustrate the tables.\nIn order to compare the BEP with the non-BEP, we only need to split columns on the BEP flag variable BEP01FL that categorises the evaluable and non evaluable subgroups. For readability in the tables, we define a separate label variable BEP_label below which is parallel to the original flag variable.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadsl &lt;- random.cdisc.data::cadsl %&gt;%\n  df_explicit_na() %&gt;%\n  mutate(\n    BEP_label = case_when(\n      BEP01FL == \"Y\" ~ \"BEP Yes\",\n      BEP01FL == \"N\" ~ \"BEP No\"\n    )\n  )\n\n\nThis can then be used by the rtables layout function split_cols_by() below."
  },
  {
    "objectID": "tables/DT2/dt02a.html",
    "href": "tables/DT2/dt02a.html",
    "title": "DT2A",
    "section": "",
    "text": "Setup\nTable\nSession Info\n\n\n\nThe tables below compare the biomarker evaluable population (BEP, below in the table “BEP Yes”) with the remainder non-BEP (“BEP No”) within each treatment arm with regards to selected demographic variables.\nWe will use the synthetic_cdisc_data$adsl data set from the scda package to illustrate the tables.\nIn order to compare the BEP with the non-BEP, we only need to split columns on the BEP flag variable BEP01FL that categorises the evaluable and non evaluable subgroups. For readability in the tables, we define a separate label variable BEP_label below which is parallel to the original flag variable.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadsl &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adsl %&gt;%\n  df_explicit_na() %&gt;%\n  mutate(\n    BEP_label = case_when(\n      BEP01FL == \"Y\" ~ \"BEP Yes\",\n      BEP01FL == \"N\" ~ \"BEP No\"\n    )\n  )\n\n\nThis can then be used by the rtables layout function split_cols_by() below.\n\n\nThe demographics table DT2A splits the columns by treatment arm and by BEP vs. non-BEP, summarizes selected demographic variables in the rows and performs tests to compare demographic variables between Non-BEP vs. BEP population. Note that p-values can be NA when the test could not be performed due to row counts being all zero, e.g.\n\nCodelyt &lt;- basic_table() %&gt;%\n  split_cols_by(\"ARM\") %&gt;%\n  add_colcounts() %&gt;%\n  split_cols_by(\"BEP01FL\", labels_var = \"BEP_label\", ref_group = \"Y\") %&gt;%\n  compare_vars(c(\"AGE\", \"SEX\"))\n\nbuild_table(lyt, adsl)\n\n                                      A: Drug X                B: Placebo              C: Combination     \n                                BEP Yes       BEP No      BEP Yes       BEP No      BEP Yes       BEP No  \n                                 (N=68)       (N=66)       (N=63)       (N=71)       (N=66)       (N=66)  \n——————————————————————————————————————————————————————————————————————————————————————————————————————————\nAGE                                                                                                       \n  n                                68           66           63           71           66           66    \n  Mean (SD)                    32.9 (6.6)   34.6 (6.5)   35.7 (8.3)   35.2 (7.6)   35.1 (8.1)   35.8 (7.3)\n  p-value (t-test)                            0.1384                    0.6846                    0.6139  \nSEX                                                                                                       \n  n                                68           66           63           71           66           66    \n  F                            44 (64.7%)    35 (53%)    42 (66.7%)   40 (56.3%)   40 (60.6%)   30 (45.5%)\n  M                            24 (35.3%)    31 (47%)    21 (33.3%)   31 (43.7%)   26 (39.4%)   36 (54.5%)\n  p-value (chi-squared test)                  0.2309                    0.2951                    0.1165  \n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.3.9016       rtables_0.6.6.9010   \n[4] magrittr_2.0.3        formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.6-5      gtable_0.3.4      jsonlite_1.8.8    compiler_4.3.2   \n [5] tidyselect_1.2.0  tidyr_1.3.1       splines_4.3.2     scales_1.3.0     \n [9] yaml_2.3.8        fastmap_1.1.1     lattice_0.22-5    ggplot2_3.4.4    \n[13] R6_2.5.1          generics_0.1.3    knitr_1.45        forcats_1.0.0    \n[17] rbibutils_2.2.16  htmlwidgets_1.6.4 backports_1.4.1   checkmate_2.3.1  \n[21] tibble_3.2.1      munsell_0.5.0     scda_0.1.6.9016   pillar_1.9.0     \n[25] rlang_1.1.3       utf8_1.2.4        stringi_1.8.3     broom_1.0.5      \n[29] xfun_0.41         cli_3.6.2         Rdpack_2.6        digest_0.6.34    \n[33] grid_4.3.2        lifecycle_1.0.4   vctrs_0.6.5       evaluate_0.23    \n[37] glue_1.7.0        codetools_0.2-19  survival_3.5-7    fansi_1.0.6      \n[41] colorspace_2.1-0  rmarkdown_2.25    purrr_1.0.2       tools_4.3.2      \n[45] pkgconfig_2.0.3   htmltools_0.5.7  \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Tables",
      "DT",
      "DT2",
      "DT2A"
    ]
  },
  {
    "objectID": "tables/DT1/dt01a.html",
    "href": "tables/DT1/dt01a.html",
    "title": "DT1A",
    "section": "",
    "text": "Setup\nTable\nSession Info\n\n\n\nThe tables below compare the overall population (“All”) with the biomarker evaluable population (“BEP”) with regards to selected demographic variables.\nWe will use the synthetic_cdisc_data$adsl data set from the scda package to illustrate the tables. We add a second artificial BEP flag variable BEP02FL.\nIn order to compare All with BEP, we need to define a list bep_groups defining these two groups. The reason is that these two groups are overlapping (BEP is a subset of All). Here, we refer in the list elements to the levels Y and N of the biomarker population flag variable BEP01FL from adsl which we will use below:\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nset.seed(123)\nadsl &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adsl %&gt;%\n  df_explicit_na() %&gt;%\n  mutate(BEP02FL = factor(sample(c(\"Y\", \"N\"), size = n(), replace = TRUE)))\n\nbep_groups &lt;- list(\n  \"All\" = c(\"Y\", \"N\"),\n  \"BEP\" = \"Y\"\n)\n\n\nThis can then be used by the tern layout function split_cols_by_groups() below.\n\n\nWe can reorder the treatment arm columns in the demographics table DT1 by using the reorder_split_levels() splitting function in split_cols_by() as done here.\n\nCodelyt &lt;- basic_table() %&gt;%\n  split_cols_by(\"ARM\", split_fun = reorder_split_levels(c(\"B: Placebo\", \"A: Drug X\", \"C: Combination\"))) %&gt;%\n  split_cols_by_groups(\"BEP01FL\", bep_groups) %&gt;%\n  summarize_vars(c(\"AGE\", \"SEX\")) %&gt;%\n  add_colcounts()\n\nWarning: `summarize_vars()` was deprecated in tern 0.8.5.9010.\nℹ Please use `analyze_vars()` instead.\n\nCodebuild_table(lyt, adsl)\n\n                     B: Placebo                   A: Drug X                C: Combination      \n                  All           BEP           All           BEP           All           BEP    \n                (N=134)       (N=63)        (N=134)       (N=68)        (N=132)       (N=66)   \n———————————————————————————————————————————————————————————————————————————————————————————————\nAGE                                                                                            \n  n               134           63            134           68            132           66     \n  Mean (SD)   35.4 (7.9)    35.7 (8.3)    33.8 (6.6)    32.9 (6.6)    35.4 (7.7)    35.1 (8.1) \n  Median         35.0          35.0          33.0          32.0          35.0          34.0    \n  Min - Max   21.0 - 62.0   23.0 - 62.0   21.0 - 50.0   21.0 - 50.0   20.0 - 69.0   21.0 - 69.0\nSEX                                                                                            \n  n               134           63            134           68            132           66     \n  F           82 (61.2%)    42 (66.7%)     79 (59%)     44 (64.7%)     70 (53%)     40 (60.6%) \n  M           52 (38.8%)    21 (33.3%)     55 (41%)     24 (35.3%)     62 (47%)     26 (39.4%) \n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.3.9016       rtables_0.6.6.9010   \n[4] magrittr_2.0.3        formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.6-5      gtable_0.3.4      jsonlite_1.8.8    compiler_4.3.2   \n [5] tidyselect_1.2.0  tidyr_1.3.1       splines_4.3.2     scales_1.3.0     \n [9] yaml_2.3.8        fastmap_1.1.1     lattice_0.22-5    ggplot2_3.4.4    \n[13] R6_2.5.1          generics_0.1.3    knitr_1.45        forcats_1.0.0    \n[17] rbibutils_2.2.16  htmlwidgets_1.6.4 backports_1.4.1   checkmate_2.3.1  \n[21] tibble_3.2.1      munsell_0.5.0     scda_0.1.6.9016   pillar_1.9.0     \n[25] rlang_1.1.3       utf8_1.2.4        stringi_1.8.3     broom_1.0.5      \n[29] xfun_0.41         cli_3.6.2         Rdpack_2.6        digest_0.6.34    \n[33] grid_4.3.2        lifecycle_1.0.4   vctrs_0.6.5       evaluate_0.23    \n[37] glue_1.7.0        codetools_0.2-19  survival_3.5-7    fansi_1.0.6      \n[41] colorspace_2.1-0  rmarkdown_2.25    purrr_1.0.2       tools_4.3.2      \n[45] pkgconfig_2.0.3   htmltools_0.5.7  \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Tables",
      "DT",
      "DT1",
      "DT1A"
    ]
  },
  {
    "objectID": "tables/DT1/dt01.html",
    "href": "tables/DT1/dt01.html",
    "title": "DT1",
    "section": "",
    "text": "Setup\nTable\nSession Info\n\n\n\nThe tables below compare the overall population (“All”) with the biomarker evaluable population (“BEP”) with regards to selected demographic variables.\nWe will use the synthetic_cdisc_data$adsl data set from the scda package to illustrate the tables. We add a second artificial BEP flag variable BEP02FL.\nIn order to compare All with BEP, we need to define a list bep_groups defining these two groups. The reason is that these two groups are overlapping (BEP is a subset of All). Here, we refer in the list elements to the levels Y and N of the biomarker population flag variable BEP01FL from adsl which we will use below:\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nset.seed(123)\nadsl &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adsl %&gt;%\n  df_explicit_na() %&gt;%\n  mutate(BEP02FL = factor(sample(c(\"Y\", \"N\"), size = n(), replace = TRUE)))\n\nbep_groups &lt;- list(\n  \"All\" = c(\"Y\", \"N\"),\n  \"BEP\" = \"Y\"\n)\n\n\nThis can then be used by the tern layout function split_cols_by_groups() below.\n\n\nThe simplest demographics table DT1 splits the columns by treatment arm and All vs. BEP, and summarizes selected demographic variables in the rows.\n\nCodelyt &lt;- basic_table() %&gt;%\n  split_cols_by(\"ARM\") %&gt;%\n  split_cols_by_groups(\"BEP01FL\", bep_groups) %&gt;%\n  summarize_vars(c(\"AGE\", \"SEX\")) %&gt;%\n  add_colcounts()\n\nWarning: `summarize_vars()` was deprecated in tern 0.8.5.9010.\nℹ Please use `analyze_vars()` instead.\n\nCodebuild_table(lyt, adsl)\n\n                      A: Drug X                  B: Placebo                C: Combination      \n                  All           BEP           All           BEP           All           BEP    \n                (N=134)       (N=68)        (N=134)       (N=63)        (N=132)       (N=66)   \n———————————————————————————————————————————————————————————————————————————————————————————————\nAGE                                                                                            \n  n               134           68            134           63            132           66     \n  Mean (SD)   33.8 (6.6)    32.9 (6.6)    35.4 (7.9)    35.7 (8.3)    35.4 (7.7)    35.1 (8.1) \n  Median         33.0          32.0          35.0          35.0          35.0          34.0    \n  Min - Max   21.0 - 50.0   21.0 - 50.0   21.0 - 62.0   23.0 - 62.0   20.0 - 69.0   21.0 - 69.0\nSEX                                                                                            \n  n               134           68            134           63            132           66     \n  F            79 (59%)     44 (64.7%)    82 (61.2%)    42 (66.7%)     70 (53%)     40 (60.6%) \n  M            55 (41%)     24 (35.3%)    52 (38.8%)    21 (33.3%)     62 (47%)     26 (39.4%) \n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.3.9016       rtables_0.6.6.9010   \n[4] magrittr_2.0.3        formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.6-5      gtable_0.3.4      jsonlite_1.8.8    compiler_4.3.2   \n [5] tidyselect_1.2.0  tidyr_1.3.1       splines_4.3.2     scales_1.3.0     \n [9] yaml_2.3.8        fastmap_1.1.1     lattice_0.22-5    ggplot2_3.4.4    \n[13] R6_2.5.1          generics_0.1.3    knitr_1.45        forcats_1.0.0    \n[17] rbibutils_2.2.16  htmlwidgets_1.6.4 backports_1.4.1   checkmate_2.3.1  \n[21] tibble_3.2.1      munsell_0.5.0     scda_0.1.6.9016   pillar_1.9.0     \n[25] rlang_1.1.3       utf8_1.2.4        stringi_1.8.3     broom_1.0.5      \n[29] xfun_0.41         cli_3.6.2         Rdpack_2.6        digest_0.6.34    \n[33] grid_4.3.2        lifecycle_1.0.4   vctrs_0.6.5       evaluate_0.23    \n[37] glue_1.7.0        codetools_0.2-19  survival_3.5-7    fansi_1.0.6      \n[41] colorspace_2.1-0  rmarkdown_2.25    purrr_1.0.2       tools_4.3.2      \n[45] pkgconfig_2.0.3   htmltools_0.5.7  \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Tables",
      "DT"
    ]
  },
  {
    "objectID": "tables/CPMT2/cpmt02.html",
    "href": "tables/CPMT2/cpmt02.html",
    "title": "CPMT2",
    "section": "",
    "text": "Setup\nTable\nSession Info\n\n\n\nWe prepare the data similarly as in CPMT1.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"OS\", BEP01FL == \"Y\") %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0\n  ) %&gt;%\n  var_relabel(\n    BMRKR1 = \"Biomarker (Continuous)\",\n    BMRKR2 = \"Biomarker (Categorical)\"\n  )\n\n\n\n\nThe multivariate Cox Proportional Hazards model can be displayed in a summary table using the summarize_coxreg function from tern with the multivar argument set to TRUE. Like the corresponding model fitting function fit_coxreg_multivar(), we specify the time, event, arm and covariates in a variables list, and any further customizations via the control argument. Note that the default confidence level is 95% but this can be customized via the conf_level element in control.\nRather than fitting the model and then tidying the output via the broom::tidy() function, we can directly input these three arguments into the summarize_coxreg() function to summarize the model fit in a table layout, building the table with our pre-processed adtte data set.\n\nCoderesult &lt;- basic_table() %&gt;%\n  summarize_coxreg(\n    variables = list(\n      time = \"AVAL\",\n      event = \"is_event\",\n      arm = \"ARM\",\n      covariates = c(\"AGE\", \"BMRKR1\", \"BMRKR2\")\n    ),\n    multivar = TRUE\n  ) %&gt;%\n  append_topleft(\"Effect/Covariate Included in the Model\") %&gt;%\n  build_table(adtte)\n\nresult\n\nEffect/Covariate Included in the Model                 Hazard Ratio      95% CI      p-value\n————————————————————————————————————————————————————————————————————————————————————————————\nTreatment:                                                                                  \n  Description of Planned Arm (reference = A: Drug X)                                 &lt;0.0001\n    B: Placebo                                             1.49       (0.92, 2.40)   0.1037 \n    C: Combination                                         3.91       (2.53, 6.04)   &lt;0.0001\nCovariate:                                                                                  \n  Age                                                                                       \n    All                                                    1.00       (0.99, 1.02)   0.6236 \n  Biomarker (Continuous)                                                                    \n    All                                                    0.98       (0.93, 1.02)   0.3023 \n  Biomarker (Categorical) (reference = LOW)                                          0.6704 \n    MEDIUM                                                 1.00       (0.65, 1.53)   0.9909 \n    HIGH                                                   0.84       (0.56, 1.28)   0.4211 \n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.3.9016       rtables_0.6.6.9010   \n[4] magrittr_2.0.3        formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.6-5      gtable_0.3.4      jsonlite_1.8.8    compiler_4.3.2   \n [5] tidyselect_1.2.0  stringr_1.5.1     tidyr_1.3.1       splines_4.3.2    \n [9] scales_1.3.0      yaml_2.3.8        fastmap_1.1.1     lattice_0.22-5   \n[13] ggplot2_3.4.4     R6_2.5.1          generics_0.1.3    knitr_1.45       \n[17] forcats_1.0.0     rbibutils_2.2.16  htmlwidgets_1.6.4 backports_1.4.1  \n[21] checkmate_2.3.1   tibble_3.2.1      car_3.1-2         munsell_0.5.0    \n[25] scda_0.1.6.9016   pillar_1.9.0      rlang_1.1.3       utf8_1.2.4       \n[29] stringi_1.8.3     broom_1.0.5       xfun_0.41         cli_3.6.2        \n[33] Rdpack_2.6        digest_0.6.34     grid_4.3.2        lifecycle_1.0.4  \n[37] vctrs_0.6.5       evaluate_0.23     glue_1.7.0        codetools_0.2-19 \n[41] abind_1.4-5       survival_3.5-7    carData_3.0-5     fansi_1.0.6      \n[45] colorspace_2.1-0  rmarkdown_2.25    purrr_1.0.2       tools_4.3.2      \n[49] pkgconfig_2.0.3   htmltools_0.5.7  \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Tables",
      "CPMT",
      "CPMT2"
    ]
  },
  {
    "objectID": "tables/CPMT2/cpmt02a.html",
    "href": "tables/CPMT2/cpmt02a.html",
    "title": "CPMT2A",
    "section": "",
    "text": "Setup\nTable\nSession Info\n\n\n\nWe prepare the data similarly as in CPMT1.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"OS\", BEP01FL == \"Y\") %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0\n  ) %&gt;%\n  var_relabel(\n    BMRKR1 = \"Biomarker (Continuous)\",\n    BMRKR2 = \"Biomarker (Categorical)\"\n  )\n\n\n\n\nFor changing the reference levels, for example to use placebo as reference for a treatment arm variable, we can just reorder the levels of the corresponding factor variables, and pass the resulting dataset to the model fitting function as before. The forcats package provides convenience functions for the level reordering.\n\nCodeadtte2 &lt;- adtte %&gt;%\n  mutate(\n    ARM = forcats::fct_relevel(\n      ARM,\n      \"B: Placebo\",\n      \"C: Combination\",\n      \"A: Drug X\"\n    )\n  )\n\n\nNow we can proceed in the same way as in CPMT2.\n\nCoderesult &lt;- basic_table() %&gt;%\n  summarize_coxreg(\n    variables = list(\n      time = \"AVAL\",\n      event = \"is_event\",\n      arm = \"ARM\",\n      covariates = c(\"AGE\", \"BMRKR1\", \"BMRKR2\")\n    ),\n    multivar = TRUE\n  ) %&gt;%\n  append_topleft(\"Effect/Covariate Included in the Model\") %&gt;%\n  build_table(adtte2)\n\nresult\n\nEffect/Covariate Included in the Model                  Hazard Ratio      95% CI      p-value\n—————————————————————————————————————————————————————————————————————————————————————————————\nTreatment:                                                                                   \n  Description of Planned Arm (reference = B: Placebo)                                 &lt;0.0001\n    C: Combination                                          2.63       (1.70, 4.05)   &lt;0.0001\n    A: Drug X                                               0.67       (0.42, 1.08)   0.1037 \nCovariate:                                                                                   \n  Age                                                                                        \n    All                                                     1.00       (0.99, 1.02)   0.6236 \n  Biomarker (Continuous)                                                                     \n    All                                                     0.98       (0.93, 1.02)   0.3023 \n  Biomarker (Categorical) (reference = LOW)                                           0.6704 \n    MEDIUM                                                  1.00       (0.65, 1.53)   0.9909 \n    HIGH                                                    0.84       (0.56, 1.28)   0.4211 \n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.3.9016       rtables_0.6.6.9010   \n[4] magrittr_2.0.3        formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.6-5      gtable_0.3.4      jsonlite_1.8.8    compiler_4.3.2   \n [5] tidyselect_1.2.0  stringr_1.5.1     tidyr_1.3.1       splines_4.3.2    \n [9] scales_1.3.0      yaml_2.3.8        fastmap_1.1.1     lattice_0.22-5   \n[13] ggplot2_3.4.4     R6_2.5.1          generics_0.1.3    knitr_1.45       \n[17] forcats_1.0.0     rbibutils_2.2.16  htmlwidgets_1.6.4 backports_1.4.1  \n[21] checkmate_2.3.1   tibble_3.2.1      car_3.1-2         munsell_0.5.0    \n[25] scda_0.1.6.9016   pillar_1.9.0      rlang_1.1.3       utf8_1.2.4       \n[29] stringi_1.8.3     broom_1.0.5       xfun_0.41         cli_3.6.2        \n[33] Rdpack_2.6        digest_0.6.34     grid_4.3.2        lifecycle_1.0.4  \n[37] vctrs_0.6.5       evaluate_0.23     glue_1.7.0        codetools_0.2-19 \n[41] abind_1.4-5       survival_3.5-7    carData_3.0-5     fansi_1.0.6      \n[45] colorspace_2.1-0  rmarkdown_2.25    purrr_1.0.2       tools_4.3.2      \n[49] pkgconfig_2.0.3   htmltools_0.5.7  \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Tables",
      "CPMT",
      "CPMT2",
      "CPMT2A"
    ]
  },
  {
    "objectID": "tables/index.html",
    "href": "tables/index.html",
    "title": "Tables",
    "section": "",
    "text": "This is a collection of Biomarker Analysis table templates.\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nTitle\n\n\nSubtitle\n\n\n\n\n\n\nCPMT1\n\n\nCox Proportional Hazards Model Tables with a Single Covariate\n\n\n\n\nCPMT2\n\n\nCox Proportional Hazards Model Tables with Multiple Covariates\n\n\n\n\nCPMT2A\n\n\nChanging Reference Levels in the Cox Proportional Hazards Model Table\n\n\n\n\nCPMT3\n\n\nCox Proportional Hazards Model Tables with Separate Models for Each Covariate\n\n\n\n\nDT1\n\n\nDemographics Tables Comparing BEP vs. Overall Population\n\n\n\n\nDT1A\n\n\nReorder Treatment Arms in Demographics Table\n\n\n\n\nDT1B\n\n\nCombine Treatment Arms in Demographics Table\n\n\n\n\nDT1C\n\n\nAlternative BEP Indicator in Demographics Table\n\n\n\n\nDT2\n\n\nDemographics Tables Comparing BEP vs. non-BEP Population\n\n\n\n\nDT2A\n\n\nDemographics Table Allowing Testing to Compare Demographic Variables Between Non-BEP vs. BEP population\n\n\n\n\nTET1\n\n\nTime-to-Event Summary Tables\n\n\n\n\nTET1A\n\n\nTime-to-Event Summary Table with Stratified Analysis\n\n\n\n\n\nNo matching items\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Tables"
    ]
  },
  {
    "objectID": "tables/TET1/setup.html#setup",
    "href": "tables/TET1/setup.html#setup",
    "title": "",
    "section": "Setup",
    "text": "Setup\nWe will use the cadtte data set from the random.cdisc.data package for the time-to-event summary table. We start by filtering the adtte data set for the overall survival observations, converting time of overall survival to months, creating new variables for event and non-event information and binarizing the ARM variable.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte &lt;- random.cdisc.data::cadtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(\n    PARAMCD == \"OS\"\n  ) %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0,\n    is_not_event = CNSR == 1,\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = c(\"B: Placebo\"),\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    )\n  )"
  },
  {
    "objectID": "tables/TET1/tet01.html",
    "href": "tables/TET1/tet01.html",
    "title": "TET1",
    "section": "",
    "text": "Setup\nTable\nSession Info\n\n\n\nWe will use the synthetic_cdisc_data$adtte data set from the scda package for the time-to-event summary table. We start by filtering the adtte data set for the overall survival observations, converting time of overall survival to months, creating new variables for event and non-event information and binarizing the ARM variable.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(\n    PARAMCD == \"OS\"\n  ) %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0,\n    is_not_event = CNSR == 1,\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = c(\"B: Placebo\"),\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    )\n  )\n\n\n\n\nThis time-to-event summary table splits the columns by treatment arm using split_cols_by(), creates a summary for patients with and without event using summarize_vars(), summarizes survival time using surv_time() and summarizes the analysis from unstratified Cox Proportional Hazards models using coxph_pairwise().\n\nCodelyt &lt;- basic_table() %&gt;%\n  split_cols_by(\n    var = \"ARM_BIN\",\n    ref_group = \"CTRL\"\n  ) %&gt;%\n  add_colcounts() %&gt;%\n  summarize_vars(\n    vars = \"is_event\",\n    .stats = \"count_fraction\",\n    .labels = c(count_fraction = \"Patients with event (%)\"),\n    nested = FALSE,\n    show_labels = \"hidden\"\n  ) %&gt;%\n  summarize_vars(\n    vars = \"is_not_event\",\n    .stats = \"count_fraction\",\n    .labels = c(count_fraction = \"Patients without event (%)\"),\n    nested = FALSE,\n    show_labels = \"hidden\"\n  ) %&gt;%\n  surv_time(\n    vars = \"AVAL\",\n    var_labels = \"Time to Event (months)\",\n    is_event = \"is_event\",\n    table_names = \"time_to_event\"\n  ) %&gt;%\n  coxph_pairwise(\n    vars = \"AVAL\",\n    is_event = \"is_event\",\n    var_labels = c(\"Unstratified Analysis\"),\n    control = control_coxph(pval_method = \"log-rank\"),\n    table_names = \"coxph_unstratified\"\n  )\n\nWarning: `summarize_vars()` was deprecated in tern 0.8.5.9010.\nℹ Please use `analyze_vars()` instead.\n\nCodebuild_table(lyt, adtte)\n\n                                 CTRL             TRT       \n                               (N=134)          (N=266)     \n————————————————————————————————————————————————————————————\nPatients with event (%)       87 (64.9%)      195 (73.3%)   \nPatients without event (%)    47 (35.1%)       71 (26.7%)   \nTime to Event (months)                                      \n  Median                         27.5             21.3      \n    95% CI                   (17.3, 30.2)     (16.3, 25.6)  \n  25% and 75%-ile             9.5, 54.9        7.1, 50.9    \n  Range                      0.0 to 122.4   0.1 to 154.7 {1}\nUnstratified Analysis                                       \n  p-value (log-rank)                             0.2146     \n  Hazard Ratio                                    1.17      \n  95% CI                                      (0.91, 1.51)  \n————————————————————————————————————————————————————————————\n\n{1} - Censored observation: range maximum\n————————————————————————————————————————————————————————————\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.3.9016       rtables_0.6.6.9010   \n[4] magrittr_2.0.3        formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.6-5      gtable_0.3.4      jsonlite_1.8.8    compiler_4.3.2   \n [5] tidyselect_1.2.0  tidyr_1.3.1       splines_4.3.2     scales_1.3.0     \n [9] yaml_2.3.8        fastmap_1.1.1     lattice_0.22-5    ggplot2_3.4.4    \n[13] R6_2.5.1          generics_0.1.3    knitr_1.45        forcats_1.0.0    \n[17] rbibutils_2.2.16  htmlwidgets_1.6.4 backports_1.4.1   checkmate_2.3.1  \n[21] tibble_3.2.1      munsell_0.5.0     scda_0.1.6.9016   pillar_1.9.0     \n[25] rlang_1.1.3       utf8_1.2.4        stringi_1.8.3     broom_1.0.5      \n[29] xfun_0.41         cli_3.6.2         Rdpack_2.6        digest_0.6.34    \n[33] grid_4.3.2        lifecycle_1.0.4   vctrs_0.6.5       evaluate_0.23    \n[37] glue_1.7.0        codetools_0.2-19  survival_3.5-7    fansi_1.0.6      \n[41] colorspace_2.1-0  rmarkdown_2.25    purrr_1.0.2       tools_4.3.2      \n[45] pkgconfig_2.0.3   htmltools_0.5.7  \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Tables",
      "TET"
    ]
  },
  {
    "objectID": "graphs/dg04.html",
    "href": "graphs/dg04.html",
    "title": "DG4",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nThe graph below plots two continuous (biomarker) variables against each other.\nWe will use the cadsl data set from the random.cdisc.data package to illustrate the graph and will select the biomarker evaluable population with BEP01FL. The columns AGE and BMRKR1 contain the biomarker values of interest on a continuous scale.\n\nCodelibrary(tern)\nlibrary(ggplot2.utils)\nlibrary(dplyr)\n\nadsl &lt;- random.cdisc.data::cadsl %&gt;%\n  df_explicit_na() %&gt;%\n  filter(BEP01FL == \"Y\")\n\n\n\n\nHere is an example first on the original scale. Note that you may run into warning messages after producing the graph if the continuous variable you want to analyze contains NAs. To avoid these warning messages, you can use the drop_na() function from tidyr in the data manipulation step above to remove the NAs rows from the dataset (e.g drop_na(AGE, BMRKR1)).\n\nCodegraph &lt;- ggplot(adsl, aes(x = AGE, y = BMRKR1)) +\n  geom_point()\n\ngraph +\n  labs(x = \"Age (Years)\", y = \"Biomarker (Units)\")\n\n\n\n\n\n\n\nWe can also plot it on a log scale.\n\nCodegraph +\n  scale_y_log10() +\n  labs(x = \"Age (Years)\", y = \"Biomarker (Log(Units))\")\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.4.0 (2024-04-24)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 22.04.4 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           ggplot2.utils_0.3.1   ggplot2_3.5.1        \n[4] tern_0.9.4.9008       rtables_0.6.7.9002    magrittr_2.0.3       \n[7] formatters_0.5.6.9005\n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.4                    generics_0.1.3               \n [3] tidyr_1.3.1                   EnvStats_2.8.1               \n [5] stringi_1.8.4                 lattice_0.22-6               \n [7] digest_0.6.35                 evaluate_0.23                \n [9] grid_4.4.0                    fastmap_1.2.0                \n[11] jsonlite_1.8.8                Matrix_1.7-0                 \n[13] backports_1.4.1               survival_3.6-4               \n[15] purrr_1.0.2                   fansi_1.0.6                  \n[17] scales_1.3.0                  codetools_0.2-20             \n[19] Rdpack_2.6                    cli_3.6.2                    \n[21] ggpp_0.5.7                    rlang_1.1.3                  \n[23] rbibutils_2.2.16              munsell_0.5.1                \n[25] splines_4.4.0                 withr_3.0.0                  \n[27] yaml_2.3.8                    tools_4.4.0                  \n[29] polynom_1.4-1                 checkmate_2.3.1              \n[31] colorspace_2.1-0              forcats_1.0.0                \n[33] ggstats_0.6.0                 broom_1.0.6                  \n[35] vctrs_0.6.5                   R6_2.5.1                     \n[37] lifecycle_1.0.4               stringr_1.5.1                \n[39] htmlwidgets_1.6.4             MASS_7.3-60.2                \n[41] pkgconfig_2.0.3               pillar_1.9.0                 \n[43] gtable_0.3.5                  glue_1.7.0                   \n[45] xfun_0.44                     tibble_3.2.1                 \n[47] tidyselect_1.2.1              knitr_1.46                   \n[49] farver_2.1.2                  htmltools_0.5.8.1            \n[51] labeling_0.4.3                rmarkdown_2.27               \n[53] random.cdisc.data_0.3.15.9004 compiler_4.4.0               \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "DG",
      "DG4"
    ]
  },
  {
    "objectID": "graphs/RFG1/setup.html#setup",
    "href": "graphs/RFG1/setup.html#setup",
    "title": "",
    "section": "Setup",
    "text": "Setup\nThese templates are helpful when we are interested in the odds ratios between two groups, usually two treatment arms. We would like to assess how the odds ratio changes when we look at different subgroups, often defined by categorical biomarker variables, e.g.\nWe will use the cadrs data set from the random.cdisc.data package to create the response forest graph. We start by filtering the adrs data set for the Best Confirmed Overall Response by Investigator and patients with measurable disease at baseline (BMEASIFL == \"Y\"). We create a new variable for response information (we define response patients to include CR and PR patients), and binarize the ARM variable. We also fix a data artifact by setting the categorical biomarker variable BMRKR2 to an explicit &lt;Missing&gt; level for the non-biomarker evaluable population.\nWe also relabel the biomarker evaluable population flag variable BEP01FL and the categorical biomarker variable BMRKR2 to update the display label of these variables in the graph.\n\nCodelibrary(tern)\nlibrary(ggplot2.utils)\nlibrary(dplyr)\n\nadrs &lt;- random.cdisc.data::cadrs %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"BESRSPI\", BMEASIFL == \"Y\") %&gt;%\n  mutate(\n    is_rsp = AVALC %in% c(\"CR\", \"PR\"),\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = c(\"B: Placebo\"),\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    ),\n    BMRKR2 = fct_explicit_na_if(BMRKR2, BEP01FL == \"N\")\n  ) %&gt;%\n  var_relabel(\n    BEP01FL = \"BEP\",\n    BMRKR2 = \"Biomarker (Categorical)\"\n  )"
  },
  {
    "objectID": "graphs/KG2/kg02.html",
    "href": "graphs/KG2/kg02.html",
    "title": "KG2",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nThe same setup as in KG1 is used.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte &lt;- random.cdisc.data::cadtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"OS\") %&gt;%\n  mutate(is_event = CNSR == 0)\n\nvariables &lt;- list(tte = \"AVAL\", is_event = \"is_event\", arm = \"ARM\")\n\n\n\n\nWe can produce the basic plot using the g_km() function from tern.\n\nCodeg_km(\n  df = adtte,\n  variables = variables,\n  annot_surv_med = FALSE\n)\n\n\n\n\n\n\n\nWe can also choose to annotate the plot with the median survival time for each of the treatment arms using the annot_surv_med = TRUE option.\n\nCodeg_km(\n  df = adtte,\n  variables = variables,\n  annot_surv_med = TRUE\n)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.4.0 (2024-04-24)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 22.04.4 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.4.9008       rtables_0.6.7.9002   \n[4] magrittr_2.0.3        formatters_0.5.6.9005\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.7-0                  gtable_0.3.5                 \n [3] jsonlite_1.8.8                compiler_4.4.0               \n [5] tidyselect_1.2.1              stringr_1.5.1                \n [7] tidyr_1.3.1                   splines_4.4.0                \n [9] scales_1.3.0                  yaml_2.3.8                   \n[11] fastmap_1.2.0                 lattice_0.22-6               \n[13] ggplot2_3.5.1                 R6_2.5.1                     \n[15] labeling_0.4.3                generics_0.1.3               \n[17] knitr_1.46                    forcats_1.0.0                \n[19] rbibutils_2.2.16              htmlwidgets_1.6.4            \n[21] backports_1.4.1               checkmate_2.3.1              \n[23] tibble_3.2.1                  munsell_0.5.1                \n[25] pillar_1.9.0                  rlang_1.1.3                  \n[27] utf8_1.2.4                    stringi_1.8.4                \n[29] broom_1.0.6                   xfun_0.44                    \n[31] cli_3.6.2                     withr_3.0.0                  \n[33] Rdpack_2.6                    digest_0.6.35                \n[35] grid_4.4.0                    cowplot_1.1.3                \n[37] lifecycle_1.0.4               vctrs_0.6.5                  \n[39] evaluate_0.23                 glue_1.7.0                   \n[41] farver_2.1.2                  codetools_0.2-20             \n[43] survival_3.6-4                random.cdisc.data_0.3.15.9004\n[45] fansi_1.0.6                   colorspace_2.1-0             \n[47] rmarkdown_2.27                purrr_1.0.2                  \n[49] tools_4.4.0                   pkgconfig_2.0.3              \n[51] htmltools_0.5.8.1            \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "KG",
      "KG2"
    ]
  },
  {
    "objectID": "graphs/KG2/kg02a.html",
    "href": "graphs/KG2/kg02a.html",
    "title": "KG2A",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nThe same setup as in KG1 is used.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte &lt;- random.cdisc.data::cadtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"OS\") %&gt;%\n  mutate(is_event = CNSR == 0)\n\nvariables &lt;- list(tte = \"AVAL\", is_event = \"is_event\", arm = \"ARM\")\n\n\n\n\nThe line color and line type in the plot can be customized using the col and lty arguments of g_km(), respectively. Note that the order of the levels of the treatment arm factor variable is matched with the order of the colors.\n\nCodeg_km(\n  df = adtte,\n  variables = variables,\n  annot_surv_med = TRUE,\n  col = c(\"purple\", \"orange\", \"red\"),\n  lty = 5\n)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.4.0 (2024-04-24)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 22.04.4 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.4.9008       rtables_0.6.7.9002   \n[4] magrittr_2.0.3        formatters_0.5.6.9005\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.7-0                  gtable_0.3.5                 \n [3] jsonlite_1.8.8                compiler_4.4.0               \n [5] tidyselect_1.2.1              stringr_1.5.1                \n [7] tidyr_1.3.1                   splines_4.4.0                \n [9] scales_1.3.0                  yaml_2.3.8                   \n[11] fastmap_1.2.0                 lattice_0.22-6               \n[13] ggplot2_3.5.1                 R6_2.5.1                     \n[15] labeling_0.4.3                generics_0.1.3               \n[17] knitr_1.46                    forcats_1.0.0                \n[19] rbibutils_2.2.16              htmlwidgets_1.6.4            \n[21] backports_1.4.1               checkmate_2.3.1              \n[23] tibble_3.2.1                  munsell_0.5.1                \n[25] pillar_1.9.0                  rlang_1.1.3                  \n[27] utf8_1.2.4                    stringi_1.8.4                \n[29] broom_1.0.6                   xfun_0.44                    \n[31] cli_3.6.2                     withr_3.0.0                  \n[33] Rdpack_2.6                    digest_0.6.35                \n[35] grid_4.4.0                    cowplot_1.1.3                \n[37] lifecycle_1.0.4               vctrs_0.6.5                  \n[39] evaluate_0.23                 glue_1.7.0                   \n[41] farver_2.1.2                  codetools_0.2-20             \n[43] survival_3.6-4                random.cdisc.data_0.3.15.9004\n[45] fansi_1.0.6                   colorspace_2.1-0             \n[47] rmarkdown_2.27                purrr_1.0.2                  \n[49] tools_4.4.0                   pkgconfig_2.0.3              \n[51] htmltools_0.5.8.1            \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "KG",
      "KG2",
      "KG2A"
    ]
  },
  {
    "objectID": "graphs/SFG5/sfg05a.html",
    "href": "graphs/SFG5/sfg05a.html",
    "title": "SFG5A",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nWe prepare the data similarly as in SFG1.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nAGE_probs &lt;- 0.5\n\nadtte &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(\n    PARAMCD == \"OS\"\n  ) %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0,\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = \"B: Placebo\",\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    ),\n    AGE_BIN = cut_quantile_bins(AGE, probs = AGE_probs),\n    BMRKR2 = fct_explicit_na_if(BMRKR2, BEP01FL == \"N\"),\n    BMRKR2_BIN = fct_collapse_only(\n      BMRKR2,\n      High = \"HIGH\",\n      Low = c(\"MEDIUM\", \"LOW\")\n    )\n  ) %&gt;%\n  var_relabel(\n    BEP01FL = \"BEP\",\n    BMRKR2_BIN = \"Biomarker (Binary)\"\n  )\n\n\n\n\nThe main difference here is that we ensure that col_info is aligned across all subtables before using rbind() to combine subtables. (Generally this is worth trying out if the rbind() does not work out of the box to combine subtables.)\n\nCodetables_all &lt;- function(filter_var, filter_condition, sub_var) {\n  dataset &lt;- adtte %&gt;%\n    filter(!!as.name(filter_var) == filter_condition)\n  if (nrow(dataset) == 0) {\n    stop(paste(\"Subset\", filter_var, \"==\", filter_condition, \"is empty\"))\n  }\n  tbl &lt;- extract_survival_subgroups(\n    variables = list(\n      tte = \"AVAL\",\n      is_event = \"is_event\",\n      arm = \"ARM_BIN\",\n      subgroups = sub_var\n    ),\n    label_all = \"ITT\",\n    data = dataset\n  )\n  basic_table() %&gt;%\n    tabulate_survival_subgroups(\n      df = tbl,\n      vars = c(\"n_tot_events\", \"n\", \"n_events\", \"median\", \"hr\", \"ci\"),\n      time_unit = dataset$AVALU[1]\n    )\n}\n\nadd_subtitle &lt;- function(sub_tab, sub_title) {\n  label_at_path(sub_tab, path = row_paths(sub_tab)[[1]][1]) &lt;- sub_title\n  sub_tab\n}\n\ntables_list &lt;- list(\n  tables_all(filter_var = \"BMRKR2_BIN\", filter_condition = \"High\", sub_var = \"SEX\"),\n  tables_all(filter_var = \"BMRKR2_BIN\", filter_condition = \"Low\", sub_var = \"SEX\"),\n  tables_all(filter_var = \"BMRKR2_BIN\", filter_condition = \"High\", sub_var = \"AGE_BIN\"),\n  tables_all(filter_var = \"BMRKR2_BIN\", filter_condition = \"Low\", sub_var = \"AGE_BIN\")\n)\ncol_info(tables_list[[2]]) &lt;- col_info(tables_list[[1]])\nresult &lt;- rbind(\n  add_subtitle(tables_list[[1]], \"BMRKR2_BIN = High\"),\n  add_subtitle(tables_list[[2]], \"BMRKR2_BIN = Low\"),\n  add_subtitle(tables_list[[3]], \"BMRKR2_BIN = High\"),\n  add_subtitle(tables_list[[4]], \"BMRKR2_BIN = Low\")\n)\n\n\nWe can now produce the forest plot using the g_forest() function.\n\nCodeone_table &lt;- tables_list[[1]]\ng_forest(\n  result,\n  col_x = attr(one_table, \"col_x\"),\n  col_ci = attr(one_table, \"col_ci\"),\n  forest_header = attr(one_table, \"forest_header\"),\n  col_symbol_size = attr(one_table, \"col_symbol_size\")\n)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.3.9016       rtables_0.6.6.9010   \n[4] magrittr_2.0.3        formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.6-5      gtable_0.3.4      jsonlite_1.8.8    compiler_4.3.2   \n [5] tidyselect_1.2.0  tidyr_1.3.1       splines_4.3.2     scales_1.3.0     \n [9] yaml_2.3.8        fastmap_1.1.1     lattice_0.22-5    ggplot2_3.4.4    \n[13] R6_2.5.1          labeling_0.4.3    generics_0.1.3    knitr_1.45       \n[17] forcats_1.0.0     rbibutils_2.2.16  htmlwidgets_1.6.4 backports_1.4.1  \n[21] checkmate_2.3.1   tibble_3.2.1      munsell_0.5.0     scda_0.1.6.9016  \n[25] pillar_1.9.0      rlang_1.1.3       utf8_1.2.4        stringi_1.8.3    \n[29] broom_1.0.5       xfun_0.41         cli_3.6.2         withr_3.0.0      \n[33] Rdpack_2.6        digest_0.6.34     grid_4.3.2        cowplot_1.1.3    \n[37] lifecycle_1.0.4   vctrs_0.6.5       evaluate_0.23     glue_1.7.0       \n[41] farver_2.1.1      codetools_0.2-19  survival_3.5-7    fansi_1.0.6      \n[45] colorspace_2.1-0  rmarkdown_2.25    purrr_1.0.2       tools_4.3.2      \n[49] pkgconfig_2.0.3   htmltools_0.5.7  \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "SFG",
      "SFG5",
      "SFG5A"
    ]
  },
  {
    "objectID": "graphs/SFG5/sfg05c.html",
    "href": "graphs/SFG5/sfg05c.html",
    "title": "SFG5C",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nWe prepare the data similarly as in SFG1.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nAGE_probs &lt;- 0.5\n\nadtte &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(\n    PARAMCD == \"OS\"\n  ) %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0,\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = \"B: Placebo\",\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    ),\n    AGE_BIN = cut_quantile_bins(AGE, probs = AGE_probs),\n    BMRKR2 = fct_explicit_na_if(BMRKR2, BEP01FL == \"N\"),\n    BMRKR2_BIN = fct_collapse_only(\n      BMRKR2,\n      High = \"HIGH\",\n      Low = c(\"MEDIUM\", \"LOW\")\n    )\n  ) %&gt;%\n  var_relabel(\n    BEP01FL = \"BEP\",\n    BMRKR2_BIN = \"Biomarker (Binary)\"\n  )\n\n\n\n\nFirst, we derive a new variable AGE_BIN2 with three bins for age, in a similar way as we derived AGE_BIN above. We then use the same tables_all() function above and combine all subtables using rbind() to tabulate statistics to be able to use as an input for forest plot.\n\nCodetables_all &lt;- function(filter_var, filter_condition, sub_var) {\n  dataset &lt;- adtte %&gt;%\n    filter(!!as.name(filter_var) == filter_condition)\n  if (nrow(dataset) == 0) {\n    stop(paste(\"Subset\", filter_var, \"==\", filter_condition, \"is empty\"))\n  }\n  tbl &lt;- extract_survival_subgroups(\n    variables = list(\n      tte = \"AVAL\",\n      is_event = \"is_event\",\n      arm = \"ARM_BIN\",\n      subgroups = sub_var\n    ),\n    label_all = \"ITT\",\n    data = dataset\n  )\n  basic_table() %&gt;%\n    tabulate_survival_subgroups(\n      df = tbl,\n      vars = c(\"n_tot_events\", \"n\", \"n_events\", \"median\", \"hr\", \"ci\"),\n      time_unit = dataset$AVALU[1]\n    )\n}\n\nadd_subtitle &lt;- function(sub_tab, sub_title) {\n  label_at_path(sub_tab, path = row_paths(sub_tab)[[1]][1]) &lt;- sub_title\n  sub_tab\n}\n\nAGE_probs2 &lt;- c(0.33, 0.66)\n\nadtte &lt;- adtte %&gt;%\n  mutate(AGE_BIN2 = cut_quantile_bins(AGE, probs = AGE_probs2))\ntables_list &lt;- list(\n  tables_all(filter_var = \"AGE_BIN2\", filter_condition = \"[0%,33%]\", sub_var = \"BMRKR2_BIN\"),\n  tables_all(filter_var = \"AGE_BIN2\", filter_condition = \"(33%,66%]\", sub_var = \"BMRKR2_BIN\"),\n  tables_all(filter_var = \"AGE_BIN2\", filter_condition = \"(66%,100%]\", sub_var = \"BMRKR2_BIN\")\n)\n\n\nWe can now produce the forest plot using the g_forest() function.\n\nCodeone_table &lt;- tables_list[[1]]\nresult &lt;- rbind(\n  add_subtitle(tables_list[[1]], \"AGE_BIN2 = [0%,33%]\"),\n  add_subtitle(tables_list[[2]], \"AGE_BIN2 = (33%,66%]\"),\n  add_subtitle(tables_list[[3]], \"AGE_BIN = (66%,100%]\")\n)\ng_forest(\n  result,\n  col_x = attr(one_table, \"col_x\"),\n  col_ci = attr(one_table, \"col_ci\"),\n  forest_header = attr(one_table, \"forest_header\"),\n  col_symbol_size = attr(one_table, \"col_symbol_size\")\n)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.3.9016       rtables_0.6.6.9010   \n[4] magrittr_2.0.3        formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.6-5      gtable_0.3.4      jsonlite_1.8.8    compiler_4.3.2   \n [5] tidyselect_1.2.0  tidyr_1.3.1       splines_4.3.2     scales_1.3.0     \n [9] yaml_2.3.8        fastmap_1.1.1     lattice_0.22-5    ggplot2_3.4.4    \n[13] R6_2.5.1          labeling_0.4.3    generics_0.1.3    knitr_1.45       \n[17] forcats_1.0.0     rbibutils_2.2.16  htmlwidgets_1.6.4 backports_1.4.1  \n[21] checkmate_2.3.1   tibble_3.2.1      munsell_0.5.0     scda_0.1.6.9016  \n[25] pillar_1.9.0      rlang_1.1.3       utf8_1.2.4        stringi_1.8.3    \n[29] broom_1.0.5       xfun_0.41         cli_3.6.2         withr_3.0.0      \n[33] Rdpack_2.6        digest_0.6.34     grid_4.3.2        cowplot_1.1.3    \n[37] lifecycle_1.0.4   vctrs_0.6.5       evaluate_0.23     glue_1.7.0       \n[41] farver_2.1.1      codetools_0.2-19  survival_3.5-7    fansi_1.0.6      \n[45] colorspace_2.1-0  rmarkdown_2.25    purrr_1.0.2       tools_4.3.2      \n[49] pkgconfig_2.0.3   htmltools_0.5.7  \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "SFG",
      "SFG5",
      "SFG5C"
    ]
  },
  {
    "objectID": "graphs/ag01.html",
    "href": "graphs/ag01.html",
    "title": "AG1",
    "section": "",
    "text": "Purpose\nSetup\nTitle, Axis and Caption Labels\nCoordinates\nThemes\nScales\nFaceting\nTitles, Footnotes, and Page Numbers\nSession Info\n\n\n\nIn this page we collect standard utilities for plotting which can be applied in principle to all graphs. Then we don’t need to repeat explaining these in each of the other graph pages. So it is kind of a cheat sheet for ggplot2. General introductions to ggplot2 and a pdf cheatsheet are also recommended and linked at https://ggplot2.tidyverse.org/.\n\n\nWe start by creating a graph. Note that we load our ggplot2.utils NEST package instead of ggplot2 so we benefit from additional utilities selected from the ggplot2 extension package ecosystem. Note that ggplot2.utils automatically loads also ggplot2, there we do not need to do that manually.\nWe also typically apply the df_explicit_na() function to the incoming dataset to convert character to factor variables, and code missing values as an explicit factor level, which avoids downstream problems.\nNote that you may still run into warning messages after producing some of the graphs if a continuous variable you want to analyze contains NAs. To avoid these warning messages, you can use the drop_na() function from tidyr in the data manipulation step below to remove the rows containing NAs for the specific numeric column (e.g. drop_na(BMRKR1) to remove rows where BMRKR1 is missing).\n\nCodelibrary(tern)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(ggplot2.utils)\n\nadsl &lt;- random.cdisc.data::cadsl %&gt;%\n  df_explicit_na() %&gt;%\n  drop_na(BMRKR1)\n\ngraph &lt;- ggplot(adsl, aes(BMRKR1)) +\n  geom_histogram(aes(y = after_stat(density)), bins = 30) +\n  geom_density(aes(y = after_stat(density)))\n\ngraph\n\n\n\n\n\n\n\nAnother possibility is to add na.rm = TRUE option to the ggplot() arguments, or alternatively select() the relevant variables and then delete any rows with missing values by na.omit() and finally pipe that to ggplot().\n\nCodeggplot(adsl, aes(BMRKR1), na.rm = TRUE) +\n  geom_histogram(aes(y = after_stat(density)), bins = 30) +\n  geom_density(aes(y = after_stat(density)))\n\n\n\n\n\n\nCodeadsl %&gt;%\n  select(BMRKR1) %&gt;%\n  na.omit() %&gt;%\n  ggplot(aes(BMRKR1)) +\n  geom_histogram(aes(y = after_stat(density)), bins = 30) +\n  geom_density(aes(y = after_stat(density)))\n\n\n\n\n\n\n\n\n\nTitle, subtitle, axis as well as caption labels can be added with the labs() layer. Alternatively specific tern functions can be used, see [Titles and Footnotes] below.\n\nCodegraph + labs(\n  x = \"Baseline Biomarker\",\n  y = \"Density\",\n  title = \"Distribution of the Baseline Biomarker\",\n  subtitle = \"Histogram and Density Plot\",\n  caption = \"Note: No outliers have been removed here.\"\n)\n\n\n\n\n\n\n\n\n\nWe can change the coordinate system with coord_*() layers, e.g. to rotate the plot.\n\nCodegraph + coord_flip()\n\n\n\n\n\n\n\nWe can set the limits of the coordinate axes with coord_cartesian(). This performs a real zoom into the plot, instead of just replacing outside values with NA as xlim() or lims() are doing it. It is therefore preferred.\n\nCodegraph +\n  coord_cartesian(xlim = c(0, 15), ylim = c(0, 0.3)) +\n  labs(caption = \"Note: biomarker values greater than 15 are not shown on this plot.\")\n\n\n\n\n\n\n\n\n\nGeneral plot theme can be specified with theme_*() functions. The default theme is theme_gray(). For example in publications other themes might be preferred, such as theme_classic().\n\nCodegraph + theme_classic()\n\n\n\n\n\n\n\n\n\nMany different scales mapping data values to visual values of an aesthetic are available in scale_*() functions.\nWe can change the location scale easily, for example to show x on a log scale:\n\nCodegraph + scale_x_log10()\n\n\n\n\n\n\n\n\n\nFaceting is an elegant approach to create the same graph separately for each of the levels of one or multiple other factors. It can just be added as an additional layer to the existing graph. For example, we can show the distribution of the biomarker for each of the gender levels.\n\nCodegraph + facet_grid(~SEX)\n\n\n\n\n\n\n\n\n\nNEST provides a function to add titles, footnotes, and page numbers to grob objects (read: graphical objects) with tern::decorate_grob().\nFirst, we need to prepare the pieces: graph, titles/footnotes. A ggplot object must be converted to a grob. We can use ggplot::ggplotGrob() to accomplish this easily.\nTitles and footnotes can be defined as vectors where each element is a new line. Tip: The paste() function can be helpful to split long sentences across multiple lines.\n\nCodegrob_graph &lt;- ggplotGrob(graph)\n\ntitles &lt;- c(\n  \"Distribution of the Baseline Biomarker 1\",\n  \"Biomarker Evaluable Patients\",\n  \"Protocol: AB12345 (Data Cut: 01 JAN 2021)\"\n)\n\nfootnotes &lt;- c(\n  \"Biomarker 1 = Gene ABC\",\n  \"Data Cut-off: 01 JAN 2021; RAVE Data Extracted: 15 JAN 2021\",\n  \"Program: biomark1_analysis.R\"\n)\n\n\nNow that the pieces are ready, we can put them together. The grid package allows us to manipulate grobs. Using grid::grid.draw() we can apply tern::decorate_grob() to our object, thus adding the titles/footnotes.\n\nCodelibrary(grid)\n\ngrid.newpage()\ngrid.draw(\n  decorate_grob(\n    grob = grob_graph,\n    titles = titles,\n    footnotes = footnotes,\n    page = \"Page 6 of 129\"\n  )\n)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.4.0 (2024-04-24)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 22.04.4 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] grid      stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n[1] ggplot2.utils_0.3.1   ggplot2_3.5.1         dplyr_1.1.4          \n[4] tidyr_1.3.1           tern_0.9.4.9008       rtables_0.6.7.9002   \n[7] magrittr_2.0.3        formatters_0.5.6.9005\n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.4                    generics_0.1.3               \n [3] EnvStats_2.8.1                stringi_1.8.4                \n [5] lattice_0.22-6                digest_0.6.35                \n [7] evaluate_0.23                 fastmap_1.2.0                \n [9] jsonlite_1.8.8                Matrix_1.7-0                 \n[11] backports_1.4.1               survival_3.6-4               \n[13] purrr_1.0.2                   fansi_1.0.6                  \n[15] scales_1.3.0                  codetools_0.2-20             \n[17] Rdpack_2.6                    cli_3.6.2                    \n[19] ggpp_0.5.7                    rlang_1.1.3                  \n[21] rbibutils_2.2.16              munsell_0.5.1                \n[23] splines_4.4.0                 withr_3.0.0                  \n[25] yaml_2.3.8                    tools_4.4.0                  \n[27] polynom_1.4-1                 checkmate_2.3.1              \n[29] colorspace_2.1-0              forcats_1.0.0                \n[31] ggstats_0.6.0                 broom_1.0.6                  \n[33] vctrs_0.6.5                   R6_2.5.1                     \n[35] lifecycle_1.0.4               stringr_1.5.1                \n[37] htmlwidgets_1.6.4             MASS_7.3-60.2                \n[39] pkgconfig_2.0.3               pillar_1.9.0                 \n[41] gtable_0.3.5                  glue_1.7.0                   \n[43] xfun_0.44                     tibble_3.2.1                 \n[45] tidyselect_1.2.1              knitr_1.46                   \n[47] farver_2.1.2                  htmltools_0.5.8.1            \n[49] labeling_0.4.3                rmarkdown_2.27               \n[51] random.cdisc.data_0.3.15.9004 compiler_4.4.0               \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "AG"
    ]
  },
  {
    "objectID": "graphs/KG1/kg01a.html",
    "href": "graphs/KG1/kg01a.html",
    "title": "KG1A",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nWe will use the cadtte data set from the random.cdisc.data package to create the Kaplan-Meier (KM) plots. We start by filtering the time-to-event dataset for the overall survival observations and by one treatment arm (A), creating a new variable for event information, and curating a list of variables required to produce the plot.\n\nCodelibrary(tern)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(grid)\n\nadtte_arm &lt;- random.cdisc.data::cadtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"OS\", ARM == \"A: Drug X\") %&gt;%\n  mutate(is_event = CNSR == 0)\n\nvariables &lt;- list(tte = \"AVAL\", is_event = \"is_event\", arm = \"ARM\")\n\n\n\n\nWe can filter the dataset further for the biomarker evaluable population using the corresponding flag variable, here BEP01FL:\n\nCodeadtte_arm_bep &lt;- adtte_arm %&gt;%\n  filter(BEP01FL == \"Y\")\n\n\nAfterwards we can plot the basic KM graph, just using the further filtered dataset adtte_bep. Here we annotate the plot with median survival time, but could suppress it with annot_surv_med = FALSE.\n\nCodeg_km(\n  df = adtte_arm_bep,\n  variables = variables,\n  annot_surv_med = TRUE,\n  rel_height_plot = 0.85\n)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.4.0 (2024-04-24)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 22.04.4 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] grid      stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n[1] ggplot2_3.5.1         dplyr_1.1.4           tern_0.9.4.9008      \n[4] rtables_0.6.7.9002    magrittr_2.0.3        formatters_0.5.6.9005\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.7-0                  gtable_0.3.5                 \n [3] jsonlite_1.8.8                compiler_4.4.0               \n [5] tidyselect_1.2.1              stringr_1.5.1                \n [7] tidyr_1.3.1                   splines_4.4.0                \n [9] scales_1.3.0                  yaml_2.3.8                   \n[11] fastmap_1.2.0                 lattice_0.22-6               \n[13] R6_2.5.1                      labeling_0.4.3               \n[15] generics_0.1.3                knitr_1.46                   \n[17] forcats_1.0.0                 rbibutils_2.2.16             \n[19] htmlwidgets_1.6.4             backports_1.4.1              \n[21] checkmate_2.3.1               tibble_3.2.1                 \n[23] munsell_0.5.1                 pillar_1.9.0                 \n[25] rlang_1.1.3                   utf8_1.2.4                   \n[27] stringi_1.8.4                 broom_1.0.6                  \n[29] xfun_0.44                     cli_3.6.2                    \n[31] withr_3.0.0                   Rdpack_2.6                   \n[33] digest_0.6.35                 cowplot_1.1.3                \n[35] lifecycle_1.0.4               vctrs_0.6.5                  \n[37] evaluate_0.23                 glue_1.7.0                   \n[39] farver_2.1.2                  codetools_0.2-20             \n[41] survival_3.6-4                random.cdisc.data_0.3.15.9004\n[43] fansi_1.0.6                   colorspace_2.1-0             \n[45] rmarkdown_2.27                purrr_1.0.2                  \n[47] tools_4.4.0                   pkgconfig_2.0.3              \n[49] htmltools_0.5.8.1            \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "KG",
      "KG1",
      "KG1A"
    ]
  },
  {
    "objectID": "graphs/KG1/kg01.html",
    "href": "graphs/KG1/kg01.html",
    "title": "KG1",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nWe will use the cadtte data set from the random.cdisc.data package to create the Kaplan-Meier (KM) plots. We start by filtering the time-to-event dataset for the overall survival observations and by one treatment arm (A), creating a new variable for event information, and curating a list of variables required to produce the plot.\n\nCodelibrary(tern)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(grid)\n\nadtte_arm &lt;- random.cdisc.data::cadtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"OS\", ARM == \"A: Drug X\") %&gt;%\n  mutate(is_event = CNSR == 0)\n\nvariables &lt;- list(tte = \"AVAL\", is_event = \"is_event\", arm = \"ARM\")\n\n\n\n\nWe can produce the basic graph using the g_km() function from tern.\n\nCodeg_km(\n  df = adtte_arm,\n  variables = variables,\n  annot_surv_med = FALSE,\n  rel_height_plot = 0.85\n)\n\n\n\n\n\n\n\nWe can also choose to annotate the graph with the median survival time for the overall population using the annot_surv_med = TRUE option.\n\nCodeg_km(\n  df = adtte_arm,\n  variables = variables,\n  annot_surv_med = TRUE,\n  rel_height_plot = 0.85\n)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.4.0 (2024-04-24)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 22.04.4 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] grid      stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n[1] ggplot2_3.5.1         dplyr_1.1.4           tern_0.9.4.9008      \n[4] rtables_0.6.7.9002    magrittr_2.0.3        formatters_0.5.6.9005\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.7-0                  gtable_0.3.5                 \n [3] jsonlite_1.8.8                compiler_4.4.0               \n [5] tidyselect_1.2.1              stringr_1.5.1                \n [7] tidyr_1.3.1                   splines_4.4.0                \n [9] scales_1.3.0                  yaml_2.3.8                   \n[11] fastmap_1.2.0                 lattice_0.22-6               \n[13] R6_2.5.1                      labeling_0.4.3               \n[15] generics_0.1.3                knitr_1.46                   \n[17] forcats_1.0.0                 rbibutils_2.2.16             \n[19] htmlwidgets_1.6.4             backports_1.4.1              \n[21] checkmate_2.3.1               tibble_3.2.1                 \n[23] munsell_0.5.1                 pillar_1.9.0                 \n[25] rlang_1.1.3                   utf8_1.2.4                   \n[27] stringi_1.8.4                 broom_1.0.6                  \n[29] xfun_0.44                     cli_3.6.2                    \n[31] withr_3.0.0                   Rdpack_2.6                   \n[33] digest_0.6.35                 cowplot_1.1.3                \n[35] lifecycle_1.0.4               vctrs_0.6.5                  \n[37] evaluate_0.23                 glue_1.7.0                   \n[39] farver_2.1.2                  codetools_0.2-20             \n[41] survival_3.6-4                random.cdisc.data_0.3.15.9004\n[43] fansi_1.0.6                   colorspace_2.1-0             \n[45] rmarkdown_2.27                purrr_1.0.2                  \n[47] tools_4.4.0                   pkgconfig_2.0.3              \n[49] htmltools_0.5.8.1            \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "KG"
    ]
  },
  {
    "objectID": "graphs/sfg04.html",
    "href": "graphs/sfg04.html",
    "title": "SFG4",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nWe prepare the data similarly as in SFG1.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte &lt;- random.cdisc.data::cadtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(\n    PARAMCD == \"OS\",\n    BEP01FL == \"Y\"\n  ) %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0,\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = \"B: Placebo\",\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    )\n  ) %&gt;%\n  var_relabel(\n    BEP01FL = \"BEP\",\n    BMRKR1 = \"Biomarker (Countinuous)\"\n  )\n\n\n\n\nWe define a vector of all cutpoints to use for a numeric biomarker (here BMRKR1). We lapply() over this vector, each time generating a binary factor variable BMRKR1_cut and then tabulating the resulting statistics similar to SFG3, this time including the treatment arms in the subgroups argument. Then we rbind() all tables in the list together.\n\nCodeall_cutpoints &lt;- c(2.5, 5, 7.5, 10)\n\ntables_all_cutpoints &lt;- lapply(all_cutpoints, function(cutpoint) {\n  adtte_cut &lt;- adtte %&gt;%\n    mutate(\n      BMRKR1_cut = explicit_na(factor(\n        ifelse(BMRKR1 &gt; cutpoint, \"Greater\", \"Less\")\n      ))\n    )\n  tbl &lt;- extract_survival_subgroups(\n    variables = list(\n      tte = \"AVAL\",\n      is_event = \"is_event\",\n      arm = \"BMRKR1_cut\",\n      subgroups = \"ARM_BIN\"\n    ),\n    label_all = paste0(\"BMRKR1 (\", cutpoint, \")\"),\n    data = adtte_cut\n  )\n  basic_table() %&gt;%\n    tabulate_survival_subgroups(\n      df = tbl,\n      vars = c(\"n_tot_events\", \"n\", \"n_events\", \"median\", \"hr\", \"ci\"),\n      time_unit = adtte_cut$AVALU[1]\n    )\n})\n\nresult &lt;- do.call(rbind, tables_all_cutpoints)\n\n\nWe can now produce the forest plot using the g_forest() function. Similarly as in SFG3 we need to specify the col_x, col_y and forest_header arguments for g_forest() by recovering them from one of the original tables.\n\nCodeone_table &lt;- tables_all_cutpoints[[1]]\ng_forest(\n  result,\n  col_x = attr(one_table, \"col_x\"),\n  col_ci = attr(one_table, \"col_ci\"),\n  forest_header = attr(one_table, \"forest_header\"),\n  col_symbol_size = attr(one_table, \"col_symbol_size\")\n)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.4.0 (2024-04-24)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 22.04.4 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.4.9008       rtables_0.6.7.9002   \n[4] magrittr_2.0.3        formatters_0.5.6.9005\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.7-0                  gtable_0.3.5                 \n [3] jsonlite_1.8.8                compiler_4.4.0               \n [5] tidyselect_1.2.1              stringr_1.5.1                \n [7] tidyr_1.3.1                   splines_4.4.0                \n [9] scales_1.3.0                  yaml_2.3.8                   \n[11] fastmap_1.2.0                 lattice_0.22-6               \n[13] ggplot2_3.5.1                 R6_2.5.1                     \n[15] labeling_0.4.3                generics_0.1.3               \n[17] knitr_1.46                    forcats_1.0.0                \n[19] rbibutils_2.2.16              htmlwidgets_1.6.4            \n[21] backports_1.4.1               checkmate_2.3.1              \n[23] tibble_3.2.1                  munsell_0.5.1                \n[25] pillar_1.9.0                  rlang_1.1.3                  \n[27] utf8_1.2.4                    stringi_1.8.4                \n[29] broom_1.0.6                   xfun_0.44                    \n[31] cli_3.6.2                     withr_3.0.0                  \n[33] Rdpack_2.6                    digest_0.6.35                \n[35] grid_4.4.0                    cowplot_1.1.3                \n[37] lifecycle_1.0.4               vctrs_0.6.5                  \n[39] evaluate_0.23                 glue_1.7.0                   \n[41] farver_2.1.2                  codetools_0.2-20             \n[43] survival_3.6-4                random.cdisc.data_0.3.15.9004\n[45] fansi_1.0.6                   colorspace_2.1-0             \n[47] rmarkdown_2.27                purrr_1.0.2                  \n[49] tools_4.4.0                   pkgconfig_2.0.3              \n[51] htmltools_0.5.8.1            \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "SFG",
      "SFG4"
    ]
  },
  {
    "objectID": "graphs/rnag05.html",
    "href": "graphs/rnag05.html",
    "title": "RNAG5",
    "section": "",
    "text": "Setup: Import and Filter\nDifferential Gene Expression Analysis via Limma-Voom Method\nDifferential Gene Expression Analysis via DESeq2 Method\nAdditional Arguments\nPlot Differential Gene Expression in Volcano Graph\nTeal Module for Sample Differential Gene Expression\nSession Info\n\n\n\nThis page can be used as a template of how to use the available hermes functions to take differential gene expression analysis between samples in HermesData, visualize them in a volcano graph, and create an interactive volcano graph using teal.module.hermes.\nThe function used to calculate differential gene expression uses HermesData as input. See RNAG1 for details. In particular, the differential gene expression analysis does not require to normalize HermesData.\n\nCodelibrary(hermes)\n\nobject &lt;- hermes_data %&gt;%\n  add_quality_flags() %&gt;%\n  filter()\n\ncolData(object) &lt;- df_cols_to_factor(colData(object))\n\n\n\n\nWe can calculate a data frame in HermesDataDiffExpr class to include the gene differential expression between groups in HermesData using diff_expression() function. By default, diff_expression() function uses the limma-voom method to calculate the gene differential expression, unless specified otherwise as argument. The group argument is to set the groups for comparison. The group factors should be a 2-level factor in colData(HermesData).\n\nCoderesult1 &lt;- diff_expression(object, group = \"SEX\")\n\n\n\n\nWe can also use the DESeq2 Method for gene differential expression.\n\nCoderesult2 &lt;- diff_expression(object, group = \"SEX\", method = \"deseq2\")\n\n\n\n\nIt is also possible to pass additional arguments to the function behind the methods in the diff_expression(), ex. if we wish to change the type of size factor estimation when using the DESeq2 method. See ?DESeq2::DESeq() or ?limma::eBayes() for details about the additional parameters available.\n\nCoderesult3 &lt;- diff_expression(object, group = \"SEX\", method = \"deseq2\", sfType = \"ratio\")\n\n\n\n\nWe can then plot a volcano graph for differential gene expression between groups in HermesData using the autoplot() function. The threshold values for adjusted p-values and log2 folder change can be specified.\n\nCodeautoplot(result1)\n\n\n\n\n\n\n\n\nCodeautoplot(result2, adj_p_val_thresh = 0.025, log2_fc_thresh = 5)\n\nWarning: Removed 47 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\nCodeautoplot(result3)\n\nWarning: Removed 47 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\n\nWe start by importing a MultiAssayExperiment; here we use the example multi_assay_experiment available in hermes. It is wrapped as a teal::dataset. We can then use the provided teal module tm_g_volcanoplot to include a volcano graph module in our teal app.\n\nCodelibrary(teal.modules.hermes)\n\ndata &lt;- teal_data()\ndata &lt;- within(data, {\n  library(hermes)\n  MAE &lt;- multi_assay_experiment\n})\ndatanames(data) &lt;- \"MAE\"\n\napp &lt;- init(\n  data = data,\n  modules = modules(\n    tm_g_volcanoplot(\n      label = \"volcanoplot\",\n      mae_name = \"MAE\"\n    )\n  )\n)\n\n[INFO] 2024-02-23 15:35:04.0428 pid:2537 token:[] teal.modules.hermes Initializing tm_g_volcanoplot\n\nCodeshinyApp(app$ui, app$server)\n\n[INFO] 2024-02-23 15:35:05.6092 pid:2537 token:[b9cde921] teal Initializing reporter_previewer_module\n\n\nWarning: 'experiments' dropped; see 'drops()'\n\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] teal.modules.hermes_0.1.6.9003 teal_0.15.1.9000              \n [3] teal.slice_0.5.0.9003          teal.data_0.5.0.9000          \n [5] teal.code_0.5.0.9003           shiny_1.8.0                   \n [7] hermes_1.7.1.9000              SummarizedExperiment_1.32.0   \n [9] Biobase_2.62.0                 GenomicRanges_1.54.1          \n[11] GenomeInfoDb_1.38.5            IRanges_2.36.0                \n[13] S4Vectors_0.40.2               BiocGenerics_0.48.1           \n[15] MatrixGenerics_1.14.0          matrixStats_1.2.0             \n[17] ggfortify_0.4.16               ggplot2_3.4.4                 \n\nloaded via a namespace (and not attached):\n  [1] RColorBrewer_1.1-3          jsonlite_1.8.8             \n  [3] shape_1.4.6                 MultiAssayExperiment_1.28.0\n  [5] magrittr_2.0.3              farver_2.1.1               \n  [7] rmarkdown_2.25              GlobalOptions_0.1.2        \n  [9] zlibbioc_1.48.0             vctrs_0.6.5                \n [11] memoise_2.0.1               RCurl_1.98-1.14            \n [13] webshot_0.5.5               BiocBaseUtils_1.5.0        \n [15] htmltools_0.5.7             S4Arrays_1.2.0             \n [17] forcats_1.0.0               progress_1.2.3             \n [19] curl_5.2.0                  SparseArray_1.2.3          \n [21] sass_0.4.8                  bslib_0.6.1                \n [23] fontawesome_0.5.2           htmlwidgets_1.6.4          \n [25] testthat_3.2.1              cachem_1.0.8               \n [27] teal.widgets_0.4.2.9005     mime_0.12                  \n [29] lifecycle_1.0.4             iterators_1.0.14           \n [31] pkgconfig_2.0.3             webshot2_0.1.1             \n [33] Matrix_1.6-5                R6_2.5.1                   \n [35] fastmap_1.1.1               GenomeInfoDbData_1.2.11    \n [37] rbibutils_2.2.16            clue_0.3-65                \n [39] digest_0.6.34               colorspace_2.1-0           \n [41] shinycssloaders_1.0.0       ps_1.7.6                   \n [43] AnnotationDbi_1.64.1        DESeq2_1.42.0              \n [45] crosstalk_1.2.1             RSQLite_2.3.5              \n [47] filelock_1.0.3              labeling_0.4.3             \n [49] fansi_1.0.6                 httr_1.4.7                 \n [51] abind_1.4-5                 compiler_4.3.2             \n [53] bit64_4.0.5                 withr_3.0.0                \n [55] doParallel_1.0.17           backports_1.4.1            \n [57] BiocParallel_1.36.0         DBI_1.2.1                  \n [59] logger_0.2.2                biomaRt_2.58.0             \n [61] rappdirs_0.3.3              DelayedArray_0.28.0        \n [63] rjson_0.2.21                chromote_0.1.2             \n [65] tools_4.3.2                 httpuv_1.6.13              \n [67] glue_1.7.0                  callr_3.7.3                \n [69] promises_1.2.1              grid_4.3.2                 \n [71] checkmate_2.3.1             cluster_2.1.6              \n [73] generics_0.1.3              gtable_0.3.4               \n [75] websocket_1.4.1             tidyr_1.3.1                \n [77] hms_1.1.3                   xml2_1.3.6                 \n [79] utf8_1.2.4                  XVector_0.42.0             \n [81] ggrepel_0.9.5               foreach_1.5.2              \n [83] pillar_1.9.0                stringr_1.5.1              \n [85] limma_3.58.1                later_1.3.2                \n [87] circlize_0.4.15             dplyr_1.1.4                \n [89] BiocFileCache_2.10.1        lattice_0.22-5             \n [91] bit_4.0.5                   tidyselect_1.2.0           \n [93] ComplexHeatmap_2.18.0       locfit_1.5-9.8             \n [95] Biostrings_2.70.1           knitr_1.45                 \n [97] gridExtra_2.3               teal.logger_0.1.3.9011     \n [99] edgeR_4.0.12                xfun_0.41                  \n[101] statmod_1.5.0               brio_1.1.4                 \n[103] DT_0.31                     stringi_1.8.3              \n[105] yaml_2.3.8                  shinyWidgets_0.8.1         \n[107] evaluate_0.23               codetools_0.2-19           \n[109] tibble_3.2.1                cli_3.6.2                  \n[111] xtable_1.8-4                Rdpack_2.6                 \n[113] processx_3.8.3              jquerylib_0.1.4            \n[115] munsell_0.5.0               teal.reporter_0.3.0.9003   \n[117] Rcpp_1.0.12                 dbplyr_2.4.0               \n[119] png_0.1-8                   XML_3.99-0.16.1            \n[121] parallel_4.3.2              ellipsis_0.3.2             \n[123] assertthat_0.2.1            blob_1.2.4                 \n[125] prettyunits_1.2.0           bitops_1.0-7               \n[127] scales_1.3.0                purrr_1.0.2                \n[129] crayon_1.5.2                GetoptLong_1.0.5           \n[131] rlang_1.1.3                 formatR_1.14               \n[133] KEGGREST_1.42.0             shinyjs_2.1.0              \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "RNAG",
      "RNAG5"
    ]
  },
  {
    "objectID": "graphs/rnag06.html",
    "href": "graphs/rnag06.html",
    "title": "RNAG6",
    "section": "",
    "text": "Setup: Import, Filter and Normalize\nBarplot for a Single Gene\nBarplot for Gene Signatures\nAdditional Options for Customization\nTeal Module for Barplot\nSession Info\n\n\n\nThis page can be used as a template of how to use the available hermes functions to produce a barplot of the dichotomized gene expression counts into two or three categories based on custom defined percentiles.\nThe draw_barplot() function used below needs HermesData as input. See RNAG1 for details on how to import, filter and normalize HermesData.\n\nCodelibrary(hermes)\nobject &lt;- hermes_data %&gt;%\n  add_quality_flags() %&gt;%\n  filter() %&gt;%\n  normalize()\n\n\n\n\nWe can create a barplot for gene expression counts of single genes by specifying a gene in the gene_spec (gene specification) as follows. This function creates a scatterplot with the default percentiles (0.33, 0.67), to specify custom percentiles, please use the percentile argument.\n\nCodedraw_barplot(\n  object = object,\n  assay_name = \"counts\",\n  x_spec = gene_spec(genes(object)[1])\n)\n\n\n\n\n\n\n\n\n\nWe can also specify a gene summary function for multiple genes, thereby using the corresponding gene signature. Note that here we just want to use the first 3 genes from the object without explicitly specifying the gene IDs, and this can be done through the genes() function in hermes.\n\nCodedraw_barplot(\n  object = object,\n  assay_name = \"counts\",\n  x_spec = gene_spec(\n    genes(object)[1:3],\n    fun = colMeans,\n    fun_name = \"Median\"\n  )\n)\n\n\n\n\n\n\n\n\n\nIt is also possible to pass additional arguments to the function draw_barplot(), ex. if we wish to specify an optional faceting variable or optional fill variable. See ?hermes::draw_barplot() for details about the additional parameters available.\n\nCodedraw_barplot(\n  object = object,\n  assay_name = \"counts\",\n  x_spec = gene_spec(\n    genes(object)[1:3],\n    fun = colMeans,\n    fun_name = \"Median\"\n  ),\n  facet_var = \"SEX\",\n  fill_var = \"AGE18\"\n)\n\n\n\n\n\n\n\n\nCodedraw_barplot(\n  object = object,\n  assay_name = \"counts\",\n  x_spec = gene_spec(\n    genes(object)[1:3],\n    fun = colMeans,\n    fun_name = \"Median\"\n  ),\n  facet_var = \"SEX\",\n  fill_var = \"AGE18\",\n  percentiles = c(0.1, 0.9)\n)\n\n\n\n\n\n\n\n\n\nWe start by importing a MultiAssayExperiment; here we use the example multi_assay_experiment available in hermes. It is wrapped as a teal::dataset. We can then use the provided teal module tm_g_barplot to have add a barplot module in our teal app.\n\nCodelibrary(teal.modules.hermes)\n\ndata &lt;- teal_data()\ndata &lt;- within(data, {\n  library(hermes)\n  MAE &lt;- multi_assay_experiment\n})\ndatanames(data) &lt;- \"MAE\"\n\napp &lt;- init(\n  data = data,\n  modules = modules(\n    tm_g_barplot(\n      label = \"barplot\",\n      mae_name = \"MAE\"\n    )\n  )\n)\n\n[INFO] 2024-02-23 15:45:33.3464 pid:9660 token:[] teal.modules.hermes Initializing tm_g_barplot\n\nCodeshinyApp(app$ui, app$server)\n\n[INFO] 2024-02-23 15:45:34.9311 pid:9660 token:[523b1f1b] teal Initializing reporter_previewer_module\n\n\nWarning: 'experiments' dropped; see 'drops()'\n\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] teal.modules.hermes_0.1.6.9003 teal_0.15.1.9000              \n [3] teal.slice_0.5.0.9003          teal.data_0.5.0.9000          \n [5] teal.code_0.5.0.9003           shiny_1.8.0                   \n [7] hermes_1.7.1.9000              SummarizedExperiment_1.32.0   \n [9] Biobase_2.62.0                 GenomicRanges_1.54.1          \n[11] GenomeInfoDb_1.38.5            IRanges_2.36.0                \n[13] S4Vectors_0.40.2               BiocGenerics_0.48.1           \n[15] MatrixGenerics_1.14.0          matrixStats_1.2.0             \n[17] ggfortify_0.4.16               ggplot2_3.4.4                 \n\nloaded via a namespace (and not attached):\n  [1] RColorBrewer_1.1-3          jsonlite_1.8.8             \n  [3] shape_1.4.6                 MultiAssayExperiment_1.28.0\n  [5] magrittr_2.0.3              farver_2.1.1               \n  [7] rmarkdown_2.25              GlobalOptions_0.1.2        \n  [9] zlibbioc_1.48.0             vctrs_0.6.5                \n [11] memoise_2.0.1               RCurl_1.98-1.14            \n [13] webshot_0.5.5               BiocBaseUtils_1.5.0        \n [15] htmltools_0.5.7             S4Arrays_1.2.0             \n [17] forcats_1.0.0               progress_1.2.3             \n [19] curl_5.2.0                  SparseArray_1.2.3          \n [21] sass_0.4.8                  bslib_0.6.1                \n [23] fontawesome_0.5.2           htmlwidgets_1.6.4          \n [25] testthat_3.2.1              cachem_1.0.8               \n [27] teal.widgets_0.4.2.9005     mime_0.12                  \n [29] lifecycle_1.0.4             iterators_1.0.14           \n [31] pkgconfig_2.0.3             webshot2_0.1.1             \n [33] Matrix_1.6-5                R6_2.5.1                   \n [35] fastmap_1.1.1               GenomeInfoDbData_1.2.11    \n [37] rbibutils_2.2.16            clue_0.3-65                \n [39] digest_0.6.34               colorspace_2.1-0           \n [41] shinycssloaders_1.0.0       ps_1.7.6                   \n [43] AnnotationDbi_1.64.1        DESeq2_1.42.0              \n [45] RSQLite_2.3.5               filelock_1.0.3             \n [47] labeling_0.4.3              fansi_1.0.6                \n [49] httr_1.4.7                  abind_1.4-5                \n [51] compiler_4.3.2              bit64_4.0.5                \n [53] withr_3.0.0                 doParallel_1.0.17          \n [55] backports_1.4.1             BiocParallel_1.36.0        \n [57] DBI_1.2.1                   logger_0.2.2               \n [59] biomaRt_2.58.0              rappdirs_0.3.3             \n [61] DelayedArray_0.28.0         rjson_0.2.21               \n [63] chromote_0.1.2              tools_4.3.2                \n [65] httpuv_1.6.13               glue_1.7.0                 \n [67] callr_3.7.3                 promises_1.2.1             \n [69] grid_4.3.2                  checkmate_2.3.1            \n [71] cluster_2.1.6               generics_0.1.3             \n [73] gtable_0.3.4                websocket_1.4.1            \n [75] tidyr_1.3.1                 hms_1.1.3                  \n [77] xml2_1.3.6                  utf8_1.2.4                 \n [79] XVector_0.42.0              ggrepel_0.9.5              \n [81] foreach_1.5.2               pillar_1.9.0               \n [83] stringr_1.5.1               limma_3.58.1               \n [85] later_1.3.2                 circlize_0.4.15            \n [87] dplyr_1.1.4                 BiocFileCache_2.10.1       \n [89] lattice_0.22-5              bit_4.0.5                  \n [91] tidyselect_1.2.0            ComplexHeatmap_2.18.0      \n [93] locfit_1.5-9.8              Biostrings_2.70.1          \n [95] knitr_1.45                  gridExtra_2.3              \n [97] teal.logger_0.1.3.9011      edgeR_4.0.12               \n [99] xfun_0.41                   statmod_1.5.0              \n[101] brio_1.1.4                  stringi_1.8.3              \n[103] yaml_2.3.8                  shinyWidgets_0.8.1         \n[105] evaluate_0.23               codetools_0.2-19           \n[107] tibble_3.2.1                cli_3.6.2                  \n[109] xtable_1.8-4                Rdpack_2.6                 \n[111] processx_3.8.3              jquerylib_0.1.4            \n[113] munsell_0.5.0               teal.reporter_0.3.0.9003   \n[115] Rcpp_1.0.12                 dbplyr_2.4.0               \n[117] png_0.1-8                   XML_3.99-0.16.1            \n[119] parallel_4.3.2              ellipsis_0.3.2             \n[121] assertthat_0.2.1            blob_1.2.4                 \n[123] prettyunits_1.2.0           bitops_1.0-7               \n[125] scales_1.3.0                purrr_1.0.2                \n[127] crayon_1.5.2                GetoptLong_1.0.5           \n[129] rlang_1.1.3                 formatR_1.14               \n[131] KEGGREST_1.42.0             shinyjs_2.1.0              \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "RNAG",
      "RNAG6"
    ]
  },
  {
    "objectID": "graphs/DG1/dg01.html",
    "href": "graphs/DG1/dg01.html",
    "title": "DG1",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nWe will use the synthetic_cdisc_data$adsl data set from the scda package and ggplot2 to create the plots. In this example, we will plot histograms of one or multiple numeric variables. We start by selecting the biomarker evaluable population with the flag variable BEP01FL and then populating a new continuous biomarker variable, BMRKR3.\n\nCodelibrary(tern)\nlibrary(ggplot2.utils)\nlibrary(dplyr)\nlibrary(tibble)\nlibrary(tidyr)\n\nadsl &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adsl %&gt;%\n  df_explicit_na() %&gt;%\n  filter(BEP01FL == \"Y\") %&gt;%\n  mutate(BMRKR3 = rnorm(n(), mean = 7, sd = 2))\n\n\n\n\nIn this example, we will create a combined histogram/density graph of a continuous biomarker variable. Note that you may run into warning messages after producing the graph if the variable you want to analyze contains NAs. To avoid these warning messages, you can use the drop_na() function from tidyr in the data manipulation step above to remove the NAs rows from the dataset (e.g drop_na(BMRKR1)).\n\nCodegraph &lt;- ggplot(adsl, aes(BMRKR1)) +\n  geom_histogram(aes(y = after_stat(density)), bins = 30) +\n  geom_density(aes(y = after_stat(density)))\n\ngraph\n\n\n\n\n\n\n\nWe can also calculate some descriptive statistics and populate a table that we can overlay on top of the plot. The tibble function is used to build a data frame data_tb with 3 variables. The x and y variables represent the coordinates on the plot to show the statistic values and can be modified based on preference. For example, x = 1 and y = 1 will put the statistics table in the top right corner of the graph, while x = 0 and y = 0 will put the statistics table in the bottom left corner of the graph. The tb variable contains the statistics to be shown on the plot, in the form of a nested list column starting from the original statistics tibble orig_tb. Finally, we can use the geom_table_npc() layer function to process the data_tb input and add the statistics table to the existing graph.\n\nCodeorig_tb &lt;- with(adsl, tribble(\n  ~Statistic, ~Value,\n  \"N\", length(BMRKR1),\n  \"SD\", sd(BMRKR1),\n  \"Median\", median(BMRKR1),\n  \"Min.\", min(BMRKR1),\n  \"Max.\", max(BMRKR1)\n))\n\ndata_tb &lt;- tibble(x = 1, y = 1, tb = list(orig_tb))\n\ngraph &lt;- graph +\n  geom_table_npc(data = data_tb, aes(npcx = x, npcy = y, label = tb))\n\ngraph\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] tidyr_1.3.1           tibble_3.2.1          dplyr_1.1.4          \n[4] ggplot2.utils_0.3.1   ggplot2_3.4.4         tern_0.9.3.9016      \n[7] rtables_0.6.6.9010    magrittr_2.0.3        formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.4        generics_0.1.3    scda_0.1.6.9016   EnvStats_2.8.1   \n [5] lattice_0.22-5    digest_0.6.34     evaluate_0.23     grid_4.3.2       \n [9] fastmap_1.1.1     jsonlite_1.8.8    Matrix_1.6-5      backports_1.4.1  \n[13] survival_3.5-7    gridExtra_2.3     purrr_1.0.2       fansi_1.0.6      \n[17] scales_1.3.0      codetools_0.2-19  Rdpack_2.6        cli_3.6.2        \n[21] ggpp_0.5.6        rlang_1.1.3       rbibutils_2.2.16  munsell_0.5.0    \n[25] splines_4.3.2     withr_3.0.0       yaml_2.3.8        tools_4.3.2      \n[29] polynom_1.4-1     checkmate_2.3.1   colorspace_2.1-0  forcats_1.0.0    \n[33] ggstats_0.5.1     broom_1.0.5       vctrs_0.6.5       R6_2.5.1         \n[37] lifecycle_1.0.4   htmlwidgets_1.6.4 MASS_7.3-60.0.1   pkgconfig_2.0.3  \n[41] pillar_1.9.0      gtable_0.3.4      glue_1.7.0        xfun_0.41        \n[45] tidyselect_1.2.0  knitr_1.45        farver_2.1.1      htmltools_0.5.7  \n[49] labeling_0.4.3    rmarkdown_2.25    compiler_4.3.2   \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "DG"
    ]
  },
  {
    "objectID": "graphs/DG1/dg01b.html",
    "href": "graphs/DG1/dg01b.html",
    "title": "DG1B",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nWe will use the synthetic_cdisc_data$adsl data set from the scda package and ggplot2 to create the plots. In this example, we will plot histograms of one or multiple numeric variables. We start by selecting the biomarker evaluable population with the flag variable BEP01FL and then populating a new continuous biomarker variable, BMRKR3.\n\nCodelibrary(tern)\nlibrary(ggplot2.utils)\nlibrary(dplyr)\nlibrary(tibble)\nlibrary(tidyr)\n\nadsl &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adsl %&gt;%\n  df_explicit_na() %&gt;%\n  filter(BEP01FL == \"Y\") %&gt;%\n  mutate(BMRKR3 = rnorm(n(), mean = 7, sd = 2))\n\n\n\n\nBelow example shows histograms for the BMRKR1 variable by treatment ARM. Including a statistics table in this graph works in the same way as we did above for DG1A.\n\nCodegraph &lt;- ggplot(adsl, aes(BMRKR1)) +\n  geom_histogram(aes(y = after_stat(density)), bins = 30) +\n  geom_density(aes(y = after_stat(density))) +\n  facet_grid(ARM ~ .)\n\ngraph\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] tidyr_1.3.1           tibble_3.2.1          dplyr_1.1.4          \n[4] ggplot2.utils_0.3.1   ggplot2_3.4.4         tern_0.9.3.9016      \n[7] rtables_0.6.6.9010    magrittr_2.0.3        formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.4        generics_0.1.3    scda_0.1.6.9016   EnvStats_2.8.1   \n [5] lattice_0.22-5    digest_0.6.34     evaluate_0.23     grid_4.3.2       \n [9] fastmap_1.1.1     jsonlite_1.8.8    Matrix_1.6-5      backports_1.4.1  \n[13] survival_3.5-7    purrr_1.0.2       fansi_1.0.6       scales_1.3.0     \n[17] codetools_0.2-19  Rdpack_2.6        cli_3.6.2         ggpp_0.5.6       \n[21] rlang_1.1.3       rbibutils_2.2.16  munsell_0.5.0     splines_4.3.2    \n[25] withr_3.0.0       yaml_2.3.8        tools_4.3.2       polynom_1.4-1    \n[29] checkmate_2.3.1   colorspace_2.1-0  forcats_1.0.0     ggstats_0.5.1    \n[33] broom_1.0.5       vctrs_0.6.5       R6_2.5.1          lifecycle_1.0.4  \n[37] htmlwidgets_1.6.4 MASS_7.3-60.0.1   pkgconfig_2.0.3   pillar_1.9.0     \n[41] gtable_0.3.4      glue_1.7.0        xfun_0.41         tidyselect_1.2.0 \n[45] knitr_1.45        farver_2.1.1      htmltools_0.5.7   labeling_0.4.3   \n[49] rmarkdown_2.25    compiler_4.3.2   \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "DG",
      "DG1",
      "DG1B"
    ]
  },
  {
    "objectID": "graphs/SFG3/setup.html#setup",
    "href": "graphs/SFG3/setup.html#setup",
    "title": "",
    "section": "Setup",
    "text": "Setup\nWe prepare the data similarly as in SFG1, focusing on a single arm in the biomarker evaluable population.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte &lt;- random.cdisc.data::cadtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(\n    PARAMCD == \"OS\",\n    ARM == \"A: Drug X\",\n    BEP01FL == \"Y\"\n  ) %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0\n  ) %&gt;%\n  var_relabel(\n    BEP01FL = \"BEP\",\n    BMRKR1 = \"Biomarker (Countinuous)\"\n  )"
  },
  {
    "objectID": "graphs/DG3/dg03a.html",
    "href": "graphs/DG3/dg03a.html",
    "title": "DG3A",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nThe graphs below summarize the distribution of a categorical biomarker variable as barplots, either in the overall population or by one or more categorical clinical variables.\nWe will use the synthetic_cdisc_data$adsl data set from the scda package to illustrate the graph and will select on the biomarker evaluable population with BEP01FL. The column BMRKR2 contains the biomarker values on a categorical scale. We will use ARM as categorical clinical variable.\n\nCodelibrary(tern)\nlibrary(ggplot2.utils)\nlibrary(dplyr)\n\nadsl &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adsl %&gt;%\n  df_explicit_na() %&gt;%\n  filter(BEP01FL == \"Y\")\n\n\n\n\nHere below the code for a simple distribution of the category counts of a first biomarker variable (BMRKR2) split by a second categorical variable (ARM). We can use again the facet_grid() layer.\n\nCodegraph &lt;- ggplot(adsl, aes(BMRKR2)) +\n  geom_bar() +\n  facet_grid(. ~ ARM)\n\ngraph\n\n\n\n\n\n\n\nWe could instead display the columns next to each other within the same graph with the fill aesthetic and the position_dodge() option instead of using the facet_grid() layer.\n\nCodegraph &lt;- ggplot(adsl, aes(ARM, fill = BMRKR2)) +\n  geom_bar(position = position_dodge())\n\ngraph\n\n\n\n\n\n\n\nWe can then again add the absolute count above each of the columns.\n\nCodegraph +\n  geom_text(\n    stat = \"count\",\n    aes(label = after_stat(count)),\n    position = position_dodge(0.9),\n    vjust = -.5\n  )\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           ggplot2.utils_0.3.1   ggplot2_3.4.4        \n[4] tern_0.9.3.9016       rtables_0.6.6.9010    magrittr_2.0.3       \n[7] formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.4        generics_0.1.3    tidyr_1.3.1       scda_0.1.6.9016  \n [5] EnvStats_2.8.1    lattice_0.22-5    digest_0.6.34     evaluate_0.23    \n [9] grid_4.3.2        fastmap_1.1.1     jsonlite_1.8.8    Matrix_1.6-5     \n[13] backports_1.4.1   survival_3.5-7    purrr_1.0.2       fansi_1.0.6      \n[17] scales_1.3.0      codetools_0.2-19  Rdpack_2.6        cli_3.6.2        \n[21] ggpp_0.5.6        rlang_1.1.3       rbibutils_2.2.16  munsell_0.5.0    \n[25] splines_4.3.2     withr_3.0.0       yaml_2.3.8        tools_4.3.2      \n[29] polynom_1.4-1     checkmate_2.3.1   colorspace_2.1-0  forcats_1.0.0    \n[33] ggstats_0.5.1     broom_1.0.5       vctrs_0.6.5       R6_2.5.1         \n[37] lifecycle_1.0.4   htmlwidgets_1.6.4 MASS_7.3-60.0.1   pkgconfig_2.0.3  \n[41] pillar_1.9.0      gtable_0.3.4      glue_1.7.0        xfun_0.41        \n[45] tibble_3.2.1      tidyselect_1.2.0  knitr_1.45        farver_2.1.1     \n[49] htmltools_0.5.7   labeling_0.4.3    rmarkdown_2.25    compiler_4.3.2   \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "DG",
      "DG3",
      "DG3A"
    ]
  },
  {
    "objectID": "graphs/DG3/dg03.html",
    "href": "graphs/DG3/dg03.html",
    "title": "DG3",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nThe graphs below summarize the distribution of a categorical biomarker variable as barplots, either in the overall population or by one or more categorical clinical variables.\nWe will use the synthetic_cdisc_data$adsl data set from the scda package to illustrate the graph and will select on the biomarker evaluable population with BEP01FL. The column BMRKR2 contains the biomarker values on a categorical scale. We will use ARM as categorical clinical variable.\n\nCodelibrary(tern)\nlibrary(ggplot2.utils)\nlibrary(dplyr)\n\nadsl &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adsl %&gt;%\n  df_explicit_na() %&gt;%\n  filter(BEP01FL == \"Y\")\n\n\n\n\nHere below the code for a simple barplot showing the counts of the categories.\n\nCodegraph &lt;- ggplot(adsl, aes(BMRKR2)) +\n  geom_bar()\n\ngraph\n\n\n\n\n\n\n\nWe can customize the labels of the axes.\n\nCodegraph +\n  scale_x_discrete(\n    breaks = c(\"LOW\", \"MEDIUM\", \"HIGH\"),\n    labels = c(\"Low\", \"Medium\", \"High\"),\n    name = \"Biomarker\"\n  ) +\n  scale_y_continuous(name = \"count\")\n\n\n\n\n\n\n\nWe can also add the absolute count above each of the columns.\n\nCodegraph +\n  geom_text(\n    stat = \"count\",\n    aes(label = after_stat(count)),\n    vjust = -.5\n  )\n\n\n\n\n\n\n\nIf instead of counts we want to display the percentages then the following options could be used:\n\nCodegraph &lt;- ggplot(\n  adsl,\n  aes(\n    x = BMRKR2,\n    y = prop.table(after_stat(count)),\n    label = scales::percent(prop.table(after_stat(count)))\n  )\n) +\n  geom_bar()\n\ngraph\n\n\n\n\n\n\n\nWe can customize the axes.\n\nCodegraph +\n  scale_y_continuous(\n    labels = scales::percent_format(),\n    name = \"Proportion (%)\"\n  ) +\n  scale_x_discrete(\n    breaks = c(\"LOW\", \"MEDIUM\", \"HIGH\"),\n    labels = c(\"Low\", \"Medium\", \"High\"),\n    name = \"Biomarker\"\n  )\n\n\n\n\n\n\n\nWe can add the percentages above each of the columns.\n\nCodegraph +\n  geom_text(\n    stat = \"count\",\n    vjust = -0.5\n  )\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           ggplot2.utils_0.3.1   ggplot2_3.4.4        \n[4] tern_0.9.3.9016       rtables_0.6.6.9010    magrittr_2.0.3       \n[7] formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.4        generics_0.1.3    tidyr_1.3.1       scda_0.1.6.9016  \n [5] EnvStats_2.8.1    lattice_0.22-5    digest_0.6.34     evaluate_0.23    \n [9] grid_4.3.2        fastmap_1.1.1     jsonlite_1.8.8    Matrix_1.6-5     \n[13] backports_1.4.1   survival_3.5-7    purrr_1.0.2       fansi_1.0.6      \n[17] scales_1.3.0      codetools_0.2-19  Rdpack_2.6        cli_3.6.2        \n[21] ggpp_0.5.6        rlang_1.1.3       rbibutils_2.2.16  munsell_0.5.0    \n[25] splines_4.3.2     withr_3.0.0       yaml_2.3.8        tools_4.3.2      \n[29] polynom_1.4-1     checkmate_2.3.1   colorspace_2.1-0  forcats_1.0.0    \n[33] ggstats_0.5.1     broom_1.0.5       vctrs_0.6.5       R6_2.5.1         \n[37] lifecycle_1.0.4   htmlwidgets_1.6.4 MASS_7.3-60.0.1   pkgconfig_2.0.3  \n[41] pillar_1.9.0      gtable_0.3.4      glue_1.7.0        xfun_0.41        \n[45] tibble_3.2.1      tidyselect_1.2.0  knitr_1.45        farver_2.1.1     \n[49] htmltools_0.5.7   labeling_0.4.3    rmarkdown_2.25    compiler_4.3.2   \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "DG",
      "DG3"
    ]
  },
  {
    "objectID": "graphs/KG5/kg05.html",
    "href": "graphs/KG5/kg05.html",
    "title": "KG5",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nA setup similar to KG4 is used. The difference here is that we create the initial binary biomarker variable BMRKR1_BIN from comparing the continuous biomarker variable BMRKR1 with a cutoff of interest.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte &lt;- random.cdisc.data::cadtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"OS\" & BEP01FL == \"Y\") %&gt;%\n  mutate(\n    is_event = CNSR == 0,\n    BMRKR1_BIN = ifelse(\n      BMRKR1 &gt; 5, \"High\", \"Low\"\n    ),\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = c(\"B: Placebo\"),\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    ),\n    ARM_BMRKR1 = interaction(ARM_BIN, BMRKR1_BIN)\n  )\n\nvariables &lt;- list(tte = \"AVAL\", is_event = \"is_event\", arm = \"ARM_BMRKR1\")\n\n\n\n\nWe can produce the basic graph using the g_km() function from tern.\n\nCodeg_km(\n  df = adtte,\n  variables = variables,\n  annot_surv_med = FALSE,\n  col = c(\"red\", \"blue\", \"red\", \"blue\"),\n  lty = c(1, 1, 2, 2)\n)\n\n\n\n\n\n\n\nWe can also choose to annotate the plot with the median survival time for each of the treatment arms using the annot_surv_med = TRUE option.\n\nCodeg_km(\n  df = adtte,\n  variables = variables,\n  annot_surv_med = TRUE,\n  col = c(\"red\", \"blue\", \"red\", \"blue\"),\n  lty = c(1, 1, 2, 2)\n)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.4.0 (2024-04-24)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 22.04.4 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.4.9008       rtables_0.6.7.9002   \n[4] magrittr_2.0.3        formatters_0.5.6.9005\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.7-0                  gtable_0.3.5                 \n [3] jsonlite_1.8.8                compiler_4.4.0               \n [5] tidyselect_1.2.1              stringr_1.5.1                \n [7] tidyr_1.3.1                   splines_4.4.0                \n [9] scales_1.3.0                  yaml_2.3.8                   \n[11] fastmap_1.2.0                 lattice_0.22-6               \n[13] ggplot2_3.5.1                 R6_2.5.1                     \n[15] labeling_0.4.3                generics_0.1.3               \n[17] knitr_1.46                    forcats_1.0.0                \n[19] rbibutils_2.2.16              htmlwidgets_1.6.4            \n[21] backports_1.4.1               checkmate_2.3.1              \n[23] tibble_3.2.1                  munsell_0.5.1                \n[25] pillar_1.9.0                  rlang_1.1.3                  \n[27] utf8_1.2.4                    stringi_1.8.4                \n[29] broom_1.0.6                   xfun_0.44                    \n[31] cli_3.6.2                     withr_3.0.0                  \n[33] Rdpack_2.6                    digest_0.6.35                \n[35] grid_4.4.0                    cowplot_1.1.3                \n[37] lifecycle_1.0.4               vctrs_0.6.5                  \n[39] evaluate_0.23                 glue_1.7.0                   \n[41] farver_2.1.2                  codetools_0.2-20             \n[43] survival_3.6-4                random.cdisc.data_0.3.15.9004\n[45] fansi_1.0.6                   colorspace_2.1-0             \n[47] rmarkdown_2.27                purrr_1.0.2                  \n[49] tools_4.4.0                   pkgconfig_2.0.3              \n[51] htmltools_0.5.8.1            \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "KG",
      "KG5"
    ]
  },
  {
    "objectID": "graphs/KG5/kg05b.html",
    "href": "graphs/KG5/kg05b.html",
    "title": "KG5B",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nA setup similar to KG4 is used. The difference here is that we create the initial binary biomarker variable BMRKR1_BIN from comparing the continuous biomarker variable BMRKR1 with a cutoff of interest.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"OS\" & BEP01FL == \"Y\") %&gt;%\n  mutate(\n    is_event = CNSR == 0,\n    BMRKR1_BIN = ifelse(\n      BMRKR1 &gt; 5, \"High\", \"Low\"\n    ),\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = c(\"B: Placebo\"),\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    ),\n    ARM_BMRKR1 = interaction(ARM_BIN, BMRKR1_BIN)\n  )\n\nvariables &lt;- list(tte = \"AVAL\", is_event = \"is_event\", arm = \"ARM_BMRKR1\")\n\n\n\n\nThe advantage of using the cut() function is that it is sufficient to add additional cutoffs in order to obtain more than two bins for the cut version of the continuous biomarker variable. Again we can check the order of the factor levels to determine the col and lty arguments for g_km(). Here we want to always use red for the control and blue for the treatment arm, and then vary the line type for the different biomarker bins.\n\nCodeadtte3 &lt;- adtte %&gt;%\n  mutate(\n    BMRKR1_CAT = cut(BMRKR1, c(0, 5, 10, 22)),\n    ARM_BMRKR1 = interaction(ARM_BIN, BMRKR1_CAT)\n  )\nlevels(adtte3$ARM_BMRKR1)\n\n[1] \"CTRL.(0,5]\"   \"TRT.(0,5]\"    \"CTRL.(5,10]\"  \"TRT.(5,10]\"   \"CTRL.(10,22]\"\n[6] \"TRT.(10,22]\" \n\nCodeg_km(\n  df = adtte3,\n  variables = variables,\n  annot_surv_med = TRUE,\n  col = c(\"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\"),\n  lty = c(1, 1, 2, 2, 3, 3)\n)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.3.9016       rtables_0.6.6.9010   \n[4] magrittr_2.0.3        formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.6-5         gtable_0.3.4         jsonlite_1.8.8      \n [4] compiler_4.3.2       tidyselect_1.2.0     gridExtra_2.3       \n [7] tidyr_1.3.1          splines_4.3.2        scales_1.3.0        \n[10] yaml_2.3.8           fastmap_1.1.1        lattice_0.22-5      \n[13] ggplot2_3.4.4        R6_2.5.1             labeling_0.4.3      \n[16] generics_0.1.3       knitr_1.45           forcats_1.0.0       \n[19] rbibutils_2.2.16     htmlwidgets_1.6.4    backports_1.4.1     \n[22] checkmate_2.3.1      tibble_3.2.1         munsell_0.5.0       \n[25] scda_0.1.6.9016      pillar_1.9.0         rlang_1.1.3         \n[28] utf8_1.2.4           broom_1.0.5          xfun_0.41           \n[31] cli_3.6.2            withr_3.0.0          Rdpack_2.6          \n[34] digest_0.6.34        grid_4.3.2           lifecycle_1.0.4     \n[37] vctrs_0.6.5          evaluate_0.23        glue_1.7.0          \n[40] farver_2.1.1         nestcolor_0.1.2.9009 codetools_0.2-19    \n[43] survival_3.5-7       fansi_1.0.6          colorspace_2.1-0    \n[46] rmarkdown_2.25       purrr_1.0.2          tools_4.3.2         \n[49] pkgconfig_2.0.3      htmltools_0.5.7     \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "KG",
      "KG5",
      "KG5B"
    ]
  },
  {
    "objectID": "graphs/RG3/setup.html#setup",
    "href": "graphs/RG3/setup.html#setup",
    "title": "",
    "section": "Setup",
    "text": "Setup\nThe same setup as in RG1 is used.\nFor ggplot() used in all analyses, we add by = BMEASIFL in the aesthetics to support the calculation of proportions using geom_text(stat = \"prop\").\n\nCodelibrary(tern)\nlibrary(ggplot2.utils)\nlibrary(dplyr)\n\nadrs &lt;- random.cdisc.data::cadrs %&gt;%\n  df_explicit_na() %&gt;%\n  mutate(\n    AVALC = ordered(AVALC, levels = c(\"&lt;Missing&gt;\", \"NE\", \"PD\", \"SD\", \"PR\", \"CR\")),\n    AVALC_BIN = fct_collapse_only(\n      AVALC,\n      Yes = c(\"CR\", \"PR\"),\n      No = c(\"PD\", \"SD\", \"NE\", \"&lt;Missing&gt;\")\n    ),\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      Ctrl = c(\"B: Placebo\"),\n      Trt = c(\"A: Drug X\", \"C: Combination\")\n    )\n  ) %&gt;%\n  filter(PARAMCD == \"BESRSPI\", BMEASIFL == \"Y\")"
  },
  {
    "objectID": "graphs/RG3/rg03a.html",
    "href": "graphs/RG3/rg03a.html",
    "title": "RG3A",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nThe same setup as in RG1 is used.\nFor ggplot() used in all analyses, we add by = BMEASIFL in the aesthetics to support the calculation of proportions using geom_text(stat = \"prop\").\n\nCodelibrary(tern)\nlibrary(ggplot2.utils)\nlibrary(dplyr)\n\nadrs &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adrs %&gt;%\n  df_explicit_na() %&gt;%\n  mutate(\n    AVALC = ordered(AVALC, levels = c(\"&lt;Missing&gt;\", \"NE\", \"PD\", \"SD\", \"PR\", \"CR\")),\n    AVALC_BIN = fct_collapse_only(\n      AVALC,\n      Yes = c(\"CR\", \"PR\"),\n      No = c(\"PD\", \"SD\", \"NE\", \"&lt;Missing&gt;\")\n    ),\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      Ctrl = c(\"B: Placebo\"),\n      Trt = c(\"A: Drug X\", \"C: Combination\")\n    )\n  ) %&gt;%\n  filter(PARAMCD == \"BESRSPI\", BMEASIFL == \"Y\")\n\n\n\n\nIn this example we compare the responses across subgroups of the BEP defined by the levels of a categorical biomarker, and overall BEP, again using the facet_grid() layer with the option margins = TRUE. We do need to filter first on the BEP flag to restrict the data to the BEP.\n\nCodeadrs_bep &lt;- adrs %&gt;%\n  filter(BEP01FL == \"Y\")\n\ngraph &lt;- ggplot(adrs_bep, aes(BMEASIFL, fill = AVALC_BIN, by = BMEASIFL)) +\n  geom_bar(position = \"fill\") +\n  scale_y_continuous(\n    labels = scales::percent,\n    name = \"Proportion %\"\n  ) +\n  geom_text(stat = \"prop\", position = position_fill(.5), colour = \"white\") +\n  facet_grid(BMRKR2 ~ ARM_BIN, margins = TRUE)\n\ngraph\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           ggplot2.utils_0.3.1   ggplot2_3.4.4        \n[4] tern_0.9.3.9016       rtables_0.6.6.9010    magrittr_2.0.3       \n[7] formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.4        generics_0.1.3    tidyr_1.3.1       scda_0.1.6.9016  \n [5] EnvStats_2.8.1    lattice_0.22-5    digest_0.6.34     evaluate_0.23    \n [9] grid_4.3.2        fastmap_1.1.1     jsonlite_1.8.8    Matrix_1.6-5     \n[13] backports_1.4.1   survival_3.5-7    purrr_1.0.2       fansi_1.0.6      \n[17] viridisLite_0.4.2 scales_1.3.0      codetools_0.2-19  Rdpack_2.6       \n[21] cli_3.6.2         ggpp_0.5.6        rlang_1.1.3       rbibutils_2.2.16 \n[25] munsell_0.5.0     splines_4.3.2     withr_3.0.0       yaml_2.3.8       \n[29] tools_4.3.2       polynom_1.4-1     checkmate_2.3.1   colorspace_2.1-0 \n[33] forcats_1.0.0     ggstats_0.5.1     broom_1.0.5       vctrs_0.6.5      \n[37] R6_2.5.1          lifecycle_1.0.4   htmlwidgets_1.6.4 MASS_7.3-60.0.1  \n[41] pkgconfig_2.0.3   pillar_1.9.0      gtable_0.3.4      glue_1.7.0       \n[45] xfun_0.41         tibble_3.2.1      tidyselect_1.2.0  knitr_1.45       \n[49] farver_2.1.1      htmltools_0.5.7   labeling_0.4.3    rmarkdown_2.25   \n[53] compiler_4.3.2   \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "RG",
      "RG3",
      "RG3A"
    ]
  },
  {
    "objectID": "graphs/rnag09.html",
    "href": "graphs/rnag09.html",
    "title": "RNAG9",
    "section": "",
    "text": "Setup: Import & Data Manipulation\nKaplan-Meier Graph\nTeal Module for Kaplan-Meier Graph\nSession Info\n\n\n\nThis page can be used as a template of how to produce Kaplan-Meier graphs for RNA-seq gene expression analysis using available tern and hermes functions, and to create an interactive Kaplan-Meier graph for RNA-seq gene expression analysis using teal.modules.hermes.\nThe code below needs both RNA-seq data (in HermesData format) and time-to-event data (in ADTTE format) as input.\nWe first prepare the time-to-event data. We define an event indicator variable, transform the time to months and filter down to the overall survival subset.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte_f &lt;- random.cdisc.data::cadtte %&gt;%\n  dplyr::mutate(\n    is_event = .data$CNSR == 0,\n    AVAL = day2month(.data$AVAL),\n    AVALU = \"Months\"\n  ) %&gt;%\n  dplyr::filter(.data$PARAMCD == \"OS\")\n\n\nThen we prepare the RNA-seq data. See RNAG1 for basic details on how to import, filter and normalize HermesData. We use col_data_with_genes() to extract the sample variables (colData) from the object, together with a single specified gene or a specified gene signature. See ?hermes::gene_spec for details on how to do this. Then we use inner_join_cdisc() to join this genetic data with the ADTTE data from above. See the help page for more details, in particular how the join keys can be customized if needed - here we just join based on USUBJID by default.\n\nCodelibrary(hermes)\n\ngene_data &lt;- col_data_with_genes(\n  object = hermes_data,\n  assay_name = \"counts\",\n  genes = gene_spec(\"GeneID:1820\")\n)\njoined_data &lt;- inner_join_cdisc(\n  gene_data = gene_data,\n  cdisc_data = adtte_f\n)\n\n\nWe can then cut the resulting gene column (we figure out the column name and save it in arm_name below) in the joined_data into quantile bins (in this example we want three equally sized groups).\n\nCodearm_name &lt;- attr(gene_data, \"gene_cols\")\nbinned_data &lt;- joined_data %&gt;%\n  dplyr::mutate(\n    gene_factor = cut_quantile_bins(\n      joined_data[[arm_name]],\n      probs = c(1 / 3, 2 / 3)\n    )\n  ) %&gt;%\n  df_explicit_na()\n\n\n\n\nIt is now simple to create the Kaplan-Meier graph by providing the data set created above with the variable specification. Note that we specify the above created gene_factor as arm variable here.\n\nCodevariables &lt;- list(\n  tte = \"AVAL\",\n  is_event = \"is_event\",\n  arm = \"gene_factor\"\n)\ng_km(\n  binned_data,\n  variables = variables,\n  annot_coxph = TRUE\n)\n\n\n\n\n\n\n\nSee KG1 to KG5 for additional customization options for the Kaplan-Meier graphs or the help page ?g_km().\n\n\nWe start by importing a MultiAssayExperiment and sample ADTTE data; here we use the example multi_assay_experiment available in hermes and example ADTTE data from random.cdisc.data. We can then use the provided teal module tm_g_km to include the corresponding interactive Kaplan-Meier analysis in our teal app. Note that by default the counts assay is excluded via the exclude_assays argument, but we can include it by just saying that we don’t want to exclude any assays. In case that we have different non-standard column names in our ADTTE data set we could also specify them via the adtte_vars argument, see the documentation ?tm_g_km for more details.\n\nCodelibrary(teal.modules.hermes)\n\ndata &lt;- teal_data()\ndata &lt;- within(data, {\n  library(random.cdisc.data)\n  library(dplyr)\n  library(hermes)\n  MAE &lt;- multi_assay_experiment\n  ADTTE &lt;- random.cdisc.data::cadtte %&gt;%\n    mutate(is_event = .data$CNSR == 0)\n})\ndatanames(data) &lt;- c(\"MAE\", \"ADTTE\")\njoin_keys(data)[\"ADTTE\", \"ADTTE\"] &lt;- c(\"STUDYID\", \"USUBJID\", \"PARAMCD\")\n\napp &lt;- init(\n  data = data,\n  modules = modules(\n    tm_g_km(\n      label = \"Kaplan-Meier Graph\",\n      adtte_name = \"ADTTE\",\n      mae_name = \"MAE\",\n      exclude_assays = character()\n    )\n  )\n)\nshinyApp(app$ui, app$server)\n\n[INFO] 2024-05-25 17:31:26.9980 pid:3766 token:[3eddf79a] teal.slice Default Shiny inputs initialized: {}\n[INFO] 2024-05-25 17:31:27.0125 pid:3766 token:[3eddf79a] teal.slice Default Shiny inputs initialized: {}\n[INFO] 2024-05-25 17:31:27.0157 pid:3766 token:[3eddf79a] teal.slice Default Shiny inputs initialized: {}\n[INFO] 2024-05-25 17:31:27.0571 pid:3766 token:[3eddf79a] teal.slice Default Shiny inputs initialized: {}\n[INFO] 2024-05-25 17:31:27.0623 pid:3766 token:[3eddf79a] teal.slice Default Shiny inputs initialized: {}\n[INFO] 2024-05-25 17:31:27.0675 pid:3766 token:[3eddf79a] teal.slice Default Shiny inputs initialized: {}\n[INFO] 2024-05-25 17:31:27.0755 pid:3766 token:[3eddf79a] teal.slice Default Shiny inputs initialized: {}\n[INFO] 2024-05-25 17:31:27.0830 pid:3766 token:[3eddf79a] teal.slice Default Shiny inputs initialized: {}\n[INFO] 2024-05-25 17:31:27.0919 pid:3766 token:[3eddf79a] teal.slice Default Shiny inputs initialized: {}\n[INFO] 2024-05-25 17:31:27.4160 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on minimise_filter_overview: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:27.4186 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on minimise_filter_overview: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:27.4199 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on available_filters-show_dropmenu: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:31:27.4213 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on available_filters-show: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:27.4225 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on minimise_filter_active: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:27.4237 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on remove_all_filters: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:27.4250 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-remove_filters: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:27.4261 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-collapse: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:27.4273 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on ADTTE-remove_filters: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:27.4286 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on ADTTE-collapse: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:27.4305 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on available_filters-show_dropmenu: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:31:27.4317 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on available_filters-show: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:27.4330 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on minimise_filter_active: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:27.4342 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on remove_all_filters: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:27.4353 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-remove_filters: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:27.4366 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-collapse: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:27.4380 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on ADTTE-remove_filters: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:27.4393 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on ADTTE-collapse: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:27.4406 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on show_dropmenu: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:31:27.4418 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on show: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:27.4437 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on show_dropmenu: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:31:27.4449 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on show: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:27.4462 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd1-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:27.4474 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd1-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:27.4486 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd2-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:27.4497 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd2-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:27.4509 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd3-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:27.4522 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd3-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:27.4533 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on minimise_filter_add_vars: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:27.4555 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd1-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:27.4568 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd1-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:27.4580 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd2-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:27.4591 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd2-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:27.4604 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd3-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:27.4616 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd3-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:27.4627 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on minimise_filter_add_vars: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:27.4647 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:27.4660 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:27.4693 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:27.4705 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:27.8194 pid:3766 token:[3eddf79a] teal.modules.hermes Default Shiny inputs initialized: {\"strata-sample_var\":{},\"simple_reporter-add_report_card_simple-add_report_card_button\":0,\"simple_reporter-download_button_simple-download_button\":0,\"simple_reporter-archive_load_simple-reporter_load\":0,\"simple_reporter-reset_button_simple-reset_reporter\":0,\"genes-select_none_button\":0,\"genes-select_all_button\":0,\"genes-text_button\":0,\"strata-levels_button\":0,\"plot-downbutton-downl\":0,\"plot-expand\":0,\"plot-expbut\":0,\"assay-name\":\"\",\"genes-genes\":{},\"genes-fun_name\":\"Mean\",\"adtte-paramcd\":\"\",\"percentiles\":[0,0.5],\"plot-downbutton-file_format\":\"png\",\"genes-lock_button\":false,\"plot-downbutton-file_name\":\"plot_20240525_173126\"}\n[INFO] 2024-05-25 17:31:27.8257 pid:3766 token:[3eddf79a] teal.modules.hermes Default Shiny inputs initialized: {}\n[INFO] 2024-05-25 17:31:27.8333 pid:3766 token:[3eddf79a] teal.modules.hermes Default Shiny inputs initialized: {\"name\":\"\"}\n[INFO] 2024-05-25 17:31:27.8398 pid:3766 token:[3eddf79a] teal.modules.hermes Default Shiny inputs initialized: {\"select_none_button\":0,\"select_all_button\":0,\"text_button\":0,\"genes\":{},\"fun_name\":\"Mean\",\"lock_button\":false}\n[INFO] 2024-05-25 17:31:27.8523 pid:3766 token:[3eddf79a] teal.modules.hermes Default Shiny inputs initialized: {\"sample_var\":{},\"levels_button\":0}\n[INFO] 2024-05-25 17:31:27.8638 pid:3766 token:[3eddf79a] teal.modules.hermes Default Shiny inputs initialized: {\"paramcd\":\"\"}\n[INFO] 2024-05-25 17:31:27.9208 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on paramcd:  -&gt; NULL\n[INFO] 2024-05-25 17:31:27.9224 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on strata-sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:27.9239 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-add_report_card_simple-add_report_card_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:27.9254 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-download_button_simple-download_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:27.9268 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-archive_load_simple-reporter_load: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:27.9283 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-reset_button_simple-reset_reporter: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:27.9297 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-select_none_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:27.9312 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-select_all_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:27.9327 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-text_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:27.9341 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on strata-levels_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:27.9355 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-downbutton-downl: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:27.9370 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-expand: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:27.9384 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-expbut: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:27.9399 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on assay-name: NULL -&gt; \n[INFO] 2024-05-25 17:31:27.9414 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:27.9428 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-fun_name: NULL -&gt; Mean\n[INFO] 2024-05-25 17:31:27.9443 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on adtte-paramcd: NULL -&gt; \n[INFO] 2024-05-25 17:31:27.9458 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on percentiles: NULL -&gt; c(0, 0.5)\n[INFO] 2024-05-25 17:31:27.9472 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-downbutton-file_format: NULL -&gt; png\n[INFO] 2024-05-25 17:31:27.9487 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-lock_button: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:31:27.9501 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-downbutton-file_name: NULL -&gt; plot_20240525_173126\n[INFO] 2024-05-25 17:31:27.9595 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on strata-sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:27.9610 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-add_report_card_simple-add_report_card_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:27.9624 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-download_button_simple-download_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:27.9639 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-archive_load_simple-reporter_load: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:27.9658 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-reset_button_simple-reset_reporter: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:27.9821 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-select_none_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:27.9836 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-select_all_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:27.9848 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-text_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:27.9860 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on strata-levels_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:27.9871 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-downbutton-downl: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:27.9884 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-expand: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:27.9896 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-expbut: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:27.9908 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on assay-name:  -&gt; NULL\n[INFO] 2024-05-25 17:31:27.9920 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:27.9932 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-fun_name: Mean -&gt; NULL\n[INFO] 2024-05-25 17:31:27.9943 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on adtte-paramcd:  -&gt; NULL\n[INFO] 2024-05-25 17:31:27.9955 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on percentiles: c(0, 0.5) -&gt; NULL\n[INFO] 2024-05-25 17:31:27.9968 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-downbutton-file_format: png -&gt; NULL\n[INFO] 2024-05-25 17:31:27.9980 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-lock_button: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:31:27.9991 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-downbutton-file_name: plot_20240525_173126 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.0012 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on name: NULL -&gt; \n[INFO] 2024-05-25 17:31:28.0051 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on name:  -&gt; NULL\n[INFO] 2024-05-25 17:31:28.0063 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on select_none_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.0075 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on select_all_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.0087 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on text_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.0099 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.0111 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on fun_name: NULL -&gt; Mean\n[INFO] 2024-05-25 17:31:28.0123 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on lock_button: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:31:28.0190 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on select_none_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.0203 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on select_all_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.0215 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on text_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.0227 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.0239 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on fun_name: Mean -&gt; NULL\n[INFO] 2024-05-25 17:31:28.0250 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on lock_button: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:31:28.0262 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.0274 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on levels_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.0334 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.0346 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on levels_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.0358 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on paramcd: NULL -&gt; \n[INFO] 2024-05-25 17:31:28.1432 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on paramcd:  -&gt; NULL\n[INFO] 2024-05-25 17:31:28.1447 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on minimise_filter_overview: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.1466 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on minimise_filter_overview: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.1479 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on available_filters-show_dropmenu: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:31:28.1491 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on available_filters-show: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.1502 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on minimise_filter_active: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.1514 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on remove_all_filters: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.1526 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-remove_filters: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.1538 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-collapse: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.1551 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on ADTTE-remove_filters: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.1563 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on ADTTE-collapse: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.1582 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on available_filters-show_dropmenu: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:31:28.1594 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on available_filters-show: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.1606 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on minimise_filter_active: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.1618 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on remove_all_filters: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.1629 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-remove_filters: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.1642 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-collapse: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.1653 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on ADTTE-remove_filters: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.1665 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on ADTTE-collapse: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.1677 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on show_dropmenu: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:31:28.1689 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on show: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.1708 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on show_dropmenu: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:31:28.1720 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on show: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.1732 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd1-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.1744 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd1-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.1756 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd2-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.1768 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd2-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.1779 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd3-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.1791 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd3-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.1803 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on minimise_filter_add_vars: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.1822 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd1-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.1834 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd1-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.1846 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd2-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.1858 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd2-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.1870 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd3-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.1882 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd3-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.1894 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on minimise_filter_add_vars: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.1912 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.1925 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.1956 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.1968 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.1988 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on strata-sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2001 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-add_report_card_simple-add_report_card_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.2013 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-download_button_simple-download_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.2025 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-archive_load_simple-reporter_load: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.2037 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-reset_button_simple-reset_reporter: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.2049 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-select_none_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.2061 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-select_all_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.2072 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-text_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.2085 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on strata-levels_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.2097 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-downbutton-downl: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.2109 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-expand: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.2121 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-expbut: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.2134 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on assay-name: NULL -&gt; \n[INFO] 2024-05-25 17:31:28.2145 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2157 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-fun_name: NULL -&gt; Mean\n[INFO] 2024-05-25 17:31:28.2169 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on adtte-paramcd: NULL -&gt; \n[INFO] 2024-05-25 17:31:28.2181 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on percentiles: NULL -&gt; c(0, 0.5)\n[INFO] 2024-05-25 17:31:28.2193 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-downbutton-file_format: NULL -&gt; png\n[INFO] 2024-05-25 17:31:28.2205 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-lock_button: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:31:28.2216 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-downbutton-file_name: NULL -&gt; plot_20240525_173126\n[INFO] 2024-05-25 17:31:28.2228 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-flex_width: NULL -&gt; 732\n[INFO] 2024-05-25 17:31:28.2240 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-plot_modal_width: NULL -&gt; 1252.8\n[INFO] 2024-05-25 17:31:28.2260 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on strata-sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2272 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-add_report_card_simple-add_report_card_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2284 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-download_button_simple-download_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2296 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-archive_load_simple-reporter_load: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2308 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-reset_button_simple-reset_reporter: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2320 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-select_none_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2332 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-select_all_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2344 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-text_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2356 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on strata-levels_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2368 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-downbutton-downl: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2380 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-expand: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2393 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-expbut: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2405 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on assay-name:  -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2417 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2428 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-fun_name: Mean -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2440 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on adtte-paramcd:  -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2452 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on percentiles: c(0, 0.5) -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2464 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-downbutton-file_format: png -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2476 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-lock_button: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2488 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-downbutton-file_name: plot_20240525_173126 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2500 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-flex_width: 732 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2512 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-plot_modal_width: 1252.8 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2531 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on name: NULL -&gt; \n[INFO] 2024-05-25 17:31:28.2550 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on name:  -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2563 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on select_none_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.2575 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on select_all_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.2587 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on text_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.2599 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2611 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on fun_name: NULL -&gt; Mean\n[INFO] 2024-05-25 17:31:28.2623 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on lock_button: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:31:28.2642 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on select_none_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2654 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on select_all_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2666 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on text_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2678 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2691 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on fun_name: Mean -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2703 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on lock_button: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2715 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2728 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on levels_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.2747 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2759 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on levels_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.2771 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on paramcd: NULL -&gt; \n\n\nWarning: 'experiments' dropped; see 'drops()'\n\n\n[INFO] 2024-05-25 17:31:28.5001 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on paramcd:  -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5015 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on minimise_filter_overview: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.5035 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on minimise_filter_overview: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5047 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on available_filters-show_dropmenu: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:31:28.5059 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on available_filters-show: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.5071 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on minimise_filter_active: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.5083 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on remove_all_filters: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.5095 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-remove_filters: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.5107 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-collapse: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.5119 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on ADTTE-remove_filters: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.5131 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on ADTTE-collapse: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.5150 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on available_filters-show_dropmenu: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5163 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on available_filters-show: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5175 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on minimise_filter_active: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5187 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on remove_all_filters: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5199 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-remove_filters: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5211 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-collapse: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5223 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on ADTTE-remove_filters: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5235 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on ADTTE-collapse: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5247 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on show_dropmenu: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:31:28.5259 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on show: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.5279 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on show_dropmenu: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5291 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on show: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5303 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd1-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5315 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd1-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5327 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd2-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5339 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd2-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5351 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd3-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5363 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd3-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5375 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on minimise_filter_add_vars: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.5387 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on ADTTE-filter-var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5399 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-subjects-var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5418 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd1-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5430 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd1-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5442 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd2-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5454 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd2-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5466 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd3-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5478 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd3-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5490 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on minimise_filter_add_vars: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5501 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on ADTTE-filter-var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5513 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-subjects-var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5525 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5544 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5556 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5568 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5601 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5613 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5625 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5645 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5657 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on strata-sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5669 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-add_report_card_simple-add_report_card_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.5681 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-download_button_simple-download_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.5693 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-archive_load_simple-reporter_load: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.5704 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-reset_button_simple-reset_reporter: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.5716 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-select_none_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.5729 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-select_all_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.5740 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-text_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.5752 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on strata-levels_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.5764 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-downbutton-downl: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.5776 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-expand: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.5788 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-expbut: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.5800 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on assay-name: NULL -&gt; \n[INFO] 2024-05-25 17:31:28.5812 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5823 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-fun_name: NULL -&gt; Mean\n[INFO] 2024-05-25 17:31:28.5835 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on adtte-paramcd: NULL -&gt; \n[INFO] 2024-05-25 17:31:28.5847 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on percentiles: NULL -&gt; c(0, 0.5)\n[INFO] 2024-05-25 17:31:28.5859 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-downbutton-file_format: NULL -&gt; png\n[INFO] 2024-05-25 17:31:28.5871 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-lock_button: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:31:28.5883 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-downbutton-file_name: NULL -&gt; plot_20240525_173126\n[INFO] 2024-05-25 17:31:28.5895 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-flex_width: NULL -&gt; 732\n[INFO] 2024-05-25 17:31:28.5906 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-plot_modal_width: NULL -&gt; 1252.8\n[INFO] 2024-05-25 17:31:28.5918 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on experiment-name: NULL -&gt; hd1\n[INFO] 2024-05-25 17:31:28.5937 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on strata-sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5949 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-add_report_card_simple-add_report_card_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5962 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-download_button_simple-download_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5974 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-archive_load_simple-reporter_load: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5985 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-reset_button_simple-reset_reporter: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.5997 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-select_none_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.6010 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-select_all_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.6021 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-text_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.6033 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on strata-levels_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.6045 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-downbutton-downl: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.6057 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-expand: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.6069 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-expbut: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.6081 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on assay-name:  -&gt; NULL\n[INFO] 2024-05-25 17:31:28.6093 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.6104 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-fun_name: Mean -&gt; NULL\n[INFO] 2024-05-25 17:31:28.6116 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on adtte-paramcd:  -&gt; NULL\n[INFO] 2024-05-25 17:31:28.6129 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on percentiles: c(0, 0.5) -&gt; NULL\n[INFO] 2024-05-25 17:31:28.6140 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-downbutton-file_format: png -&gt; NULL\n[INFO] 2024-05-25 17:31:28.6152 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-lock_button: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:31:28.6164 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-downbutton-file_name: plot_20240525_173126 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.6176 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-flex_width: 732 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.6188 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-plot_modal_width: 1252.8 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.6199 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on experiment-name: hd1 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.6211 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on name: NULL -&gt; hd1\n[INFO] 2024-05-25 17:31:28.6230 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on name: hd1 -&gt; \n[INFO] 2024-05-25 17:31:28.6250 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on name:  -&gt; NULL\n[INFO] 2024-05-25 17:31:28.6262 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on select_none_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.6273 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on select_all_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.6286 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on text_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.6297 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.6309 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on fun_name: NULL -&gt; Mean\n[INFO] 2024-05-25 17:31:28.6321 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on lock_button: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:31:28.6340 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on select_none_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.6352 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on select_all_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.6364 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on text_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.6376 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.6388 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on fun_name: Mean -&gt; NULL\n[INFO] 2024-05-25 17:31:28.6400 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on lock_button: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:31:28.6411 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.6423 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on levels_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.6443 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.6455 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on levels_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.6466 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on paramcd: NULL -&gt; \n[INFO] 2024-05-25 17:31:28.7101 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on paramcd:  -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7115 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on minimise_filter_overview: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.7135 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on minimise_filter_overview: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7148 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on available_filters-show_dropmenu: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:31:28.7160 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on available_filters-show: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.7172 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on minimise_filter_active: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.7184 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on remove_all_filters: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.7196 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-remove_filters: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.7209 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-collapse: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.7221 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on ADTTE-remove_filters: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.7233 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on ADTTE-collapse: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.7252 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on available_filters-show_dropmenu: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7264 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on available_filters-show: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7276 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on minimise_filter_active: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7295 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on remove_all_filters: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7314 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-remove_filters: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7327 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-collapse: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7339 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on ADTTE-remove_filters: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7351 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on ADTTE-collapse: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7363 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on show_dropmenu: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:31:28.7377 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on show: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.7397 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on show_dropmenu: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7409 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on show: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7421 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd1-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7433 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd1-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7445 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd2-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7457 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd2-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7468 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd3-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7480 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd3-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7492 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on minimise_filter_add_vars: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.7504 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on ADTTE-filter-var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7515 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-subjects-var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7535 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd1-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7548 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd1-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7560 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd2-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7572 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd2-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7584 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd3-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7595 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd3-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7608 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on minimise_filter_add_vars: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7619 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on ADTTE-filter-var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7631 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-subjects-var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7643 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7663 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7674 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7687 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7721 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7733 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7745 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7765 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7777 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on strata-sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7789 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-add_report_card_simple-add_report_card_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.7801 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-download_button_simple-download_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.7813 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-archive_load_simple-reporter_load: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.7824 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-reset_button_simple-reset_reporter: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.7836 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-select_none_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.7848 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-select_all_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.7860 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-text_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.7873 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on strata-levels_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.7885 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-downbutton-downl: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.7897 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-expand: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.7909 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-expbut: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.7921 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on assay-name: NULL -&gt; counts\n[INFO] 2024-05-25 17:31:28.7933 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.7944 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-fun_name: NULL -&gt; Mean\n[INFO] 2024-05-25 17:31:28.7956 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on adtte-paramcd: NULL -&gt; \n[INFO] 2024-05-25 17:31:28.7968 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on percentiles: NULL -&gt; c(0, 0.5)\n[INFO] 2024-05-25 17:31:28.7979 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-downbutton-file_format: NULL -&gt; png\n[INFO] 2024-05-25 17:31:28.7991 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-lock_button: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:31:28.8003 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-downbutton-file_name: NULL -&gt; plot_20240525_173126\n[INFO] 2024-05-25 17:31:28.8015 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-flex_width: NULL -&gt; 732\n[INFO] 2024-05-25 17:31:28.8026 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-plot_modal_width: NULL -&gt; 1252.8\n[INFO] 2024-05-25 17:31:28.8039 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on experiment-name: NULL -&gt; hd1\n[INFO] 2024-05-25 17:31:28.8059 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on strata-sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8071 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-add_report_card_simple-add_report_card_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8084 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-download_button_simple-download_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8095 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-archive_load_simple-reporter_load: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8107 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-reset_button_simple-reset_reporter: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8120 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-select_none_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8131 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-select_all_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8143 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-text_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8154 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on strata-levels_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8167 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-downbutton-downl: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8179 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-expand: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8190 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-expbut: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8202 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on assay-name: counts -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8215 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8227 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-fun_name: Mean -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8239 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on adtte-paramcd:  -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8251 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on percentiles: c(0, 0.5) -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8262 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-downbutton-file_format: png -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8274 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-lock_button: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8286 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-downbutton-file_name: plot_20240525_173126 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8298 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-flex_width: 732 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8309 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-plot_modal_width: 1252.8 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8321 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on experiment-name: hd1 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8333 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on name: NULL -&gt; hd1\n[INFO] 2024-05-25 17:31:28.8353 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on name: hd1 -&gt; counts\n[INFO] 2024-05-25 17:31:28.8374 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on name: counts -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8386 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on select_none_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.8398 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on select_all_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.8410 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on text_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.8422 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8433 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on fun_name: NULL -&gt; Mean\n[INFO] 2024-05-25 17:31:28.8445 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on lock_button: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:31:28.8464 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on select_none_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8477 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on select_all_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8490 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on text_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8502 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8514 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on fun_name: Mean -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8527 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on lock_button: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8540 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8552 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on levels_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:28.8572 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8585 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on levels_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:28.8597 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on paramcd: NULL -&gt; \n[INFO] 2024-05-25 17:31:41.9383 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on paramcd:  -&gt; NULL\n[INFO] 2024-05-25 17:31:42.0294 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on minimise_filter_overview: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:42.0333 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on minimise_filter_overview: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:42.0351 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on available_filters-show_dropmenu: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:31:42.0369 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on available_filters-show: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:42.0387 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on minimise_filter_active: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:42.0404 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on remove_all_filters: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:42.0422 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-remove_filters: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:42.0439 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-collapse: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:42.0457 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on ADTTE-remove_filters: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:42.0474 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on ADTTE-collapse: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:42.0504 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on available_filters-show_dropmenu: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:31:42.0522 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on available_filters-show: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:42.0539 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on minimise_filter_active: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:42.0557 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on remove_all_filters: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:42.0575 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-remove_filters: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:42.0592 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-collapse: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:42.0610 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on ADTTE-remove_filters: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:42.0628 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on ADTTE-collapse: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:42.0645 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on show_dropmenu: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:31:42.0662 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on show: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:42.0692 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on show_dropmenu: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:31:42.0710 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on show: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:42.0728 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd1-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.0745 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd1-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.0763 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd2-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.0780 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd2-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.0797 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd3-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.0814 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd3-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.0832 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on minimise_filter_add_vars: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:42.0849 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on ADTTE-filter-var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.0866 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-subjects-var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.0897 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd1-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.0915 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd1-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.0933 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd2-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.0950 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd2-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.0967 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd3-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.0985 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-hd3-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1003 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on minimise_filter_add_vars: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1021 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on ADTTE-filter-var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1039 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on MAE-subjects-var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1056 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1081 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1093 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1105 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1139 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1151 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1165 pid:3766 token:[3eddf79a] teal.slice Shiny input change detected on var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1184 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1196 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on strata-sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1215 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-add_report_card_simple-add_report_card_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:42.1234 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-download_button_simple-download_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:42.1247 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-archive_load_simple-reporter_load: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:42.1294 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-reset_button_simple-reset_reporter: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:42.1311 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-select_none_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:42.1328 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-select_all_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:42.1346 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-text_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:42.1359 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on strata-levels_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:42.1370 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-downbutton-downl: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:42.1382 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-expand: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:42.1395 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-expbut: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:42.1408 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on assay-name: NULL -&gt; counts\n[INFO] 2024-05-25 17:31:42.1419 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1431 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-fun_name: NULL -&gt; Mean\n[INFO] 2024-05-25 17:31:42.1443 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on adtte-paramcd: NULL -&gt; \n[INFO] 2024-05-25 17:31:42.1454 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on percentiles: NULL -&gt; c(0, 0.5)\n[INFO] 2024-05-25 17:31:42.1466 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-downbutton-file_format: NULL -&gt; png\n[INFO] 2024-05-25 17:31:42.1477 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-lock_button: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:31:42.1491 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-downbutton-file_name: NULL -&gt; plot_20240525_173126\n[INFO] 2024-05-25 17:31:42.1503 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-flex_width: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:42.1515 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-plot_modal_width: NULL -&gt; 0.87\n[INFO] 2024-05-25 17:31:42.1532 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on experiment-name: NULL -&gt; hd1\n[INFO] 2024-05-25 17:31:42.1563 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on strata-sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1580 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-add_report_card_simple-add_report_card_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1597 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-download_button_simple-download_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1614 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-archive_load_simple-reporter_load: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1630 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on simple_reporter-reset_button_simple-reset_reporter: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1642 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-select_none_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1654 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-select_all_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1665 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-text_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1677 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on strata-levels_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1689 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-downbutton-downl: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1700 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-expand: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1712 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-expbut: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1724 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on assay-name: counts -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1735 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1747 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-fun_name: Mean -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1759 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on adtte-paramcd:  -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1771 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on percentiles: c(0, 0.5) -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1783 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-downbutton-file_format: png -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1794 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes-lock_button: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1806 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-downbutton-file_name: plot_20240525_173126 -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1817 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-flex_width: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1829 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on plot-plot_modal_width: 0.87 -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1841 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on experiment-name: hd1 -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1853 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on name: NULL -&gt; hd1\n[INFO] 2024-05-25 17:31:42.1873 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on name: hd1 -&gt; counts\n[INFO] 2024-05-25 17:31:42.1893 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on name: counts -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1905 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on select_none_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:42.1916 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on select_all_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:42.1928 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on text_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:42.1940 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1951 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on fun_name: NULL -&gt; Mean\n[INFO] 2024-05-25 17:31:42.1963 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on lock_button: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:31:42.1982 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on select_none_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:42.1994 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on select_all_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:42.2006 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on text_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:42.2018 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.2029 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on fun_name: Mean -&gt; NULL\n[INFO] 2024-05-25 17:31:42.2041 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on lock_button: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:31:42.2053 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.2065 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on levels_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:31:42.2084 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:31:42.2096 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on levels_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:31:42.2107 pid:3766 token:[3eddf79a] teal.modules.hermes Shiny input change detected on paramcd: NULL -&gt; \n\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.4.0 (2024-04-24)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 22.04.4 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] random.cdisc.data_0.3.15.9004  teal.modules.hermes_0.1.6.9015\n [3] teal_0.15.2.9038               teal.slice_0.5.1.9003         \n [5] teal.data_0.6.0.9005           teal.code_0.5.0.9006          \n [7] shiny_1.8.1.1                  hermes_1.7.1.9002             \n [9] SummarizedExperiment_1.34.0    Biobase_2.64.0                \n[11] GenomicRanges_1.56.0           GenomeInfoDb_1.40.0           \n[13] IRanges_2.38.0                 S4Vectors_0.42.0              \n[15] BiocGenerics_0.50.0            MatrixGenerics_1.16.0         \n[17] matrixStats_1.3.0              ggfortify_0.4.17              \n[19] ggplot2_3.5.1                  dplyr_1.1.4                   \n[21] tern_0.9.4.9008                rtables_0.6.7.9002            \n[23] magrittr_2.0.3                 formatters_0.5.6.9005         \n\nloaded via a namespace (and not attached):\n  [1] RColorBrewer_1.1-3          jsonlite_1.8.8             \n  [3] shape_1.4.6.1               MultiAssayExperiment_1.30.1\n  [5] farver_2.1.2                rmarkdown_2.27             \n  [7] GlobalOptions_0.1.2         zlibbioc_1.50.0            \n  [9] vctrs_0.6.5                 memoise_2.0.1              \n [11] webshot_0.5.5               BiocBaseUtils_1.7.0        \n [13] htmltools_0.5.8.1           S4Arrays_1.4.1             \n [15] forcats_1.0.0               progress_1.2.3             \n [17] curl_5.2.1                  broom_1.0.6                \n [19] SparseArray_1.4.5           sass_0.4.9                 \n [21] bslib_0.7.0                 fontawesome_0.5.2          \n [23] htmlwidgets_1.6.4           httr2_1.0.1                \n [25] cachem_1.1.0                teal.widgets_0.4.2.9012    \n [27] mime_0.12                   lifecycle_1.0.4            \n [29] iterators_1.0.14            pkgconfig_2.0.3            \n [31] webshot2_0.1.1              Matrix_1.7-0               \n [33] R6_2.5.1                    fastmap_1.2.0              \n [35] GenomeInfoDbData_1.2.12     rbibutils_2.2.16           \n [37] clue_0.3-65                 digest_0.6.35              \n [39] colorspace_2.1-0            shinycssloaders_1.0.0      \n [41] ps_1.7.6                    AnnotationDbi_1.66.0       \n [43] RSQLite_2.3.6               filelock_1.0.3             \n [45] labeling_0.4.3              fansi_1.0.6                \n [47] httr_1.4.7                  abind_1.4-5                \n [49] compiler_4.4.0              bit64_4.0.5                \n [51] withr_3.0.0                 doParallel_1.0.17          \n [53] backports_1.4.1             DBI_1.2.2                  \n [55] logger_0.3.0                biomaRt_2.60.0             \n [57] rappdirs_0.3.3              DelayedArray_0.30.1        \n [59] rjson_0.2.21                chromote_0.2.0             \n [61] tools_4.4.0                 httpuv_1.6.15              \n [63] glue_1.7.0                  callr_3.7.6                \n [65] promises_1.3.0              grid_4.4.0                 \n [67] checkmate_2.3.1             cluster_2.1.6              \n [69] generics_0.1.3              gtable_0.3.5               \n [71] websocket_1.4.1             tidyr_1.3.1                \n [73] hms_1.1.3                   xml2_1.3.6                 \n [75] utf8_1.2.4                  XVector_0.44.0             \n [77] ggrepel_0.9.5               foreach_1.5.2              \n [79] pillar_1.9.0                stringr_1.5.1              \n [81] later_1.3.2                 circlize_0.4.16            \n [83] splines_4.4.0               BiocFileCache_2.12.0       \n [85] lattice_0.22-6              survival_3.6-4             \n [87] bit_4.0.5                   tidyselect_1.2.1           \n [89] ComplexHeatmap_2.20.0       Biostrings_2.72.0          \n [91] knitr_1.46                  gridExtra_2.3              \n [93] teal.logger_0.2.0.9003      xfun_0.44                  \n [95] stringi_1.8.4               UCSC.utils_1.0.0           \n [97] yaml_2.3.8                  shinyWidgets_0.8.6         \n [99] evaluate_0.23               codetools_0.2-20           \n[101] tibble_3.2.1                cli_3.6.2                  \n[103] xtable_1.8-4                Rdpack_2.6                 \n[105] jquerylib_0.1.4             processx_3.8.4             \n[107] munsell_0.5.1               teal.reporter_0.3.1.9007   \n[109] Rcpp_1.0.12                 dbplyr_2.5.0               \n[111] png_0.1-8                   parallel_4.4.0             \n[113] assertthat_0.2.1            blob_1.2.4                 \n[115] prettyunits_1.2.0           scales_1.3.0               \n[117] purrr_1.0.2                 crayon_1.5.2               \n[119] GetoptLong_1.0.5            rlang_1.1.3                \n[121] formatR_1.14                cowplot_1.1.3              \n[123] KEGGREST_1.44.0             shinyjs_2.1.0              \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "RNAG",
      "RNAG9"
    ]
  },
  {
    "objectID": "graphs/rnag02.html",
    "href": "graphs/rnag02.html",
    "title": "RNAG2",
    "section": "",
    "text": "Setup: Import, Filter and Normalize\nDerive Top Genes\nPlot Top Genes\nTeal Module for Top Genes Plot\nSession Info\n\n\n\nThis page can be used as a template of how to use the available hermes functions to derive and plot top genes for RNA-seq RNA-seq gene expression data and to create an interactive top genes plot using teal.modules.hermes.\nDerivation of top genes uses HermesData as input. See RNAG1 for details on how to import, filter and normalize HermesData.\n\nCodelibrary(hermes)\nobject &lt;- hermes_data %&gt;%\n  add_quality_flags() %&gt;%\n  filter() %&gt;%\n  normalize()\n\n\n\n\nWe can derive top most expressed genes in HermesData using the top_genes() function. By default, this function uses the counts assay and summary statistic function rowMeans() with no minimum threshold to derive the 10 most expressed genes. You can change this number, or instead work with a minimum threshold on the derived statistic.\n\nCoderesult &lt;- top_genes(object)\n\n\nIf we want to derive only the 5 most expressed genes, we can specify this via n_top.\n\nCoderesult &lt;- top_genes(object, n_top = 5)\n\n\nAlternatively, we can also set a minimum threshold of average counts (across samples).\n\nCoderesult &lt;- top_genes(object, min_threshold = 50000)\n\n\nIf we want to derive top genes for a specific assay, we can also specify this via assay_name. By default, top_genes() function uses the counts assay. It is important to ensure that the same normalization method is applied on the HermesData object prior to deriving top genes, otherwise the assay would not be available here.\n\nCoderesult &lt;- top_genes(object, assay_name = \"tpm\")\n\n\nYou can also change which summary statistic function is used. Most important here is that this function needs to work on the matrix (genes in rows, samples in columns) and return back a value for each gene, thus summarizing the values from all samples for this gene. Thus all row-wise statistic functions (like rowMeans() from package stats, rowMaxs(), rowSds(), … from package matrixStats) are well suited.\nHere, the statistic chosen is the maximum count across samples:\n\nCoderesult &lt;- top_genes(object, summary_fun = rowMaxs)\n\n\n\n\nWe can then create a simple bar plot for these top genes using autoplot() function.\n\nCodeautoplot(result)\n\n\n\n\n\n\n\nBy default, y-axis label is set to summary function name and assay name used to generate the object with top genes using top_genes() function. It is up to the user to optionally adjust the y-axis label via the y_lab argument, and also the x-axis label and title can be adjusted.\n\nCodeautoplot(result, y_lab = \"Maximum Count per Sample\", x_lab = \"Genes\", title = \"Top Genes\")\n\n\n\n\n\n\n\n\n\nWe start by importing a MultiAssayExperiment; here we use the example multi_assay_experiment available in hermes. It is wrapped as a teal::dataset. We can select the top genes plot under the plot type menu. We can then use the provided teal module tm_g_quality to include a QC module in our teal app.\n\nCodelibrary(teal.modules.hermes)\n\ndata &lt;- teal_data()\ndata &lt;- within(data, {\n  library(hermes)\n  MAE &lt;- multi_assay_experiment\n})\ndatanames(data) &lt;- \"MAE\"\n\napp &lt;- init(\n  data = data,\n  modules = modules(\n    tm_g_quality(\n      label = \"quality\",\n      mae_name = \"MAE\"\n    )\n  )\n)\nshinyApp(app$ui, app$server)\n\n[INFO] 2024-02-23 15:35:37.1401 pid:2697 token:[4c18a7e1] teal Initializing reporter_previewer_module\n\n\nWarning: 'experiments' dropped; see 'drops()'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] teal.modules.hermes_0.1.6.9003 teal_0.15.1.9000              \n [3] teal.slice_0.5.0.9003          teal.data_0.5.0.9000          \n [5] teal.code_0.5.0.9003           shiny_1.8.0                   \n [7] hermes_1.7.1.9000              SummarizedExperiment_1.32.0   \n [9] Biobase_2.62.0                 GenomicRanges_1.54.1          \n[11] GenomeInfoDb_1.38.5            IRanges_2.36.0                \n[13] S4Vectors_0.40.2               BiocGenerics_0.48.1           \n[15] MatrixGenerics_1.14.0          matrixStats_1.2.0             \n[17] ggfortify_0.4.16               ggplot2_3.4.4                 \n\nloaded via a namespace (and not attached):\n  [1] RColorBrewer_1.1-3          jsonlite_1.8.8             \n  [3] shape_1.4.6                 MultiAssayExperiment_1.28.0\n  [5] magrittr_2.0.3              farver_2.1.1               \n  [7] rmarkdown_2.25              ragg_1.2.7                 \n  [9] GlobalOptions_0.1.2         zlibbioc_1.48.0            \n [11] vctrs_0.6.5                 memoise_2.0.1              \n [13] RCurl_1.98-1.14             webshot_0.5.5              \n [15] BiocBaseUtils_1.5.0         htmltools_0.5.7            \n [17] S4Arrays_1.2.0              forcats_1.0.0              \n [19] progress_1.2.3              curl_5.2.0                 \n [21] SparseArray_1.2.3           sass_0.4.8                 \n [23] bslib_0.6.1                 fontawesome_0.5.2          \n [25] htmlwidgets_1.6.4           testthat_3.2.1             \n [27] cachem_1.0.8                teal.widgets_0.4.2.9005    \n [29] mime_0.12                   lifecycle_1.0.4            \n [31] iterators_1.0.14            pkgconfig_2.0.3            \n [33] webshot2_0.1.1              Matrix_1.6-5               \n [35] R6_2.5.1                    fastmap_1.1.1              \n [37] GenomeInfoDbData_1.2.11     rbibutils_2.2.16           \n [39] clue_0.3-65                 digest_0.6.34              \n [41] colorspace_2.1-0            shinycssloaders_1.0.0      \n [43] ps_1.7.6                    AnnotationDbi_1.64.1       \n [45] DESeq2_1.42.0               textshaping_0.3.7          \n [47] RSQLite_2.3.5               filelock_1.0.3             \n [49] labeling_0.4.3              fansi_1.0.6                \n [51] httr_1.4.7                  abind_1.4-5                \n [53] compiler_4.3.2              bit64_4.0.5                \n [55] withr_3.0.0                 doParallel_1.0.17          \n [57] backports_1.4.1             BiocParallel_1.36.0        \n [59] DBI_1.2.1                   logger_0.2.2               \n [61] biomaRt_2.58.0              rappdirs_0.3.3             \n [63] DelayedArray_0.28.0         rjson_0.2.21               \n [65] chromote_0.1.2              tools_4.3.2                \n [67] httpuv_1.6.13               glue_1.7.0                 \n [69] callr_3.7.3                 promises_1.2.1             \n [71] grid_4.3.2                  checkmate_2.3.1            \n [73] cluster_2.1.6               generics_0.1.3             \n [75] gtable_0.3.4                websocket_1.4.1            \n [77] tidyr_1.3.1                 hms_1.1.3                  \n [79] xml2_1.3.6                  utf8_1.2.4                 \n [81] XVector_0.42.0              ggrepel_0.9.5              \n [83] foreach_1.5.2               pillar_1.9.0               \n [85] stringr_1.5.1               limma_3.58.1               \n [87] later_1.3.2                 circlize_0.4.15            \n [89] dplyr_1.1.4                 BiocFileCache_2.10.1       \n [91] lattice_0.22-5              bit_4.0.5                  \n [93] tidyselect_1.2.0            ComplexHeatmap_2.18.0      \n [95] locfit_1.5-9.8              Biostrings_2.70.1          \n [97] knitr_1.45                  gridExtra_2.3              \n [99] teal.logger_0.1.3.9011      edgeR_4.0.12               \n[101] xfun_0.41                   statmod_1.5.0              \n[103] brio_1.1.4                  stringi_1.8.3              \n[105] yaml_2.3.8                  shinyWidgets_0.8.1         \n[107] evaluate_0.23               codetools_0.2-19           \n[109] tibble_3.2.1                cli_3.6.2                  \n[111] systemfonts_1.0.5           xtable_1.8-4               \n[113] Rdpack_2.6                  processx_3.8.3             \n[115] jquerylib_0.1.4             munsell_0.5.0              \n[117] teal.reporter_0.3.0.9003    Rcpp_1.0.12                \n[119] dbplyr_2.4.0                png_0.1-8                  \n[121] XML_3.99-0.16.1             parallel_4.3.2             \n[123] ellipsis_0.3.2              assertthat_0.2.1           \n[125] blob_1.2.4                  prettyunits_1.2.0          \n[127] bitops_1.0-7                scales_1.3.0               \n[129] purrr_1.0.2                 crayon_1.5.2               \n[131] GetoptLong_1.0.5            rlang_1.1.3                \n[133] formatR_1.14                KEGGREST_1.42.0            \n[135] shinyjs_2.1.0              \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "RNAG",
      "RNAG2"
    ]
  },
  {
    "objectID": "graphs/RFG2/setup.html#setup",
    "href": "graphs/RFG2/setup.html#setup",
    "title": "",
    "section": "Setup",
    "text": "Setup\nThese templates are helpful when we are interested in modelling the effects of continuous biomarker variables on the binary response outcome, conditional on covariates and/or stratification variables included in (conditional) logistic regression models. We would like to assess how the estimates effects change when we look at different subgroups.\nIn detail the differences to RFG1 are the following:\n\nThe extract_rsp_subgroups() and tabulate_rsp_subgroups() functions used in RFG1 evaluate the treatment effects from two arms, across subgroups. On the other hand, the extract_rsp_biomarkers() and tabulate_rsp_biomarkers() functions used here in RFG2 evaluate the effects from continuous biomarkers on the probability for response.\nThe extract_rsp_subgroups() and tabulate_rsp_subgroups() functions only allow specification of a single treatment arm variable, while the extract_rsp_biomarkers() and tabulate_rsp_biomarkers() allow to look at multiple continuous biomarker variables at once.\nIn addition to the treatment arms, the use of extract_rsp_subgroups() and tabulate_rsp_subgroups() functions can be extended to other binary variables. For example, we could define the binarized ARM variable as AGE&gt;=65 vs. AGE&lt;65 and then look at the odds ratios across subgroups. For the extract_rsp_biomarkers() and tabulate_rsp_biomarkers() functions, we could use the original continuous biomarker variable AGE, and then look at the estimated effect across subgroups.\n\nSimilarly like in RFG1, we will use the cadrs data set from the random.cdisc.data package. Here we just filter for the Best Confirmed Overall Response by Investigator and patients with measurable disease at baseline, and define a new variable COMPRESP to include complete responses only.\n\nCodelibrary(tern)\nlibrary(dplyr)\nlibrary(hermes)\n\nadrs &lt;- random.cdisc.data::cadrs\n\nadrs_f &lt;- adrs %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"BESRSPI\", BMEASIFL == \"Y\") %&gt;%\n  mutate(COMPRESP = (AVALC == \"CR\"))"
  },
  {
    "objectID": "graphs/RFG2/rfg02c.html",
    "href": "graphs/RFG2/rfg02c.html",
    "title": "RFG2C",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nThese templates are helpful when we are interested in modelling the effects of continuous biomarker variables on the binary response outcome, conditional on covariates and/or stratification variables included in (conditional) logistic regression models. We would like to assess how the estimates effects change when we look at different subgroups.\nIn detail the differences to RFG1 are the following:\n\nThe extract_rsp_subgroups() and tabulate_rsp_subgroups() functions used in RFG1 evaluate the treatment effects from two arms, across subgroups. On the other hand, the extract_rsp_biomarkers() and tabulate_rsp_biomarkers() functions used here in RFG2 evaluate the effects from continuous biomarkers on the probability for response.\nThe extract_rsp_subgroups() and tabulate_rsp_subgroups() functions only allow specification of a single treatment arm variable, while the extract_rsp_biomarkers() and tabulate_rsp_biomarkers() allow to look at multiple continuous biomarker variables at once.\nIn addition to the treatment arms, the use of extract_rsp_subgroups() and tabulate_rsp_subgroups() functions can be extended to other binary variables. For example, we could define the binarized ARM variable as AGE&gt;=65 vs. AGE&lt;65 and then look at the odds ratios across subgroups. For the extract_rsp_biomarkers() and tabulate_rsp_biomarkers() functions, we could use the original continuous biomarker variable AGE, and then look at the estimated effect across subgroups.\n\nSimilarly like in RFG1, we will use the synthetic_cdisc_data$adrs data set from the scda package. Here we just filter for the Best Confirmed Overall Response by Investigator and patients with measurable disease at baseline, and define a new variable COMPRESP to include complete responses only.\n\nCodelibrary(tern)\nlibrary(dplyr)\nlibrary(hermes)\n\nadrs &lt;- scda::synthetic_cdisc_data(\"latest\")$adrs\n\nadrs_f &lt;- adrs %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"BESRSPI\", BMEASIFL == \"Y\") %&gt;%\n  mutate(COMPRESP = (AVALC == \"CR\"))\n\n\n\n\nFinally we can also specify stratification variables with the strat variable element, which leads to the use of conditional logistic regression models.\n\nCodedf &lt;- extract_rsp_biomarkers(\n  variables = list(\n    rsp = \"COMPRESP\",\n    biomarkers = c(\"BMRKR1\", \"AGE\"),\n    covariates = \"SEX\",\n    subgroups = \"BMRKR2\",\n    strat = c(\"STRATA1\", \"STRATA2\")\n  ),\n  data = adrs_f\n)\n\nresult &lt;- tabulate_rsp_biomarkers(df, vars = c(\"n_tot\", \"n_rsp\", \"prop\", \"or\", \"ci\"))\ng_forest(result, xlim = c(0.7, 1.4))\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] hermes_1.7.1.9000           SummarizedExperiment_1.32.0\n [3] Biobase_2.62.0              GenomicRanges_1.54.1       \n [5] GenomeInfoDb_1.38.5         IRanges_2.36.0             \n [7] S4Vectors_0.40.2            BiocGenerics_0.48.1        \n [9] MatrixGenerics_1.14.0       matrixStats_1.2.0          \n[11] ggfortify_0.4.16            ggplot2_3.4.4              \n[13] dplyr_1.1.4                 tern_0.9.3.9016            \n[15] rtables_0.6.6.9010          magrittr_2.0.3             \n[17] formatters_0.5.5.9010      \n\nloaded via a namespace (and not attached):\n  [1] Rdpack_2.6                  DBI_1.2.1                  \n  [3] bitops_1.0-7                gridExtra_2.3              \n  [5] biomaRt_2.58.0              rlang_1.1.3                \n  [7] clue_0.3-65                 GetoptLong_1.0.5           \n  [9] compiler_4.3.2              RSQLite_2.3.5              \n [11] png_0.1-8                   vctrs_0.6.5                \n [13] stringr_1.5.1               pkgconfig_2.0.3            \n [15] shape_1.4.6                 crayon_1.5.2               \n [17] fastmap_1.1.1               dbplyr_2.4.0               \n [19] backports_1.4.1             XVector_0.42.0             \n [21] labeling_0.4.3              utf8_1.2.4                 \n [23] rmarkdown_2.25              purrr_1.0.2                \n [25] bit_4.0.5                   xfun_0.41                  \n [27] MultiAssayExperiment_1.28.0 scda_0.1.6.9016            \n [29] zlibbioc_1.48.0             cachem_1.0.8               \n [31] jsonlite_1.8.8              progress_1.2.3             \n [33] blob_1.2.4                  DelayedArray_0.28.0        \n [35] prettyunits_1.2.0           broom_1.0.5                \n [37] parallel_4.3.2              cluster_2.1.6              \n [39] R6_2.5.1                    stringi_1.8.3              \n [41] RColorBrewer_1.1-3          Rcpp_1.0.12                \n [43] assertthat_0.2.1            iterators_1.0.14           \n [45] knitr_1.45                  Matrix_1.6-5               \n [47] splines_4.3.2               tidyselect_1.2.0           \n [49] abind_1.4-5                 yaml_2.3.8                 \n [51] doParallel_1.0.17           codetools_0.2-19           \n [53] curl_5.2.0                  lattice_0.22-5             \n [55] tibble_3.2.1                withr_3.0.0                \n [57] KEGGREST_1.42.0             evaluate_0.23              \n [59] survival_3.5-7              BiocFileCache_2.10.1       \n [61] xml2_1.3.6                  Biostrings_2.70.1          \n [63] circlize_0.4.15             filelock_1.0.3             \n [65] pillar_1.9.0                checkmate_2.3.1            \n [67] foreach_1.5.2               generics_0.1.3             \n [69] RCurl_1.98-1.14             hms_1.1.3                  \n [71] munsell_0.5.0               scales_1.3.0               \n [73] glue_1.7.0                  tools_4.3.2                \n [75] forcats_1.0.0               XML_3.99-0.16.1            \n [77] cowplot_1.1.3               grid_4.3.2                 \n [79] tidyr_1.3.1                 rbibutils_2.2.16           \n [81] AnnotationDbi_1.64.1        colorspace_2.1-0           \n [83] GenomeInfoDbData_1.2.11     cli_3.6.2                  \n [85] rappdirs_0.3.3              fansi_1.0.6                \n [87] S4Arrays_1.2.0              ComplexHeatmap_2.18.0      \n [89] gtable_0.3.4                digest_0.6.34              \n [91] SparseArray_1.2.3           ggrepel_0.9.5              \n [93] farver_2.1.1                rjson_0.2.21               \n [95] htmlwidgets_1.6.4           memoise_2.0.1              \n [97] htmltools_0.5.7             lifecycle_1.0.4            \n [99] httr_1.4.7                  GlobalOptions_0.1.2        \n[101] bit64_4.0.5                \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "RFG",
      "RFG2",
      "RFG2C"
    ]
  },
  {
    "objectID": "graphs/rnag10.html",
    "href": "graphs/rnag10.html",
    "title": "RNAG10",
    "section": "",
    "text": "Setup: Import & Data Manipulation\nSurvival Forest Graph\nTeal Module for Survival Forest Graph\nSession Info\n\n\n\nThis page can be used as a template of how to produce survival forest graphs for RNA-seq gene expression analysis using available tern and hermes functions, and to create an interactive survival forest graph for RNA-seq gene expression analysis using teal.modules.hermes.\nThe code below needs both RNA-seq data (in HermesData format) and time-to-event data (in ADTTE format) as input.\nWe first prepare the time-to-event data. We define an event indicator variable, transform the time to months and filter down to the overall survival subset.\n\nCodelibrary(tern)\n\nadtte_f &lt;- random.cdisc.data::cadtte %&gt;%\n  dplyr::mutate(\n    is_event = .data$CNSR == 0,\n    AVAL = day2month(.data$AVAL),\n    AVALU = \"Months\"\n  ) %&gt;%\n  dplyr::filter(.data$PARAMCD == \"OS\")\n\n\nThen we prepare the RNA-seq data and join with ADTTE, see RNAG9 for details.\n\nCodelibrary(hermes)\n\ngene_data &lt;- col_data_with_genes(\n  object = hermes_data,\n  assay_name = \"counts\",\n  genes = gene_spec(\"GeneID:1820\")\n)\njoined_data &lt;- inner_join_cdisc(\n  gene_data = gene_data,\n  cdisc_data = adtte_f\n)\n\n\nWe can then cut the resulting gene column in the joined adtte_data into quantile bins. In this example we want two equally sized groups so set probs to 0.5, and we then label the bins as Low and High. We could choose a different quantile cutoff. The only important restriction here is that we need to bin the genes into exactly two groups, otherwise the forest plot below cannot compare these two groups with each other.\n\nCodearm_name &lt;- attr(gene_data, \"gene_cols\")\nbinned_data &lt;- joined_data %&gt;%\n  dplyr::mutate(\n    gene_factor = cut_quantile_bins(\n      joined_data[[arm_name]],\n      probs = 0.5,\n      labels = c(\"Low\", \"High\")\n    )\n  ) %&gt;%\n  df_explicit_na(omit_columns = \"AVALU\")\n\n\n\n\nIt is now simple to create the survival forest graph by providing the data set created above with the variable specification. First we calculate the survival estimates with extract_survival_subgroups() by providing the necessary variable specification. Here we specify our derived gene_bin for the arm. Then we build the table portion with tabulate_survival_subgroups() and pass our calculations from the previous step. Lastly, we generate the final graph with g_forest.\n\nCodevariables &lt;- list(\n  tte = \"AVAL\",\n  is_event = \"is_event\",\n  arm = \"gene_factor\",\n  subgroups = c(\"BEP01FL\", \"SAFFL\")\n)\ntbl &lt;- extract_survival_subgroups(\n  variables = variables,\n  data = binned_data\n)\n\nWarning in coxph.fit(X, Y, istrat, offset, init, control, weights = weights, :\nLoglik converged before variable 1 ; coefficient may be infinite.\n\nCodelyt &lt;- basic_table()\nresult &lt;- tabulate_survival_subgroups(\n  lyt = lyt,\n  df = tbl,\n  vars = c(\"n_tot_events\", \"n\", \"n_events\", \"median\", \"hr\", \"ci\"),\n  time_unit = binned_data$AVALU[1]\n)\n\ng_forest(result)\n\n\n\n\n\n\n\nSee SFG01 to SFG05 for additional customization options for the survival forest graphs or the help page ?g_forest().\n\n\nWe start by importing a MultiAssayExperiment and sample ADTTE data; here we use the example multi_assay_experiment available in hermes and example ADTTE data from random.cdisc.data. We can then use the provided teal module tm_g_forest_tte to include the corresponding interactive survival forest analysis in our teal app. In case that we have different non-standard column names in our ADTTE data set we could also specify them via the adtte_vars argument, see the documentation ?tm_g_forest_tte for more details.\n\nCodelibrary(teal.modules.hermes)\n\ndata &lt;- teal_data()\ndata &lt;- within(data, {\n  library(random.cdisc.data)\n  library(dplyr)\n  library(hermes)\n  MAE &lt;- multi_assay_experiment\n  ADTTE &lt;- random.cdisc.data::cadtte %&gt;%\n    mutate(is_event = .data$CNSR == 0)\n})\ndatanames(data) &lt;- c(\"MAE\", \"ADTTE\")\njoin_keys(data)[\"ADTTE\", \"ADTTE\"] &lt;- c(\"STUDYID\", \"USUBJID\", \"PARAMCD\")\n\napp &lt;- init(\n  data = data,\n  modules = modules(\n    tm_g_forest_tte(\n      label = \"forest\",\n      adtte_name = \"ADTTE\",\n      mae_name = \"MAE\"\n    )\n  )\n)\nshinyApp(app$ui, app$server)\n\n[INFO] 2024-05-25 17:30:35.6647 pid:3355 token:[23a3d170] teal.slice Default Shiny inputs initialized: {}\n[INFO] 2024-05-25 17:30:35.6793 pid:3355 token:[23a3d170] teal.slice Default Shiny inputs initialized: {}\n[INFO] 2024-05-25 17:30:35.6825 pid:3355 token:[23a3d170] teal.slice Default Shiny inputs initialized: {}\n[INFO] 2024-05-25 17:30:35.7285 pid:3355 token:[23a3d170] teal.slice Default Shiny inputs initialized: {}\n[INFO] 2024-05-25 17:30:35.7345 pid:3355 token:[23a3d170] teal.slice Default Shiny inputs initialized: {}\n[INFO] 2024-05-25 17:30:35.7428 pid:3355 token:[23a3d170] teal.slice Default Shiny inputs initialized: {}\n[INFO] 2024-05-25 17:30:35.7533 pid:3355 token:[23a3d170] teal.slice Default Shiny inputs initialized: {}\n[INFO] 2024-05-25 17:30:35.7619 pid:3355 token:[23a3d170] teal.slice Default Shiny inputs initialized: {}\n[INFO] 2024-05-25 17:30:35.7709 pid:3355 token:[23a3d170] teal.slice Default Shiny inputs initialized: {}\n[INFO] 2024-05-25 17:30:36.1047 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on minimise_filter_overview: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.1075 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on minimise_filter_overview: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.1089 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on available_filters-show_dropmenu: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:30:36.1103 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on available_filters-show: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.1116 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on minimise_filter_active: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.1129 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on remove_all_filters: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.1142 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-remove_filters: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.1155 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-collapse: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.1169 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on ADTTE-remove_filters: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.1182 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on ADTTE-collapse: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.1204 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on available_filters-show_dropmenu: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:30:36.1217 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on available_filters-show: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.1233 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on minimise_filter_active: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.1247 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on remove_all_filters: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.1260 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-remove_filters: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.1273 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-collapse: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.1286 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on ADTTE-remove_filters: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.1299 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on ADTTE-collapse: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.1312 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on show_dropmenu: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:30:36.1325 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on show: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.1347 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on show_dropmenu: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:30:36.1360 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on show: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.1374 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd1-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.1387 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd1-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.1402 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd2-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.1415 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd2-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.1428 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd3-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.1441 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd3-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.1454 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on minimise_filter_add_vars: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.1476 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd1-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.1490 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd1-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.1503 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd2-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.1515 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd2-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.1530 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd3-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.1543 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd3-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.1556 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on minimise_filter_add_vars: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.1581 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.1594 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.1631 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.1645 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.5177 pid:3355 token:[23a3d170] teal.modules.hermes Default Shiny inputs initialized: {\"subgroups-sample_var\":{},\"simple_reporter-add_report_card_simple-add_report_card_button\":0,\"simple_reporter-download_button_simple-download_button\":0,\"simple_reporter-archive_load_simple-reporter_load\":0,\"simple_reporter-reset_button_simple-reset_reporter\":0,\"genes-select_none_button\":0,\"genes-select_all_button\":0,\"genes-text_button\":0,\"subgroups-levels_button\":0,\"plot-downbutton-downl\":0,\"plot-expand\":0,\"plot-expbut\":0,\"assay-name\":\"\",\"genes-genes\":{},\"genes-fun_name\":\"Mean\",\"adtte-paramcd\":\"\",\"probs\":0.5,\"plot-downbutton-file_format\":\"png\",\"genes-lock_button\":false,\"plot-downbutton-file_name\":\"plot_20240525_173035\"}\n[INFO] 2024-05-25 17:30:36.5230 pid:3355 token:[23a3d170] teal.modules.hermes Default Shiny inputs initialized: {}\n[INFO] 2024-05-25 17:30:36.5294 pid:3355 token:[23a3d170] teal.modules.hermes Default Shiny inputs initialized: {\"name\":\"\"}\n[INFO] 2024-05-25 17:30:36.5348 pid:3355 token:[23a3d170] teal.modules.hermes Default Shiny inputs initialized: {\"select_none_button\":0,\"select_all_button\":0,\"text_button\":0,\"genes\":{},\"fun_name\":\"Mean\",\"lock_button\":false}\n[INFO] 2024-05-25 17:30:36.5452 pid:3355 token:[23a3d170] teal.modules.hermes Default Shiny inputs initialized: {\"sample_var\":{},\"levels_button\":0}\n[INFO] 2024-05-25 17:30:36.5547 pid:3355 token:[23a3d170] teal.modules.hermes Default Shiny inputs initialized: {\"paramcd\":\"\"}\n[INFO] 2024-05-25 17:30:36.5996 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on paramcd:  -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6011 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on subgroups-sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6023 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-add_report_card_simple-add_report_card_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.6035 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-download_button_simple-download_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.6047 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-archive_load_simple-reporter_load: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.6059 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-reset_button_simple-reset_reporter: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.6071 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-select_none_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.6083 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-select_all_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.6095 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-text_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.6107 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on subgroups-levels_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.6119 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-downbutton-downl: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.6131 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-expand: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.6143 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-expbut: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.6154 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on assay-name: NULL -&gt; \n[INFO] 2024-05-25 17:30:36.6167 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6178 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-fun_name: NULL -&gt; Mean\n[INFO] 2024-05-25 17:30:36.6190 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on adtte-paramcd: NULL -&gt; \n[INFO] 2024-05-25 17:30:36.6202 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on probs: NULL -&gt; 0.5\n[INFO] 2024-05-25 17:30:36.6214 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-downbutton-file_format: NULL -&gt; png\n[INFO] 2024-05-25 17:30:36.6226 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-lock_button: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:30:36.6237 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-downbutton-file_name: NULL -&gt; plot_20240525_173035\n[INFO] 2024-05-25 17:30:36.6319 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on subgroups-sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6331 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-add_report_card_simple-add_report_card_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6343 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-download_button_simple-download_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6355 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-archive_load_simple-reporter_load: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6368 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-reset_button_simple-reset_reporter: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6381 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-select_none_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6393 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-select_all_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6406 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-text_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6418 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on subgroups-levels_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6430 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-downbutton-downl: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6442 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-expand: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6454 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-expbut: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6466 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on assay-name:  -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6478 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6491 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-fun_name: Mean -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6502 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on adtte-paramcd:  -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6515 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on probs: 0.5 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6527 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-downbutton-file_format: png -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6540 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-lock_button: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6552 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-downbutton-file_name: plot_20240525_173035 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6573 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on name: NULL -&gt; \n[INFO] 2024-05-25 17:30:36.6615 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on name:  -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6627 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on select_none_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.6640 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on select_all_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.6653 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on text_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.6665 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6677 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on fun_name: NULL -&gt; Mean\n[INFO] 2024-05-25 17:30:36.6689 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on lock_button: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:30:36.6761 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on select_none_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6774 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on select_all_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6785 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on text_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6799 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6811 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on fun_name: Mean -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6823 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on lock_button: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6834 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6847 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on levels_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.6910 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6923 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on levels_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.6935 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on paramcd: NULL -&gt; \n[INFO] 2024-05-25 17:30:36.7980 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on paramcd:  -&gt; NULL\n[INFO] 2024-05-25 17:30:36.7994 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on minimise_filter_overview: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.8014 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on minimise_filter_overview: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8026 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on available_filters-show_dropmenu: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:30:36.8039 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on available_filters-show: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.8051 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on minimise_filter_active: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.8064 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on remove_all_filters: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.8076 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-remove_filters: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.8089 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-collapse: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.8101 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on ADTTE-remove_filters: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.8112 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on ADTTE-collapse: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.8132 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on available_filters-show_dropmenu: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8144 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on available_filters-show: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8156 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on minimise_filter_active: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8169 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on remove_all_filters: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8181 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-remove_filters: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8193 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-collapse: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8206 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on ADTTE-remove_filters: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8218 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on ADTTE-collapse: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8231 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on show_dropmenu: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:30:36.8243 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on show: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.8262 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on show_dropmenu: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8274 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on show: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8287 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd1-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8298 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd1-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8310 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd2-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8322 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd2-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8334 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd3-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8346 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd3-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8357 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on minimise_filter_add_vars: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.8377 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd1-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8389 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd1-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8402 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd2-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8414 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd2-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8426 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd3-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8438 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd3-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8450 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on minimise_filter_add_vars: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8469 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8482 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8514 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8527 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8546 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on subgroups-sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8559 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-add_report_card_simple-add_report_card_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.8571 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-download_button_simple-download_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.8582 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-archive_load_simple-reporter_load: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.8594 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-reset_button_simple-reset_reporter: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.8606 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-select_none_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.8618 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-select_all_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.8630 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-text_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.8642 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on subgroups-levels_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.8653 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-downbutton-downl: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.8665 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-expand: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.8677 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-expbut: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.8689 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on assay-name: NULL -&gt; \n[INFO] 2024-05-25 17:30:36.8702 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8713 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-fun_name: NULL -&gt; Mean\n[INFO] 2024-05-25 17:30:36.8725 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on adtte-paramcd: NULL -&gt; \n[INFO] 2024-05-25 17:30:36.8737 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on probs: NULL -&gt; 0.5\n[INFO] 2024-05-25 17:30:36.8748 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-downbutton-file_format: NULL -&gt; png\n[INFO] 2024-05-25 17:30:36.8760 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-lock_button: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:30:36.8772 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-downbutton-file_name: NULL -&gt; plot_20240525_173035\n[INFO] 2024-05-25 17:30:36.8784 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-flex_width: NULL -&gt; 732\n[INFO] 2024-05-25 17:30:36.8796 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-plot_modal_width: NULL -&gt; 1252.8\n[INFO] 2024-05-25 17:30:36.8817 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on subgroups-sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8829 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-add_report_card_simple-add_report_card_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8841 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-download_button_simple-download_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8853 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-archive_load_simple-reporter_load: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8865 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-reset_button_simple-reset_reporter: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8877 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-select_none_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8889 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-select_all_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8901 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-text_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8912 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on subgroups-levels_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8925 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-downbutton-downl: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8936 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-expand: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8948 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-expbut: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8960 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on assay-name:  -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8972 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8983 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-fun_name: Mean -&gt; NULL\n[INFO] 2024-05-25 17:30:36.8995 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on adtte-paramcd:  -&gt; NULL\n[INFO] 2024-05-25 17:30:36.9007 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on probs: 0.5 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.9019 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-downbutton-file_format: png -&gt; NULL\n[INFO] 2024-05-25 17:30:36.9030 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-lock_button: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:30:36.9043 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-downbutton-file_name: plot_20240525_173035 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.9054 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-flex_width: 732 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.9066 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-plot_modal_width: 1252.8 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.9088 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on name: NULL -&gt; \n[INFO] 2024-05-25 17:30:36.9107 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on name:  -&gt; NULL\n[INFO] 2024-05-25 17:30:36.9119 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on select_none_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.9131 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on select_all_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.9143 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on text_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.9155 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.9167 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on fun_name: NULL -&gt; Mean\n[INFO] 2024-05-25 17:30:36.9179 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on lock_button: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:30:36.9198 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on select_none_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.9210 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on select_all_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.9222 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on text_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.9234 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.9246 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on fun_name: Mean -&gt; NULL\n[INFO] 2024-05-25 17:30:36.9258 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on lock_button: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:30:36.9270 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.9282 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on levels_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:36.9301 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:36.9313 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on levels_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:36.9325 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on paramcd: NULL -&gt; \n\n\nWarning: 'experiments' dropped; see 'drops()'\n\n\n[INFO] 2024-05-25 17:30:37.3364 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on paramcd:  -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3383 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on minimise_filter_overview: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:37.3411 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on minimise_filter_overview: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3424 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on available_filters-show_dropmenu: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:30:37.3436 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on available_filters-show: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:37.3448 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on minimise_filter_active: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:37.3460 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on remove_all_filters: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:37.3474 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-remove_filters: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:37.3486 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-collapse: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:37.3498 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on ADTTE-remove_filters: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:37.3509 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on ADTTE-collapse: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:37.3531 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on available_filters-show_dropmenu: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3543 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on available_filters-show: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3555 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on minimise_filter_active: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3567 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on remove_all_filters: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3579 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-remove_filters: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3591 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-collapse: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3603 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on ADTTE-remove_filters: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3616 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on ADTTE-collapse: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3628 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on show_dropmenu: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:30:37.3640 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on show: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:37.3660 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on show_dropmenu: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3672 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on show: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3685 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd1-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3696 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd1-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3709 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd2-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3721 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd2-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3733 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd3-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3745 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd3-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3756 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on minimise_filter_add_vars: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:37.3769 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on ADTTE-filter-var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3781 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-subjects-var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3802 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd1-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3815 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd1-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3828 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd2-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3840 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd2-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3852 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd3-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3864 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd3-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3877 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on minimise_filter_add_vars: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3892 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on ADTTE-filter-var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3906 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-subjects-var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3920 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3941 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3954 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3966 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.3999 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4011 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4023 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4044 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4057 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on subgroups-sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4069 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-add_report_card_simple-add_report_card_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:37.4081 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-download_button_simple-download_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:37.4093 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-archive_load_simple-reporter_load: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:37.4105 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-reset_button_simple-reset_reporter: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:37.4116 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-select_none_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:37.4129 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-select_all_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:37.4140 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-text_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:37.4152 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on subgroups-levels_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:37.4165 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-downbutton-downl: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:37.4177 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-expand: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:37.4189 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-expbut: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:37.4201 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on assay-name: NULL -&gt; \n[INFO] 2024-05-25 17:30:37.4213 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4225 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-fun_name: NULL -&gt; Mean\n[INFO] 2024-05-25 17:30:37.4236 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on adtte-paramcd: NULL -&gt; \n[INFO] 2024-05-25 17:30:37.4248 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on probs: NULL -&gt; 0.5\n[INFO] 2024-05-25 17:30:37.4260 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-downbutton-file_format: NULL -&gt; png\n[INFO] 2024-05-25 17:30:37.4272 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-lock_button: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:30:37.4284 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-downbutton-file_name: NULL -&gt; plot_20240525_173035\n[INFO] 2024-05-25 17:30:37.4295 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-flex_width: NULL -&gt; 732\n[INFO] 2024-05-25 17:30:37.4307 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-plot_modal_width: NULL -&gt; 1252.8\n[INFO] 2024-05-25 17:30:37.4319 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on experiment-name: NULL -&gt; hd1\n[INFO] 2024-05-25 17:30:37.4340 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on subgroups-sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4352 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-add_report_card_simple-add_report_card_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4365 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-download_button_simple-download_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4377 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-archive_load_simple-reporter_load: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4389 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-reset_button_simple-reset_reporter: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4401 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-select_none_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4412 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-select_all_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4424 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-text_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4436 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on subgroups-levels_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4448 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-downbutton-downl: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4459 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-expand: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4471 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-expbut: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4483 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on assay-name:  -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4495 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4506 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-fun_name: Mean -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4518 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on adtte-paramcd:  -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4530 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on probs: 0.5 -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4541 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-downbutton-file_format: png -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4553 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-lock_button: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4565 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-downbutton-file_name: plot_20240525_173035 -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4577 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-flex_width: 732 -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4589 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-plot_modal_width: 1252.8 -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4601 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on experiment-name: hd1 -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4612 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on name: NULL -&gt; hd1\n[INFO] 2024-05-25 17:30:37.4633 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on name: hd1 -&gt; \n[INFO] 2024-05-25 17:30:37.4652 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on name:  -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4664 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on select_none_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:37.4677 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on select_all_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:37.4689 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on text_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:37.4701 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4712 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on fun_name: NULL -&gt; Mean\n[INFO] 2024-05-25 17:30:37.4724 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on lock_button: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:30:37.4743 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on select_none_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4755 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on select_all_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4768 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on text_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4780 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4791 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on fun_name: Mean -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4803 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on lock_button: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4815 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4827 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on levels_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:37.4847 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4859 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on levels_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:37.4871 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on paramcd: NULL -&gt; \n[INFO] 2024-05-25 17:30:50.6778 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on paramcd:  -&gt; NULL\n[INFO] 2024-05-25 17:30:50.6800 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on minimise_filter_overview: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.6832 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on minimise_filter_overview: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.6845 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on available_filters-show_dropmenu: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:30:50.6857 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on available_filters-show: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.6869 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on minimise_filter_active: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.6882 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on remove_all_filters: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.6897 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-remove_filters: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.6909 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-collapse: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.6922 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on ADTTE-remove_filters: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.6934 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on ADTTE-collapse: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.6954 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on available_filters-show_dropmenu: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:30:50.6966 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on available_filters-show: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.6978 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on minimise_filter_active: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.6990 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on remove_all_filters: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7002 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-remove_filters: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7014 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-collapse: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7026 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on ADTTE-remove_filters: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7039 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on ADTTE-collapse: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7051 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on show_dropmenu: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:30:50.7065 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on show: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.7086 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on show_dropmenu: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7099 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on show: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7111 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd1-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7124 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd1-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7137 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd2-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7149 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd2-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7167 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd3-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7187 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd3-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7207 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on minimise_filter_add_vars: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.7226 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on ADTTE-filter-var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7243 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-subjects-var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7276 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd1-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7296 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd1-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7310 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd2-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7323 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd2-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7336 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd3-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7349 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd3-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7362 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on minimise_filter_add_vars: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7373 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on ADTTE-filter-var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7385 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-subjects-var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7406 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7442 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7461 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7479 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7530 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7548 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7566 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7595 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7613 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on subgroups-sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7631 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-add_report_card_simple-add_report_card_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.7649 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-download_button_simple-download_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.7667 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-archive_load_simple-reporter_load: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.7686 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-reset_button_simple-reset_reporter: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.7704 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-select_none_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.7722 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-select_all_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.7740 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-text_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.7758 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on subgroups-levels_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.7776 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-downbutton-downl: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.7794 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-expand: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.7812 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-expbut: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.7830 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on assay-name: NULL -&gt; \n[INFO] 2024-05-25 17:30:50.7848 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.7866 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-fun_name: NULL -&gt; Mean\n[INFO] 2024-05-25 17:30:50.7884 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on adtte-paramcd: NULL -&gt; \n[INFO] 2024-05-25 17:30:50.7902 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on probs: NULL -&gt; 0.5\n[INFO] 2024-05-25 17:30:50.7920 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-downbutton-file_format: NULL -&gt; png\n[INFO] 2024-05-25 17:30:50.7938 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-lock_button: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:30:50.7956 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-downbutton-file_name: NULL -&gt; plot_20240525_173035\n[INFO] 2024-05-25 17:30:50.7974 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-flex_width: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.7992 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-plot_modal_width: NULL -&gt; 0.87\n[INFO] 2024-05-25 17:30:50.8010 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on experiment-name: NULL -&gt; hd1\n[INFO] 2024-05-25 17:30:50.8041 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on subgroups-sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8059 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-add_report_card_simple-add_report_card_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8076 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-download_button_simple-download_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8094 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-archive_load_simple-reporter_load: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8112 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-reset_button_simple-reset_reporter: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8130 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-select_none_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8148 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-select_all_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8166 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-text_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8184 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on subgroups-levels_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8202 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-downbutton-downl: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8219 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-expand: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8237 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-expbut: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8255 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on assay-name:  -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8272 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8290 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-fun_name: Mean -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8308 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on adtte-paramcd:  -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8326 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on probs: 0.5 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8345 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-downbutton-file_format: png -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8363 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-lock_button: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8380 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-downbutton-file_name: plot_20240525_173035 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8398 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-flex_width: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8417 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-plot_modal_width: 0.87 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8436 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on experiment-name: hd1 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8454 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on name: NULL -&gt; hd1\n[INFO] 2024-05-25 17:30:50.8477 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on name: hd1 -&gt; \n[INFO] 2024-05-25 17:30:50.8499 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on name:  -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8511 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on select_none_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.8524 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on select_all_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.8536 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on text_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.8548 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8564 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on fun_name: NULL -&gt; Mean\n[INFO] 2024-05-25 17:30:50.8577 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on lock_button: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:30:50.8601 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on select_none_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8623 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on select_all_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8641 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on text_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8692 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8709 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on fun_name: Mean -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8727 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on lock_button: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8748 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8766 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on levels_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.8796 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8815 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on levels_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.8832 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on paramcd: NULL -&gt; \n[INFO] 2024-05-25 17:30:50.9044 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on paramcd:  -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9057 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on minimise_filter_overview: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.9076 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on minimise_filter_overview: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9089 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on available_filters-show_dropmenu: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:30:50.9101 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on available_filters-show: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.9113 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on minimise_filter_active: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.9125 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on remove_all_filters: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.9137 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-remove_filters: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.9149 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-collapse: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.9162 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on ADTTE-remove_filters: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.9174 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on ADTTE-collapse: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.9193 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on available_filters-show_dropmenu: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9206 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on available_filters-show: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9218 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on minimise_filter_active: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9230 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on remove_all_filters: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9242 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-remove_filters: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9254 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-collapse: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9266 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on ADTTE-remove_filters: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9278 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on ADTTE-collapse: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9290 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on show_dropmenu: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:30:50.9302 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on show: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.9322 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on show_dropmenu: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9334 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on show: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9346 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd1-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9358 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd1-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9370 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd2-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9382 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd2-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9394 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd3-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9406 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd3-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9418 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on minimise_filter_add_vars: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.9430 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on ADTTE-filter-var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9442 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-subjects-var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9462 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd1-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9474 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd1-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9486 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd2-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9498 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd2-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9511 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd3-row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9523 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-hd3-col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9535 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on minimise_filter_add_vars: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9548 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on ADTTE-filter-var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9560 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on MAE-subjects-var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9572 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9592 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9604 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9616 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9650 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on row_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9663 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on col_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9675 pid:3355 token:[23a3d170] teal.slice Shiny input change detected on var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9695 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on var_to_add: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9707 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on subgroups-sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9719 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-add_report_card_simple-add_report_card_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.9731 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-download_button_simple-download_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.9743 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-archive_load_simple-reporter_load: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.9755 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-reset_button_simple-reset_reporter: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.9767 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-select_none_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.9779 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-select_all_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.9791 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-text_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.9803 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on subgroups-levels_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.9815 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-downbutton-downl: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.9827 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-expand: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.9839 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-expbut: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:50.9851 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on assay-name: NULL -&gt; \n[INFO] 2024-05-25 17:30:50.9863 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:50.9875 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-fun_name: NULL -&gt; Mean\n[INFO] 2024-05-25 17:30:50.9887 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on adtte-paramcd: NULL -&gt; \n[INFO] 2024-05-25 17:30:50.9899 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on probs: NULL -&gt; 0.5\n[INFO] 2024-05-25 17:30:50.9911 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-downbutton-file_format: NULL -&gt; png\n[INFO] 2024-05-25 17:30:50.9923 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-lock_button: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:30:50.9935 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-downbutton-file_name: NULL -&gt; plot_20240525_173035\n[INFO] 2024-05-25 17:30:50.9947 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-flex_width: NULL -&gt; 740\n[INFO] 2024-05-25 17:30:50.9959 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-plot_modal_width: NULL -&gt; 1252.8\n[INFO] 2024-05-25 17:30:50.9971 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on experiment-name: NULL -&gt; hd1\n[INFO] 2024-05-25 17:30:50.9991 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on subgroups-sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0003 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-add_report_card_simple-add_report_card_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0015 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-download_button_simple-download_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0027 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-archive_load_simple-reporter_load: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0039 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on simple_reporter-reset_button_simple-reset_reporter: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0051 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-select_none_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0063 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-select_all_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0075 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-text_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0088 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on subgroups-levels_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0099 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-downbutton-downl: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0111 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-expand: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0124 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-expbut: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0135 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on assay-name:  -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0147 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0159 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-fun_name: Mean -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0171 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on adtte-paramcd:  -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0183 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on probs: 0.5 -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0195 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-downbutton-file_format: png -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0207 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes-lock_button: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0218 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-downbutton-file_name: plot_20240525_173035 -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0230 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-flex_width: 740 -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0242 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on plot-plot_modal_width: 1252.8 -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0254 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on experiment-name: hd1 -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0265 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on name: NULL -&gt; hd1\n[INFO] 2024-05-25 17:30:51.0285 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on name: hd1 -&gt; \n[INFO] 2024-05-25 17:30:51.0304 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on name:  -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0316 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on select_none_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:51.0328 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on select_all_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:51.0340 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on text_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:51.0352 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0364 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on fun_name: NULL -&gt; Mean\n[INFO] 2024-05-25 17:30:51.0376 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on lock_button: NULL -&gt; FALSE\n[INFO] 2024-05-25 17:30:51.0395 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on select_none_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0407 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on select_all_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0419 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on text_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0431 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on genes: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0443 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on fun_name: Mean -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0455 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on lock_button: FALSE -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0467 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0479 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on levels_button: NULL -&gt; 0\n[INFO] 2024-05-25 17:30:51.0498 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on sample_var: NULL -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0510 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on levels_button: 0 -&gt; NULL\n[INFO] 2024-05-25 17:30:51.0522 pid:3355 token:[23a3d170] teal.modules.hermes Shiny input change detected on paramcd: NULL -&gt; \n\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.4.0 (2024-04-24)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 22.04.4 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] dplyr_1.1.4                    random.cdisc.data_0.3.15.9004 \n [3] teal.modules.hermes_0.1.6.9015 teal_0.15.2.9038              \n [5] teal.slice_0.5.1.9003          teal.data_0.6.0.9005          \n [7] teal.code_0.5.0.9006           shiny_1.8.1.1                 \n [9] hermes_1.7.1.9002              SummarizedExperiment_1.34.0   \n[11] Biobase_2.64.0                 GenomicRanges_1.56.0          \n[13] GenomeInfoDb_1.40.0            IRanges_2.38.0                \n[15] S4Vectors_0.42.0               BiocGenerics_0.50.0           \n[17] MatrixGenerics_1.16.0          matrixStats_1.3.0             \n[19] ggfortify_0.4.17               ggplot2_3.5.1                 \n[21] tern_0.9.4.9008                rtables_0.6.7.9002            \n[23] magrittr_2.0.3                 formatters_0.5.6.9005         \n\nloaded via a namespace (and not attached):\n  [1] RColorBrewer_1.1-3          jsonlite_1.8.8             \n  [3] shape_1.4.6.1               MultiAssayExperiment_1.30.1\n  [5] farver_2.1.2                rmarkdown_2.27             \n  [7] GlobalOptions_0.1.2         zlibbioc_1.50.0            \n  [9] vctrs_0.6.5                 memoise_2.0.1              \n [11] webshot_0.5.5               BiocBaseUtils_1.7.0        \n [13] htmltools_0.5.8.1           S4Arrays_1.4.1             \n [15] forcats_1.0.0               progress_1.2.3             \n [17] curl_5.2.1                  broom_1.0.6                \n [19] SparseArray_1.4.5           sass_0.4.9                 \n [21] bslib_0.7.0                 fontawesome_0.5.2          \n [23] htmlwidgets_1.6.4           httr2_1.0.1                \n [25] cachem_1.1.0                teal.widgets_0.4.2.9012    \n [27] mime_0.12                   lifecycle_1.0.4            \n [29] iterators_1.0.14            pkgconfig_2.0.3            \n [31] webshot2_0.1.1              Matrix_1.7-0               \n [33] R6_2.5.1                    fastmap_1.2.0              \n [35] GenomeInfoDbData_1.2.12     rbibutils_2.2.16           \n [37] clue_0.3-65                 digest_0.6.35              \n [39] colorspace_2.1-0            shinycssloaders_1.0.0      \n [41] ps_1.7.6                    AnnotationDbi_1.66.0       \n [43] RSQLite_2.3.6               filelock_1.0.3             \n [45] labeling_0.4.3              fansi_1.0.6                \n [47] httr_1.4.7                  abind_1.4-5                \n [49] compiler_4.4.0              bit64_4.0.5                \n [51] withr_3.0.0                 doParallel_1.0.17          \n [53] backports_1.4.1             DBI_1.2.2                  \n [55] logger_0.3.0                biomaRt_2.60.0             \n [57] rappdirs_0.3.3              DelayedArray_0.30.1        \n [59] rjson_0.2.21                chromote_0.2.0             \n [61] tools_4.4.0                 httpuv_1.6.15              \n [63] glue_1.7.0                  callr_3.7.6                \n [65] promises_1.3.0              grid_4.4.0                 \n [67] checkmate_2.3.1             cluster_2.1.6              \n [69] generics_0.1.3              gtable_0.3.5               \n [71] websocket_1.4.1             tidyr_1.3.1                \n [73] hms_1.1.3                   xml2_1.3.6                 \n [75] utf8_1.2.4                  XVector_0.44.0             \n [77] ggrepel_0.9.5               foreach_1.5.2              \n [79] pillar_1.9.0                stringr_1.5.1              \n [81] later_1.3.2                 circlize_0.4.16            \n [83] splines_4.4.0               BiocFileCache_2.12.0       \n [85] lattice_0.22-6              survival_3.6-4             \n [87] bit_4.0.5                   tidyselect_1.2.1           \n [89] ComplexHeatmap_2.20.0       Biostrings_2.72.0          \n [91] knitr_1.46                  gridExtra_2.3              \n [93] teal.logger_0.2.0.9003      xfun_0.44                  \n [95] stringi_1.8.4               UCSC.utils_1.0.0           \n [97] yaml_2.3.8                  shinyWidgets_0.8.6         \n [99] evaluate_0.23               codetools_0.2-20           \n[101] tibble_3.2.1                cli_3.6.2                  \n[103] xtable_1.8-4                Rdpack_2.6                 \n[105] jquerylib_0.1.4             processx_3.8.4             \n[107] munsell_0.5.1               teal.reporter_0.3.1.9007   \n[109] Rcpp_1.0.12                 dbplyr_2.5.0               \n[111] png_0.1-8                   parallel_4.4.0             \n[113] assertthat_0.2.1            blob_1.2.4                 \n[115] prettyunits_1.2.0           scales_1.3.0               \n[117] purrr_1.0.2                 crayon_1.5.2               \n[119] GetoptLong_1.0.5            rlang_1.1.3                \n[121] formatR_1.14                cowplot_1.1.3              \n[123] KEGGREST_1.44.0             shinyjs_2.1.0              \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "RNAG",
      "RNAG10"
    ]
  },
  {
    "objectID": "graphs/KG4/kg04b.html",
    "href": "graphs/KG4/kg04b.html",
    "title": "KG4B",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nA setup similar to KG1 is used, with some additional data manipulation steps to first binarize the continuous biomarker and the treatment arm variables, and then combine both into a new interaction variable ARM_BMRKR2. Since we are using biomarker information, we filter on the biomarker evaluable population using the flag variable BEP01FL.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte &lt;- random.cdisc.data::cadtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"OS\" & BEP01FL == \"Y\") %&gt;%\n  mutate(\n    is_event = CNSR == 0,\n    BMRKR2_BIN = fct_collapse_only(\n      BMRKR2,\n      High = c(\"HIGH\"),\n      Low = c(\"MEDIUM\", \"LOW\")\n    ),\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = c(\"B: Placebo\"),\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    ),\n    ARM_BMRKR2 = interaction(ARM_BIN, BMRKR2_BIN)\n  )\n\nvariables &lt;- list(tte = \"AVAL\", is_event = \"is_event\", arm = \"ARM_BMRKR2\")\n\n\n\n\nFor reordering or renaming we can just modify the levels of the corresponding factors of the treatment arm and biomarker variables, and pass the result to g_km() as before.\n\nCodeadtte_mod &lt;- adtte %&gt;%\n  mutate(\n    ARM_BMRKR2 = fct_collapse_only(\n      ARM_BMRKR2,\n      TRT.Low = \"TRT.Low\",\n      TRT.High = \"TRT.High\",\n      CTRL.Low = \"CTRL.Low\",\n      CTRL.High = \"CTRL.High\"\n    )\n  )\n\ng_km(\n  df = adtte_mod,\n  variables = variables,\n  annot_surv_med = FALSE,\n  col = c(\"red\", \"blue\", \"red\", \"blue\"),\n  lty = c(1, 1, 2, 2)\n)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.4.0 (2024-04-24)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 22.04.4 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.4.9008       rtables_0.6.7.9002   \n[4] magrittr_2.0.3        formatters_0.5.6.9005\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.7-0                  gtable_0.3.5                 \n [3] jsonlite_1.8.8                compiler_4.4.0               \n [5] tidyselect_1.2.1              stringr_1.5.1                \n [7] tidyr_1.3.1                   splines_4.4.0                \n [9] scales_1.3.0                  yaml_2.3.8                   \n[11] fastmap_1.2.0                 lattice_0.22-6               \n[13] ggplot2_3.5.1                 R6_2.5.1                     \n[15] labeling_0.4.3                generics_0.1.3               \n[17] knitr_1.46                    forcats_1.0.0                \n[19] rbibutils_2.2.16              htmlwidgets_1.6.4            \n[21] backports_1.4.1               checkmate_2.3.1              \n[23] tibble_3.2.1                  munsell_0.5.1                \n[25] pillar_1.9.0                  rlang_1.1.3                  \n[27] utf8_1.2.4                    stringi_1.8.4                \n[29] broom_1.0.6                   xfun_0.44                    \n[31] cli_3.6.2                     withr_3.0.0                  \n[33] Rdpack_2.6                    digest_0.6.35                \n[35] grid_4.4.0                    cowplot_1.1.3                \n[37] lifecycle_1.0.4               vctrs_0.6.5                  \n[39] evaluate_0.23                 glue_1.7.0                   \n[41] farver_2.1.2                  codetools_0.2-20             \n[43] survival_3.6-4                random.cdisc.data_0.3.15.9004\n[45] fansi_1.0.6                   colorspace_2.1-0             \n[47] rmarkdown_2.27                purrr_1.0.2                  \n[49] tools_4.4.0                   pkgconfig_2.0.3              \n[51] htmltools_0.5.8.1            \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "KG",
      "KG4",
      "KG4B"
    ]
  },
  {
    "objectID": "graphs/KG4/kg04a.html",
    "href": "graphs/KG4/kg04a.html",
    "title": "KG4A",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nA setup similar to KG1 is used, with some additional data manipulation steps to first binarize the continuous biomarker and the treatment arm variables, and then combine both into a new interaction variable ARM_BMRKR2. Since we are using biomarker information, we filter on the biomarker evaluable population using the flag variable BEP01FL.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte &lt;- random.cdisc.data::cadtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"OS\" & BEP01FL == \"Y\") %&gt;%\n  mutate(\n    is_event = CNSR == 0,\n    BMRKR2_BIN = fct_collapse_only(\n      BMRKR2,\n      High = c(\"HIGH\"),\n      Low = c(\"MEDIUM\", \"LOW\")\n    ),\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = c(\"B: Placebo\"),\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    ),\n    ARM_BMRKR2 = interaction(ARM_BIN, BMRKR2_BIN)\n  )\n\nvariables &lt;- list(tte = \"AVAL\", is_event = \"is_event\", arm = \"ARM_BMRKR2\")\n\n\n\n\nWe can customize the color and line type used in the graph with the col and lty arguments of g_km(). We can first check the level order of the ARM_BMRKR2 factor variable to know which color and line type order we need.\n\nCodelevels(adtte$ARM_BMRKR2)\n\n[1] \"CTRL.High\" \"TRT.High\"  \"CTRL.Low\"  \"TRT.Low\"  \n\nCodeg_km(\n  df = adtte,\n  variables = variables,\n  annot_surv_med = TRUE,\n  col = c(\"green\", \"orange\", \"green\", \"orange\"),\n  lty = c(5, 5, 3, 3)\n)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.4.0 (2024-04-24)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 22.04.4 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.4.9008       rtables_0.6.7.9002   \n[4] magrittr_2.0.3        formatters_0.5.6.9005\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.7-0                  gtable_0.3.5                 \n [3] jsonlite_1.8.8                compiler_4.4.0               \n [5] tidyselect_1.2.1              stringr_1.5.1                \n [7] tidyr_1.3.1                   splines_4.4.0                \n [9] scales_1.3.0                  yaml_2.3.8                   \n[11] fastmap_1.2.0                 lattice_0.22-6               \n[13] ggplot2_3.5.1                 R6_2.5.1                     \n[15] labeling_0.4.3                generics_0.1.3               \n[17] knitr_1.46                    forcats_1.0.0                \n[19] rbibutils_2.2.16              htmlwidgets_1.6.4            \n[21] backports_1.4.1               checkmate_2.3.1              \n[23] tibble_3.2.1                  munsell_0.5.1                \n[25] pillar_1.9.0                  rlang_1.1.3                  \n[27] utf8_1.2.4                    stringi_1.8.4                \n[29] broom_1.0.6                   xfun_0.44                    \n[31] cli_3.6.2                     withr_3.0.0                  \n[33] Rdpack_2.6                    digest_0.6.35                \n[35] grid_4.4.0                    cowplot_1.1.3                \n[37] lifecycle_1.0.4               vctrs_0.6.5                  \n[39] evaluate_0.23                 glue_1.7.0                   \n[41] farver_2.1.2                  codetools_0.2-20             \n[43] survival_3.6-4                random.cdisc.data_0.3.15.9004\n[45] fansi_1.0.6                   colorspace_2.1-0             \n[47] rmarkdown_2.27                purrr_1.0.2                  \n[49] tools_4.4.0                   pkgconfig_2.0.3              \n[51] htmltools_0.5.8.1            \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "KG",
      "KG4",
      "KG4A"
    ]
  },
  {
    "objectID": "graphs/index.html",
    "href": "graphs/index.html",
    "title": "Graphs",
    "section": "",
    "text": "This is a collection of Biomarker Analysis graph templates.\n\n\n\n\n\n\n\n\nAG1\n\n\n\nAG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDG1\n\n\n\nDG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDG1A\n\n\n\nDG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDG1B\n\n\n\nDG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDG2\n\n\n\nDG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDG3\n\n\n\nDG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDG3A\n\n\n\nDG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDG4\n\n\n\nDG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKG1\n\n\n\nKG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKG1A\n\n\n\nKG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKG1B\n\n\n\nKG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKG2\n\n\n\nKG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKG2A\n\n\n\nKG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKG3\n\n\n\nKG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKG4\n\n\n\nKG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKG4A\n\n\n\nKG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKG4B\n\n\n\nKG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKG5\n\n\n\nKG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKG5A\n\n\n\nKG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKG5B\n\n\n\nKG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRFG1\n\n\n\nRFG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRFG1A\n\n\n\nRFG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRFG2A\n\n\n\nRFG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRFG2B\n\n\n\nRFG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRFG2C\n\n\n\nRFG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRFG3\n\n\n\nRFG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRG1\n\n\n\nRG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRG1A\n\n\n\nRG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRG1B\n\n\n\nRG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRG1C\n\n\n\nRG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRG2\n\n\n\nRG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRG2A\n\n\n\nRG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRG3\n\n\n\nRG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRG3A\n\n\n\nRG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRG3B\n\n\n\nRG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRNAG1\n\n\n\nRNAG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRNAG10\n\n\n\nRNAG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRNAG2\n\n\n\nRNAG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRNAG3\n\n\n\nRNAG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRNAG4\n\n\n\nRNAG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRNAG5\n\n\n\nRNAG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRNAG6\n\n\n\nRNAG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRNAG7\n\n\n\nRNAG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRNAG8\n\n\n\nRNAG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRNAG9\n\n\n\nRNAG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSFG1\n\n\n\nSFG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSFG1A\n\n\n\nSFG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSFG1B\n\n\n\nSFG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSFG2\n\n\n\nSFG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSFG2A\n\n\n\nSFG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSFG2B\n\n\n\nSFG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSFG2C\n\n\n\nSFG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSFG2D\n\n\n\nSFG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSFG3\n\n\n\nSFG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSFG3A\n\n\n\nSFG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSFG4\n\n\n\nSFG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSFG5\n\n\n\nSFG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSFG5A\n\n\n\nSFG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSFG5B\n\n\n\nSFG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSFG5C\n\n\n\nSFG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSFG6A\n\n\n\nSFG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSFG6B\n\n\n\nSFG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSFG6C\n\n\n\nSFG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSPG1\n\n\n\nSPG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSPG2\n\n\n\nSPG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items\n\n\n  \n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs"
    ]
  },
  {
    "objectID": "graphs/RG2/rg02a.html",
    "href": "graphs/RG2/rg02a.html",
    "title": "RG2A",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nThe same setup as in RG1 is used.\nFor ggplot() used in all analyses, we add by = BMEASIFL in the aesthetics to support the calculation of proportions using geom_text(stat = \"prop\").\n\nCodelibrary(tern)\nlibrary(ggplot2.utils)\nlibrary(dplyr)\n\nadrs &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adrs %&gt;%\n  df_explicit_na() %&gt;%\n  mutate(AVALC = ordered(AVALC, levels = c(\"&lt;Missing&gt;\", \"NE\", \"PD\", \"SD\", \"PR\", \"CR\"))) %&gt;%\n  filter(PARAMCD == \"BESRSPI\", BMEASIFL == \"Y\")\n\n\n\n\nWe can use the fct_collapse_only() function from tern to binarize the response variable.\n\nCodeadrs &lt;- adrs %&gt;%\n  mutate(\n    AVALC_BIN = fct_collapse_only(\n      AVALC,\n      Yes = c(\"CR\", \"PR\"),\n      No = c(\"PD\", \"SD\", \"NE\", \"&lt;Missing&gt;\")\n    )\n  )\n\n\nWe can then produce the response plot with the newly binarized response variable.\n\nCodegraph &lt;- ggplot(adrs, aes(BMEASIFL, fill = AVALC_BIN, by = BMEASIFL)) +\n  geom_bar(aes(BMEASIFL), position = \"fill\") +\n  geom_text(stat = \"prop\", position = position_fill(.5)) +\n  scale_y_continuous(labels = scales::percent) +\n  ylab(\"%\") +\n  facet_grid(. ~ ARM, margins = TRUE)\n\ngraph\n\n\n\n\n\n\n\nNote that colors and horizontal plotting is possible as described in RG1B and RG1C.\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           ggplot2.utils_0.3.1   ggplot2_3.4.4        \n[4] tern_0.9.3.9016       rtables_0.6.6.9010    magrittr_2.0.3       \n[7] formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.4        generics_0.1.3    tidyr_1.3.1       scda_0.1.6.9016  \n [5] EnvStats_2.8.1    lattice_0.22-5    digest_0.6.34     evaluate_0.23    \n [9] grid_4.3.2        fastmap_1.1.1     jsonlite_1.8.8    Matrix_1.6-5     \n[13] backports_1.4.1   survival_3.5-7    purrr_1.0.2       fansi_1.0.6      \n[17] viridisLite_0.4.2 scales_1.3.0      codetools_0.2-19  Rdpack_2.6       \n[21] cli_3.6.2         ggpp_0.5.6        rlang_1.1.3       rbibutils_2.2.16 \n[25] munsell_0.5.0     splines_4.3.2     withr_3.0.0       yaml_2.3.8       \n[29] tools_4.3.2       polynom_1.4-1     checkmate_2.3.1   colorspace_2.1-0 \n[33] forcats_1.0.0     ggstats_0.5.1     broom_1.0.5       vctrs_0.6.5      \n[37] R6_2.5.1          lifecycle_1.0.4   htmlwidgets_1.6.4 MASS_7.3-60.0.1  \n[41] pkgconfig_2.0.3   pillar_1.9.0      gtable_0.3.4      glue_1.7.0       \n[45] xfun_0.41         tibble_3.2.1      tidyselect_1.2.0  knitr_1.45       \n[49] farver_2.1.1      htmltools_0.5.7   labeling_0.4.3    rmarkdown_2.25   \n[53] compiler_4.3.2   \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "RG",
      "RG2",
      "RG2A"
    ]
  },
  {
    "objectID": "graphs/rnag04.html",
    "href": "graphs/rnag04.html",
    "title": "RNAG4",
    "section": "",
    "text": "Setup: Import, Filter and Normalize\nCalculate Correlation\nPlot Correlation\nTeal Module for Sample Correlation Graph\nSession Info\n\n\n\nThis page can be used as a template of how to use the available hermes functions to calculate the correlation between samples in HermesData, visualize them in a heatmap, and create an interactive sample correlation graph using teal.modules.hermes.\nThe function used to calculate correlation uses HermesData as input. See RNAG1 for details.\n\nCodelibrary(hermes)\n\nobject &lt;- hermes_data %&gt;%\n  add_quality_flags() %&gt;%\n  filter() %&gt;%\n  normalize()\n\n\n\n\nWe can calculate correlation matrix between samples in HermesData using correlate() function. By default, correlate() function uses the counts assay to calculate the Pearson correlation coefficients, unless specified otherwise in the arguments.\n\nCoderesult &lt;- correlate(object)\n\nresult &lt;- correlate(object, assay_name = \"tpm\", method = \"spearman\")\n\n\n\n\nWe can then plot a heatmap for correlation between samples in HermesData using the autoplot() function. See ?calc_cor for details.\n\nCodeautoplot(result)\n\n\n\n\n\n\n\nIf there are still (because we already filtered some samples above) samples that have low correlation with others, we might want to flag them manually as technical failures and filter again. Here just as an example:\n\nCodeobject &lt;- object %&gt;%\n  set_tech_failure(\"06520011B0023R\") %&gt;%\n  filter()\n\n\n\n\nWe start by importing a MultiAssayExperiment; here we use the example multi_assay_experiment available in hermes. It is wrapped as a teal::dataset. We can select the sample correlation tab above the plot area. We can then use the provided teal module tm_g_pca to include a PCA module in our teal app.\n\nCodelibrary(teal.modules.hermes)\n\ndata &lt;- teal_data()\ndata &lt;- within(data, {\n  library(hermes)\n  MAE &lt;- multi_assay_experiment\n})\ndatanames(data) &lt;- \"MAE\"\n\napp &lt;- init(\n  data = data,\n  modules = modules(\n    tm_g_pca(\n      label = \"pca\",\n      mae_name = \"MAE\"\n    )\n  )\n)\n\n[INFO] 2024-02-23 15:37:28.1596 pid:3282 token:[] teal.modules.hermes Initializing tm_g_pca\n\nCodeshinyApp(app$ui, app$server)\n\n[INFO] 2024-02-23 15:37:29.7264 pid:3282 token:[0a0f6827] teal Initializing reporter_previewer_module\n\n\nWarning: 'experiments' dropped; see 'drops()'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] teal.modules.hermes_0.1.6.9003 teal_0.15.1.9000              \n [3] teal.slice_0.5.0.9003          teal.data_0.5.0.9000          \n [5] teal.code_0.5.0.9003           shiny_1.8.0                   \n [7] hermes_1.7.1.9000              SummarizedExperiment_1.32.0   \n [9] Biobase_2.62.0                 GenomicRanges_1.54.1          \n[11] GenomeInfoDb_1.38.5            IRanges_2.36.0                \n[13] S4Vectors_0.40.2               BiocGenerics_0.48.1           \n[15] MatrixGenerics_1.14.0          matrixStats_1.2.0             \n[17] ggfortify_0.4.16               ggplot2_3.4.4                 \n\nloaded via a namespace (and not attached):\n  [1] RColorBrewer_1.1-3          jsonlite_1.8.8             \n  [3] shape_1.4.6                 MultiAssayExperiment_1.28.0\n  [5] magrittr_2.0.3              magick_2.8.2               \n  [7] farver_2.1.1                rmarkdown_2.25             \n  [9] ragg_1.2.7                  GlobalOptions_0.1.2        \n [11] zlibbioc_1.48.0             vctrs_0.6.5                \n [13] memoise_2.0.1               RCurl_1.98-1.14            \n [15] webshot_0.5.5               BiocBaseUtils_1.5.0        \n [17] htmltools_0.5.7             S4Arrays_1.2.0             \n [19] forcats_1.0.0               progress_1.2.3             \n [21] curl_5.2.0                  SparseArray_1.2.3          \n [23] sass_0.4.8                  bslib_0.6.1                \n [25] fontawesome_0.5.2           htmlwidgets_1.6.4          \n [27] testthat_3.2.1              cachem_1.0.8               \n [29] teal.widgets_0.4.2.9005     mime_0.12                  \n [31] lifecycle_1.0.4             iterators_1.0.14           \n [33] pkgconfig_2.0.3             webshot2_0.1.1             \n [35] Matrix_1.6-5                R6_2.5.1                   \n [37] fastmap_1.1.1               GenomeInfoDbData_1.2.11    \n [39] rbibutils_2.2.16            clue_0.3-65                \n [41] digest_0.6.34               colorspace_2.1-0           \n [43] shinycssloaders_1.0.0       ps_1.7.6                   \n [45] AnnotationDbi_1.64.1        DESeq2_1.42.0              \n [47] textshaping_0.3.7           crosstalk_1.2.1            \n [49] RSQLite_2.3.5               labeling_0.4.3             \n [51] filelock_1.0.3              fansi_1.0.6                \n [53] httr_1.4.7                  abind_1.4-5                \n [55] compiler_4.3.2              bit64_4.0.5                \n [57] withr_3.0.0                 doParallel_1.0.17          \n [59] backports_1.4.1             BiocParallel_1.36.0        \n [61] DBI_1.2.1                   logger_0.2.2               \n [63] biomaRt_2.58.0              rappdirs_0.3.3             \n [65] DelayedArray_0.28.0         rjson_0.2.21               \n [67] chromote_0.1.2              tools_4.3.2                \n [69] httpuv_1.6.13               glue_1.7.0                 \n [71] callr_3.7.3                 promises_1.2.1             \n [73] grid_4.3.2                  checkmate_2.3.1            \n [75] cluster_2.1.6               generics_0.1.3             \n [77] gtable_0.3.4                websocket_1.4.1            \n [79] tidyr_1.3.1                 hms_1.1.3                  \n [81] xml2_1.3.6                  utf8_1.2.4                 \n [83] XVector_0.42.0              ggrepel_0.9.5              \n [85] foreach_1.5.2               pillar_1.9.0               \n [87] stringr_1.5.1               limma_3.58.1               \n [89] later_1.3.2                 circlize_0.4.15            \n [91] dplyr_1.1.4                 BiocFileCache_2.10.1       \n [93] lattice_0.22-5              bit_4.0.5                  \n [95] tidyselect_1.2.0            ComplexHeatmap_2.18.0      \n [97] locfit_1.5-9.8              Biostrings_2.70.1          \n [99] knitr_1.45                  gridExtra_2.3              \n[101] teal.logger_0.1.3.9011      edgeR_4.0.12               \n[103] xfun_0.41                   statmod_1.5.0              \n[105] brio_1.1.4                  DT_0.31                    \n[107] stringi_1.8.3               yaml_2.3.8                 \n[109] shinyWidgets_0.8.1          evaluate_0.23              \n[111] codetools_0.2-19            tibble_3.2.1               \n[113] cli_3.6.2                   systemfonts_1.0.5          \n[115] xtable_1.8-4                Rdpack_2.6                 \n[117] processx_3.8.3              jquerylib_0.1.4            \n[119] munsell_0.5.0               teal.reporter_0.3.0.9003   \n[121] Rcpp_1.0.12                 dbplyr_2.4.0               \n[123] png_0.1-8                   XML_3.99-0.16.1            \n[125] parallel_4.3.2              ellipsis_0.3.2             \n[127] assertthat_0.2.1            blob_1.2.4                 \n[129] prettyunits_1.2.0           bitops_1.0-7               \n[131] scales_1.3.0                purrr_1.0.2                \n[133] crayon_1.5.2                GetoptLong_1.0.5           \n[135] rlang_1.1.3                 formatR_1.14               \n[137] KEGGREST_1.42.0             shinyjs_2.1.0              \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "RNAG",
      "RNAG4"
    ]
  },
  {
    "objectID": "graphs/SFG2/sfg02c.html",
    "href": "graphs/SFG2/sfg02c.html",
    "title": "SFG2C",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nWe prepare the data similarly as in SFG1. In particular we use again the cut_quantile_bins() function, here to obtain quartile bins of the continuous biomarker BMRKR1.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nBMRKR1_probs &lt;- c(0.25, 0.5, 0.75)\n\nadtte &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(\n    PARAMCD == \"OS\"\n  ) %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0,\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = c(\"B: Placebo\"),\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    ),\n    BMRKR1 = ifelse(BEP01FL == \"N\", NA, BMRKR1),\n    BMRKR1_BIN = explicit_na(cut_quantile_bins(BMRKR1, BMRKR1_probs)),\n    BMRKR2 = fct_explicit_na_if(BMRKR2, BEP01FL == \"N\")\n  ) %&gt;%\n  var_relabel(\n    BEP01FL = \"BEP\",\n    BMRKR2 = \"Biomarker (Categorical)\",\n    BMRKR1_BIN = \"Biomarker (Binned)\"\n  )\n\n\n\n\nHere we use the biomarker variable BMRKR1_BIN with its original percentage bins to tabulate the statistics to be able to use as an input for the forest plot.\n\nCodetbl &lt;- extract_survival_subgroups(\n  variables = list(\n    tte = \"AVAL\",\n    is_event = \"is_event\",\n    arm = \"ARM_BIN\",\n    subgroups = c(\"BEP01FL\", \"BMRKR1_BIN\")\n  ),\n  label_all = \"ITT\",\n  data = adtte\n)\n\nresult &lt;- basic_table() %&gt;%\n  tabulate_survival_subgroups(\n    df = tbl,\n    vars = c(\"n_tot_events\", \"n\", \"n_events\", \"median\", \"hr\", \"ci\"),\n    time_unit = adtte$AVALU[1]\n  )\n\n\nWe remove the last line with the &lt;Missing&gt; level.\n\nCoderesult &lt;- result[-10, , keep_topleft = TRUE]\n\n\nWe can now produce the forest plot using the g_forest() function.\n\nCodeg_forest(result)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.3.9016       rtables_0.6.6.9010   \n[4] magrittr_2.0.3        formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.6-5      gtable_0.3.4      jsonlite_1.8.8    compiler_4.3.2   \n [5] tidyselect_1.2.0  tidyr_1.3.1       splines_4.3.2     scales_1.3.0     \n [9] yaml_2.3.8        fastmap_1.1.1     lattice_0.22-5    ggplot2_3.4.4    \n[13] R6_2.5.1          labeling_0.4.3    generics_0.1.3    knitr_1.45       \n[17] forcats_1.0.0     rbibutils_2.2.16  htmlwidgets_1.6.4 backports_1.4.1  \n[21] checkmate_2.3.1   tibble_3.2.1      munsell_0.5.0     scda_0.1.6.9016  \n[25] pillar_1.9.0      rlang_1.1.3       utf8_1.2.4        stringi_1.8.3    \n[29] broom_1.0.5       xfun_0.41         cli_3.6.2         withr_3.0.0      \n[33] Rdpack_2.6        digest_0.6.34     grid_4.3.2        cowplot_1.1.3    \n[37] lifecycle_1.0.4   vctrs_0.6.5       evaluate_0.23     glue_1.7.0       \n[41] farver_2.1.1      codetools_0.2-19  survival_3.5-7    fansi_1.0.6      \n[45] colorspace_2.1-0  rmarkdown_2.25    purrr_1.0.2       tools_4.3.2      \n[49] pkgconfig_2.0.3   htmltools_0.5.7  \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "SFG",
      "SFG2",
      "SFG2C"
    ]
  },
  {
    "objectID": "graphs/SFG2/sfg02d.html",
    "href": "graphs/SFG2/sfg02d.html",
    "title": "SFG2D",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nWe prepare the data similarly as in SFG1. In particular we use again the cut_quantile_bins() function, here to obtain quartile bins of the continuous biomarker BMRKR1.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nBMRKR1_probs &lt;- c(0.25, 0.5, 0.75)\n\nadtte &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(\n    PARAMCD == \"OS\"\n  ) %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0,\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = c(\"B: Placebo\"),\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    ),\n    BMRKR1 = ifelse(BEP01FL == \"N\", NA, BMRKR1),\n    BMRKR1_BIN = explicit_na(cut_quantile_bins(BMRKR1, BMRKR1_probs)),\n    BMRKR2 = fct_explicit_na_if(BMRKR2, BEP01FL == \"N\")\n  ) %&gt;%\n  var_relabel(\n    BEP01FL = \"BEP\",\n    BMRKR2 = \"Biomarker (Categorical)\",\n    BMRKR1_BIN = \"Biomarker (Binned)\"\n  )\n\n\n\n\nWe start by deriving a new biomarker variable BMRKR1_BIN2 with greater than numerical cutoffs for BMRKR1 using the cut() funciton, and then tabulate the statistics as above to be able to use them as an input for the forest plot.\n\nCodeBMRKR1_cuts &lt;- c(0, 5, 10, Inf)\n\nadtte &lt;- adtte %&gt;%\n  mutate(\n    BMRKR1_BIN2 = explicit_na(cut(\n      BMRKR1,\n      BMRKR1_cuts,\n      include.lowest = FALSE,\n      right = FALSE\n    ))\n  )\n\ntbl &lt;- extract_survival_subgroups(\n  variables = list(\n    tte = \"AVAL\",\n    is_event = \"is_event\",\n    arm = \"ARM_BIN\",\n    subgroups = c(\"BEP01FL\", \"BMRKR1_BIN2\")\n  ),\n  label_all = \"ITT\",\n  groups_lists = list(\n    BMRKR1_BIN2 = list(\n      \"&gt; 5\" = c(\"[5,10)\", \"[10,Inf)\"),\n      \"&gt; 10\" = \"[10,Inf)\"\n    )\n  ),\n  data = adtte\n)\n\nresult &lt;- basic_table() %&gt;%\n  tabulate_survival_subgroups(\n    df = tbl,\n    vars = c(\"n_tot_events\", \"n\", \"n_events\", \"median\", \"hr\", \"ci\"),\n    time_unit = adtte$AVALU[1]\n  )\n\n\nWe can now produce forest plot using g_forest() function from tern based on this result table.\n\nCodeg_forest(result)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.3.9016       rtables_0.6.6.9010   \n[4] magrittr_2.0.3        formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.6-5      gtable_0.3.4      jsonlite_1.8.8    compiler_4.3.2   \n [5] tidyselect_1.2.0  tidyr_1.3.1       splines_4.3.2     scales_1.3.0     \n [9] yaml_2.3.8        fastmap_1.1.1     lattice_0.22-5    ggplot2_3.4.4    \n[13] R6_2.5.1          labeling_0.4.3    generics_0.1.3    knitr_1.45       \n[17] forcats_1.0.0     rbibutils_2.2.16  htmlwidgets_1.6.4 backports_1.4.1  \n[21] checkmate_2.3.1   tibble_3.2.1      munsell_0.5.0     scda_0.1.6.9016  \n[25] pillar_1.9.0      rlang_1.1.3       utf8_1.2.4        stringi_1.8.3    \n[29] broom_1.0.5       xfun_0.41         cli_3.6.2         withr_3.0.0      \n[33] Rdpack_2.6        digest_0.6.34     grid_4.3.2        cowplot_1.1.3    \n[37] lifecycle_1.0.4   vctrs_0.6.5       evaluate_0.23     glue_1.7.0       \n[41] farver_2.1.1      codetools_0.2-19  survival_3.5-7    fansi_1.0.6      \n[45] colorspace_2.1-0  rmarkdown_2.25    purrr_1.0.2       tools_4.3.2      \n[49] pkgconfig_2.0.3   htmltools_0.5.7  \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "SFG",
      "SFG2",
      "SFG2D"
    ]
  },
  {
    "objectID": "graphs/SFG2/sfg02.html",
    "href": "graphs/SFG2/sfg02.html",
    "title": "SFG2",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nWe prepare the data similarly as in SFG1. In particular we use again the cut_quantile_bins() function, here to obtain quartile bins of the continuous biomarker BMRKR1.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nBMRKR1_probs &lt;- c(0.25, 0.5, 0.75)\n\nadtte &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(\n    PARAMCD == \"OS\"\n  ) %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0,\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = c(\"B: Placebo\"),\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    ),\n    BMRKR1 = ifelse(BEP01FL == \"N\", NA, BMRKR1),\n    BMRKR1_BIN = explicit_na(cut_quantile_bins(BMRKR1, BMRKR1_probs)),\n    BMRKR2 = fct_explicit_na_if(BMRKR2, BEP01FL == \"N\")\n  ) %&gt;%\n  var_relabel(\n    BEP01FL = \"BEP\",\n    BMRKR2 = \"Biomarker (Categorical)\",\n    BMRKR1_BIN = \"Biomarker (Binned)\"\n  )\n\n\n\n\nFor the calculations, we start by getting the levels from BMRKR1_BIN which saves us typing them manually in the groups_lists definition. This definition is required here so that we can have overlapping subgroups.\n\nCodeBMRKR1_BIN_levels &lt;- levels(adtte$BMRKR1_BIN)\n\ntbl &lt;- extract_survival_subgroups(\n  variables = list(\n    tte = \"AVAL\",\n    is_event = \"is_event\",\n    arm = \"ARM_BIN\",\n    subgroups = c(\"BEP01FL\", \"BMRKR1_BIN\")\n  ),\n  label_all = \"ITT\",\n  groups_lists = list(\n    BMRKR1_BIN = list(\n      \"(25%,100%]\" = BMRKR1_BIN_levels[2:4],\n      \"(50%,100%]\" = BMRKR1_BIN_levels[3:4],\n      \"(75%,100%]\" = BMRKR1_BIN_levels[4]\n    )\n  ),\n  data = adtte\n)\n\nresult &lt;- basic_table() %&gt;%\n  tabulate_survival_subgroups(\n    df = tbl,\n    vars = c(\"n_tot_events\", \"n\", \"n_events\", \"median\", \"hr\", \"ci\"),\n    time_unit = adtte$AVALU[1]\n  )\n\n\nWe can now produce the forest plot using the g_forest() function from tern based on this result table.\n\nCodeg_forest(result)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.3.9016       rtables_0.6.6.9010   \n[4] magrittr_2.0.3        formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.6-5      gtable_0.3.4      jsonlite_1.8.8    compiler_4.3.2   \n [5] tidyselect_1.2.0  tidyr_1.3.1       splines_4.3.2     scales_1.3.0     \n [9] yaml_2.3.8        fastmap_1.1.1     lattice_0.22-5    ggplot2_3.4.4    \n[13] R6_2.5.1          labeling_0.4.3    generics_0.1.3    knitr_1.45       \n[17] forcats_1.0.0     rbibutils_2.2.16  htmlwidgets_1.6.4 backports_1.4.1  \n[21] checkmate_2.3.1   tibble_3.2.1      munsell_0.5.0     scda_0.1.6.9016  \n[25] pillar_1.9.0      rlang_1.1.3       utf8_1.2.4        stringi_1.8.3    \n[29] broom_1.0.5       xfun_0.41         cli_3.6.2         withr_3.0.0      \n[33] Rdpack_2.6        digest_0.6.34     grid_4.3.2        cowplot_1.1.3    \n[37] lifecycle_1.0.4   vctrs_0.6.5       evaluate_0.23     glue_1.7.0       \n[41] farver_2.1.1      codetools_0.2-19  survival_3.5-7    fansi_1.0.6      \n[45] colorspace_2.1-0  rmarkdown_2.25    purrr_1.0.2       tools_4.3.2      \n[49] pkgconfig_2.0.3   htmltools_0.5.7  \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "SFG",
      "SFG2"
    ]
  },
  {
    "objectID": "graphs/SFG1/setup.html#setup",
    "href": "graphs/SFG1/setup.html#setup",
    "title": "",
    "section": "Setup",
    "text": "Setup\nWe will use the cadtte data set from the random.cdisc.data package to create the survival forest graph. We start by filtering the adtte data set for the overall survival observations, converting time of overall survival to months, creating a new variable for event information, binarizing the ARM variable and creating a binned age variable by using the function cut_quantile_bins(). Note that we do not include the boundaries 0 and 1 in the corresponding cutoffs vector AGE_probs, but only the true cutoff probabilities to use (here 0.5, i.e. the median). We restrict the analysis of the biomarker variables BMRKR1 and BMRKR2 to the BEP by setting them as missing for the non-BEP.\nWe also relabel the biomarker evaluable population flag variable BEP01FL and the categorical biomarker variable BMRKR2 to update the display label of these variables in the graph.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nAGE_probs &lt;- 0.5\n\nadtte &lt;- random.cdisc.data::cadtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(\n    PARAMCD == \"OS\"\n  ) %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0,\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = \"B: Placebo\",\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    ),\n    AGE_BIN = cut_quantile_bins(AGE, probs = AGE_probs),\n    BMRKR1 = ifelse(BEP01FL == \"N\", NA, BMRKR1),\n    BMRKR2 = fct_explicit_na_if(BMRKR2, BEP01FL == \"N\")\n  ) %&gt;%\n  var_relabel(\n    BEP01FL = \"BEP\",\n    BMRKR2 = \"Biomarker (Categorical)\"\n  )"
  },
  {
    "objectID": "graphs/SFG1/sfg01a.html",
    "href": "graphs/SFG1/sfg01a.html",
    "title": "SFG1A",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nWe will use the synthetic_cdisc_data$adtte data set from the scda package to create the survival forest graph. We start by filtering the adtte data set for the overall survival observations, converting time of overall survival to months, creating a new variable for event information, binarizing the ARM variable and creating a binned age variable by using the function cut_quantile_bins(). Note that we do not include the boundaries 0 and 1 in the corresponding cutoffs vector AGE_probs, but only the true cutoff probabilities to use (here 0.5, i.e. the median). We restrict the analysis of the biomarker variables BMRKR1 and BMRKR2 to the BEP by setting them as missing for the non-BEP.\nWe also relabel the biomarker evaluable population flag variable BEP01FL and the categorical biomarker variable BMRKR2 to update the display label of these variables in the graph.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nAGE_probs &lt;- 0.5\n\nadtte &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(\n    PARAMCD == \"OS\"\n  ) %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0,\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = \"B: Placebo\",\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    ),\n    AGE_BIN = cut_quantile_bins(AGE, probs = AGE_probs),\n    BMRKR1 = ifelse(BEP01FL == \"N\", NA, BMRKR1),\n    BMRKR2 = fct_explicit_na_if(BMRKR2, BEP01FL == \"N\")\n  ) %&gt;%\n  var_relabel(\n    BEP01FL = \"BEP\",\n    BMRKR2 = \"Biomarker (Categorical)\"\n  )\n\n\n\n\nThis works analogously to SFG1, we just only include BMRKR2 in the subgroups list element.\n\nCodetbl &lt;- extract_survival_subgroups(\n  variables = list(\n    tte = \"AVAL\",\n    is_event = \"is_event\",\n    arm = \"ARM_BIN\",\n    subgroups = \"BMRKR2\"\n  ),\n  data = adtte\n)\n\nresult &lt;- basic_table() %&gt;%\n  tabulate_survival_subgroups(\n    df = tbl,\n    vars = c(\"n_tot_events\", \"n\", \"n_events\", \"median\", \"hr\", \"ci\"),\n    time_unit = adtte$AVALU[1]\n  )\n\n\nWe can now remove the first line with All Patients and the last line with the &lt;Missing&gt; category from the result table to display the survival forest plot only by the categorical biomarker BMRKR2.\n\nCoderesult &lt;- result[c(-1, -6), , keep_topleft = TRUE]\n\n\nWe can then again produce the forest plot using g_forest().\n\nCodeg_forest(result)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.3.9016       rtables_0.6.6.9010   \n[4] magrittr_2.0.3        formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.6-5      gtable_0.3.4      jsonlite_1.8.8    compiler_4.3.2   \n [5] tidyselect_1.2.0  tidyr_1.3.1       splines_4.3.2     scales_1.3.0     \n [9] yaml_2.3.8        fastmap_1.1.1     lattice_0.22-5    ggplot2_3.4.4    \n[13] R6_2.5.1          labeling_0.4.3    generics_0.1.3    knitr_1.45       \n[17] forcats_1.0.0     rbibutils_2.2.16  htmlwidgets_1.6.4 backports_1.4.1  \n[21] checkmate_2.3.1   tibble_3.2.1      munsell_0.5.0     scda_0.1.6.9016  \n[25] pillar_1.9.0      rlang_1.1.3       utf8_1.2.4        stringi_1.8.3    \n[29] broom_1.0.5       xfun_0.41         cli_3.6.2         withr_3.0.0      \n[33] Rdpack_2.6        digest_0.6.34     grid_4.3.2        cowplot_1.1.3    \n[37] lifecycle_1.0.4   vctrs_0.6.5       evaluate_0.23     glue_1.7.0       \n[41] farver_2.1.1      codetools_0.2-19  survival_3.5-7    fansi_1.0.6      \n[45] colorspace_2.1-0  rmarkdown_2.25    purrr_1.0.2       tools_4.3.2      \n[49] pkgconfig_2.0.3   htmltools_0.5.7  \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "SFG",
      "SFG1",
      "SFG1A"
    ]
  },
  {
    "objectID": "graphs/RG1/setup.html#setup",
    "href": "graphs/RG1/setup.html#setup",
    "title": "",
    "section": "Setup",
    "text": "Setup\nWe will use the cadrs data set from the random.cdisc.data package to create the response plots. We transform the response variable into an ordered factor to ensure that the response labels are ordered correctly and a sequential color scheme is used in the graph. We select Best Confirmed Overall Response by Investigator to evaluate response. Finally, we select patients with measurable disease at baseline (BMEASIFL == \"Y\") as response evaluable patients.\nFor ggplot() used in all analyses, we add by = BMEASIFL in the aesthetics to support the calculation of proportions using geom_text(stat = \"prop\").\n\nCodelibrary(tern)\nlibrary(ggplot2.utils)\nlibrary(dplyr)\n\nadrs &lt;- random.cdisc.data::cadrs %&gt;%\n  df_explicit_na() %&gt;%\n  mutate(AVALC = ordered(AVALC, levels = c(\"&lt;Missing&gt;\", \"NE\", \"PD\", \"SD\", \"PR\", \"CR\"))) %&gt;%\n  filter(PARAMCD == \"BESRSPI\", BMEASIFL == \"Y\")"
  },
  {
    "objectID": "graphs/RG1/rg01.html",
    "href": "graphs/RG1/rg01.html",
    "title": "RG1",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nWe will use the synthetic_cdisc_data$adrs data set from the scda package to create the response plots. We transform the response variable into an ordered factor to ensure that the response labels are ordered correctly and a sequential color scheme is used in the graph. We select Best Confirmed Overall Response by Investigator to evaluate response. Finally, we select patients with measurable disease at baseline (BMEASIFL == \"Y\") as response evaluable patients.\nFor ggplot() used in all analyses, we add by = BMEASIFL in the aesthetics to support the calculation of proportions using geom_text(stat = \"prop\").\n\nCodelibrary(tern)\nlibrary(ggplot2.utils)\nlibrary(dplyr)\n\nadrs &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adrs %&gt;%\n  df_explicit_na() %&gt;%\n  mutate(AVALC = ordered(AVALC, levels = c(\"&lt;Missing&gt;\", \"NE\", \"PD\", \"SD\", \"PR\", \"CR\"))) %&gt;%\n  filter(PARAMCD == \"BESRSPI\", BMEASIFL == \"Y\")\n\n\n\n\n\nCodegraph &lt;- ggplot(adrs, aes(BMEASIFL, fill = AVALC, by = BMEASIFL)) +\n  geom_bar(aes(BMEASIFL), position = \"fill\") +\n  geom_text(stat = \"prop\", position = position_fill(.5)) +\n  scale_y_continuous(labels = scales::percent) +\n  ylab(\"%\")\n\ngraph\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           ggplot2.utils_0.3.1   ggplot2_3.4.4        \n[4] tern_0.9.3.9016       rtables_0.6.6.9010    magrittr_2.0.3       \n[7] formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.4        generics_0.1.3    tidyr_1.3.1       scda_0.1.6.9016  \n [5] EnvStats_2.8.1    lattice_0.22-5    digest_0.6.34     evaluate_0.23    \n [9] grid_4.3.2        fastmap_1.1.1     jsonlite_1.8.8    Matrix_1.6-5     \n[13] backports_1.4.1   survival_3.5-7    purrr_1.0.2       fansi_1.0.6      \n[17] viridisLite_0.4.2 scales_1.3.0      codetools_0.2-19  Rdpack_2.6       \n[21] cli_3.6.2         ggpp_0.5.6        rlang_1.1.3       rbibutils_2.2.16 \n[25] munsell_0.5.0     splines_4.3.2     withr_3.0.0       yaml_2.3.8       \n[29] tools_4.3.2       polynom_1.4-1     checkmate_2.3.1   colorspace_2.1-0 \n[33] forcats_1.0.0     ggstats_0.5.1     broom_1.0.5       vctrs_0.6.5      \n[37] R6_2.5.1          lifecycle_1.0.4   htmlwidgets_1.6.4 MASS_7.3-60.0.1  \n[41] pkgconfig_2.0.3   pillar_1.9.0      gtable_0.3.4      glue_1.7.0       \n[45] xfun_0.41         tibble_3.2.1      tidyselect_1.2.0  knitr_1.45       \n[49] farver_2.1.1      htmltools_0.5.7   labeling_0.4.3    rmarkdown_2.25   \n[53] compiler_4.3.2   \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "RG"
    ]
  },
  {
    "objectID": "graphs/RG1/rg01b.html",
    "href": "graphs/RG1/rg01b.html",
    "title": "RG1B",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nWe will use the synthetic_cdisc_data$adrs data set from the scda package to create the response plots. We transform the response variable into an ordered factor to ensure that the response labels are ordered correctly and a sequential color scheme is used in the graph. We select Best Confirmed Overall Response by Investigator to evaluate response. Finally, we select patients with measurable disease at baseline (BMEASIFL == \"Y\") as response evaluable patients.\nFor ggplot() used in all analyses, we add by = BMEASIFL in the aesthetics to support the calculation of proportions using geom_text(stat = \"prop\").\n\nCodelibrary(tern)\nlibrary(ggplot2.utils)\nlibrary(dplyr)\n\nadrs &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adrs %&gt;%\n  df_explicit_na() %&gt;%\n  mutate(AVALC = ordered(AVALC, levels = c(\"&lt;Missing&gt;\", \"NE\", \"PD\", \"SD\", \"PR\", \"CR\"))) %&gt;%\n  filter(PARAMCD == \"BESRSPI\", BMEASIFL == \"Y\")\n\n\n\n\nWe can use the scale_fill_manual() function from ggplot2 to change the color scheme of the plot by manually selecting colors to assign to the values.\n\nCodeadrs &lt;- adrs %&gt;%\n  mutate(\n    AVALC_BIN = fct_collapse_only(\n      AVALC,\n      Yes = c(\"CR\", \"PR\"),\n      No = c(\"PD\", \"SD\", \"NE\", \"&lt;Missing&gt;\")\n    )\n  )\ngraph &lt;- ggplot(adrs, aes(BMEASIFL, fill = AVALC_BIN, by = BMEASIFL)) +\n  geom_bar(position = \"fill\") +\n  geom_text(stat = \"prop\", position = position_fill(.5)) +\n  scale_y_continuous(labels = scales::percent) +\n  ylab(\"%\")\ngraph +\n  scale_fill_manual(\"AVALC_BIN\", values = c(\"Yes\" = \"blue\", \"No\" = \"red\"))\n\n\n\n\n\n\n\nAlternatively we can also use the scale_fill_brewer() function from ggplot2 to change the color scheme of the plot by selecting a preset color palette.\n\nCodegraph +\n  scale_fill_brewer(palette = \"Set1\")\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           ggplot2.utils_0.3.1   ggplot2_3.4.4        \n[4] tern_0.9.3.9016       rtables_0.6.6.9010    magrittr_2.0.3       \n[7] formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.4         generics_0.1.3     tidyr_1.3.1        scda_0.1.6.9016   \n [5] EnvStats_2.8.1     lattice_0.22-5     digest_0.6.34      RColorBrewer_1.1-3\n [9] evaluate_0.23      grid_4.3.2         fastmap_1.1.1      jsonlite_1.8.8    \n[13] Matrix_1.6-5       backports_1.4.1    survival_3.5-7     purrr_1.0.2       \n[17] fansi_1.0.6        scales_1.3.0       codetools_0.2-19   Rdpack_2.6        \n[21] cli_3.6.2          ggpp_0.5.6         rlang_1.1.3        rbibutils_2.2.16  \n[25] munsell_0.5.0      splines_4.3.2      withr_3.0.0        yaml_2.3.8        \n[29] tools_4.3.2        polynom_1.4-1      checkmate_2.3.1    colorspace_2.1-0  \n[33] forcats_1.0.0      ggstats_0.5.1      broom_1.0.5        vctrs_0.6.5       \n[37] R6_2.5.1           lifecycle_1.0.4    htmlwidgets_1.6.4  MASS_7.3-60.0.1   \n[41] pkgconfig_2.0.3    pillar_1.9.0       gtable_0.3.4       glue_1.7.0        \n[45] xfun_0.41          tibble_3.2.1       tidyselect_1.2.0   knitr_1.45        \n[49] farver_2.1.1       htmltools_0.5.7    labeling_0.4.3     rmarkdown_2.25    \n[53] compiler_4.3.2    \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "RG",
      "RG1",
      "RG1B"
    ]
  },
  {
    "objectID": "graphs/SFG6/setup.html#setup",
    "href": "graphs/SFG6/setup.html#setup",
    "title": "",
    "section": "Setup",
    "text": "Setup\nThese templates are helpful when we are interested in modelling the effects of continuous biomarker variables on a time-to-event (survival) outcome, conditional on covariates and/or stratification variables included in Cox proportional hazards regression models. We would like to assess how the estimates effects change when we look at different subgroups.\nIn detail the differences to the other survival forest graphs (SFG1 to SFG5) are the following:\n\nThe extract_survival_subgroups() and tabulate_survival_subgroups() functions evaluate the treatment effects comparing two arms, across subgroups. On the other hand, the extract_survival_biomarkers() and tabulate_survival_biomarkers() functions used here in SFG6 evaluate the effects from continuous biomarkers in the Cox proportional hazards models, across subgroups.\nThe extract_survival_subgroups() and tabulate_survival_subgroups() functions only allow specification of a single treatment arm variable, while the extract_survival_biomarkers() and tabulate_survival_biomarkers() allow to look at multiple continuous biomarker variables at once.\nIn addition to the treatment arms, the use of extract_survival_subgroups() and tabulate_survival_subgroups() functions can be extended to other binary variables, as done in SFG3 and SFG4. For example, we could define the binarized ARM variable as AGE&gt;=65 vs. AGE&lt;65 and then look at the odds ratios across subgroups. For the extract_survival_biomarkers() and tabulate_survival_biomarkers() functions, we could use the original continuous biomarker variable AGE, and then look at the estimated effect across subgroups.\n\nSimilarly like in SFG3, we will use the cadtte data set from the random.cdisc.data package. Here we just filter for the overall survival outcome in a single arm in the biomarker evaluable population.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte_f &lt;- random.cdisc.data::cadtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(\n    PARAMCD == \"OS\",\n    ARM == \"A: Drug X\",\n    BEP01FL == \"Y\"\n  ) %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0\n  ) %&gt;%\n  var_relabel(\n    BEP01FL = \"BEP\",\n    BMRKR1 = \"Biomarker (Countinuous)\"\n  )"
  },
  {
    "objectID": "graphs/SFG6/sfg06c.html",
    "href": "graphs/SFG6/sfg06c.html",
    "title": "SFG6C",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nThese templates are helpful when we are interested in modelling the effects of continuous biomarker variables on a time-to-event (survival) outcome, conditional on covariates and/or stratification variables included in Cox proportional hazards regression models. We would like to assess how the estimates effects change when we look at different subgroups.\nIn detail the differences to the other survival forest graphs (SFG1 to SFG5) are the following:\n\nThe extract_survival_subgroups() and tabulate_survival_subgroups() functions evaluate the treatment effects comparing two arms, across subgroups. On the other hand, the extract_survival_biomarkers() and tabulate_survival_biomarkers() functions used here in SFG6 evaluate the effects from continuous biomarkers in the Cox proportional hazards models, across subgroups.\nThe extract_survival_subgroups() and tabulate_survival_subgroups() functions only allow specification of a single treatment arm variable, while the extract_survival_biomarkers() and tabulate_survival_biomarkers() allow to look at multiple continuous biomarker variables at once.\nIn addition to the treatment arms, the use of extract_survival_subgroups() and tabulate_survival_subgroups() functions can be extended to other binary variables, as done in SFG3 and SFG4. For example, we could define the binarized ARM variable as AGE&gt;=65 vs. AGE&lt;65 and then look at the odds ratios across subgroups. For the extract_survival_biomarkers() and tabulate_survival_biomarkers() functions, we could use the original continuous biomarker variable AGE, and then look at the estimated effect across subgroups.\n\nSimilarly like in SFG3, we will use the synthetic_cdisc_data$adtte data set from the scda package. Here we just filter for the overall survival outcome in a single arm in the biomarker evaluable population.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte_f &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(\n    PARAMCD == \"OS\",\n    ARM == \"A: Drug X\",\n    BEP01FL == \"Y\"\n  ) %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0\n  ) %&gt;%\n  var_relabel(\n    BEP01FL = \"BEP\",\n    BMRKR1 = \"Biomarker (Countinuous)\"\n  )\n\n\n\n\nFinally we can also specify stratification variables with the strata variable element, then the corresponding variables are used for stratification in the Cox proportional hazards models.\n\nCodedf &lt;- extract_survival_biomarkers(\n  variables = list(\n    tte = \"AVAL\",\n    is_event = \"is_event\",\n    biomarkers = c(\"BMRKR1\", \"AGE\"),\n    covariates = \"SEX\",\n    subgroups = \"BMRKR2\",\n    strata = c(\"STRATA1\", \"STRATA2\")\n  ),\n  data = adtte_f\n)\n\nresult &lt;- tabulate_survival_biomarkers(\n  df = df,\n  vars = c(\"n_tot_events\", \"n_tot\", \"median\", \"hr\", \"ci\"),\n  time_unit = adtte_f$AVALU[1]\n)\ng_forest(result, xlim = c(0.6, 1.4))\n\n\n\n\n\n\n\nNote that warnings might be issued if the model contains e.g. too few events in the resulting strata, in that case you might want to reduce the number of stratification variables.\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.3.9016       rtables_0.6.6.9010   \n[4] magrittr_2.0.3        formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.4        generics_0.1.3    tidyr_1.3.1       scda_0.1.6.9016  \n [5] stringi_1.8.3     lattice_0.22-5    digest_0.6.34     evaluate_0.23    \n [9] grid_4.3.2        fastmap_1.1.1     jsonlite_1.8.8    Matrix_1.6-5     \n[13] backports_1.4.1   survival_3.5-7    purrr_1.0.2       fansi_1.0.6      \n[17] scales_1.3.0      codetools_0.2-19  abind_1.4-5       Rdpack_2.6       \n[21] cli_3.6.2         rlang_1.1.3       rbibutils_2.2.16  cowplot_1.1.3    \n[25] munsell_0.5.0     splines_4.3.2     withr_3.0.0       yaml_2.3.8       \n[29] tools_4.3.2       checkmate_2.3.1   colorspace_2.1-0  ggplot2_3.4.4    \n[33] forcats_1.0.0     broom_1.0.5       vctrs_0.6.5       R6_2.5.1         \n[37] lifecycle_1.0.4   stringr_1.5.1     car_3.1-2         htmlwidgets_1.6.4\n[41] pkgconfig_2.0.3   pillar_1.9.0      gtable_0.3.4      glue_1.7.0       \n[45] xfun_0.41         tibble_3.2.1      tidyselect_1.2.0  knitr_1.45       \n[49] farver_2.1.1      htmltools_0.5.7   labeling_0.4.3    rmarkdown_2.25   \n[53] carData_3.0-5     compiler_4.3.2   \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "SFG",
      "SFG6",
      "SFG6C"
    ]
  },
  {
    "objectID": "misc/session_info.html#session-info",
    "href": "misc/session_info.html#session-info",
    "title": "",
    "section": "Session Info",
    "text": "Session Info\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nloaded via a namespace (and not attached):\n [1] htmlwidgets_1.6.4 compiler_4.3.2    fastmap_1.1.1     cli_3.6.2        \n [5] tools_4.3.2       htmltools_0.5.7   yaml_2.3.8        rmarkdown_2.25   \n [9] knitr_1.45        jsonlite_1.8.8    xfun_0.41         digest_0.6.34    \n[13] rlang_1.1.3       evaluate_0.23"
  },
  {
    "objectID": "misc/hooks.html",
    "href": "misc/hooks.html",
    "title": "",
    "section": "",
    "text": "ReuseCopyright 2023, Hoffmann-La Roche Ltd."
  },
  {
    "objectID": "misc/version.html",
    "href": "misc/version.html",
    "title": "",
    "section": "",
    "text": "This catalog’s outputs were generated on version 0.2.0 and commit SHA 47e848b847d2f53c48bd74c63c90232a394404d9 of the Biomarker Analysis Catalog.\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd."
  },
  {
    "objectID": "misc/license.html",
    "href": "misc/license.html",
    "title": "License",
    "section": "",
    "text": "This catalog as well as code examples are licensed under the Apache License 2.0.\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Biomarker Analysis Catalog",
    "section": "",
    "text": "This is a collection of Biomarker Analysis templates including tables and graphs.\nCitation\n\nSabanes Bove D, Moroni P, Rossomanno S, Luong J, Bhatia N, Rossomanno S, Li H, Midori Zhang L, de la Rua E, Banjo S, Falquet B (2024). biomarker.catalog: Biomarker Analysis Catalog. R package version 0.2.0, https://insightsengineering.github.io/biomarker-catalog/.\n\n@Manual{,\n  title = {biomarker.catalog: Biomarker Analysis Catalog},\n  author = {Daniel {Sabanes Bove} and Paolo Moroni and Simona Rossomanno and Jeff Luong and Namrata Bhatia and Simona Rossomanno and Haocheng Li and Lyndsee {Midori Zhang} and Emily {de la Rua} and Stella Banjo and Benoit Falquet},\n  year = {2024},\n  note = {R package version 0.2.0},\n  url = {https://insightsengineering.github.io/biomarker-catalog/},\n} \nVersion\nThis catalog’s outputs were generated on version 0.2.0 and commit SHA 47e848b847d2f53c48bd74c63c90232a394404d9 of the Biomarker Analysis Catalog.\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Index"
    ]
  },
  {
    "objectID": "graphs/SFG6/sfg06a.html",
    "href": "graphs/SFG6/sfg06a.html",
    "title": "SFG6A",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nThese templates are helpful when we are interested in modelling the effects of continuous biomarker variables on a time-to-event (survival) outcome, conditional on covariates and/or stratification variables included in Cox proportional hazards regression models. We would like to assess how the estimates effects change when we look at different subgroups.\nIn detail the differences to the other survival forest graphs (SFG1 to SFG5) are the following:\n\nThe extract_survival_subgroups() and tabulate_survival_subgroups() functions evaluate the treatment effects comparing two arms, across subgroups. On the other hand, the extract_survival_biomarkers() and tabulate_survival_biomarkers() functions used here in SFG6 evaluate the effects from continuous biomarkers in the Cox proportional hazards models, across subgroups.\nThe extract_survival_subgroups() and tabulate_survival_subgroups() functions only allow specification of a single treatment arm variable, while the extract_survival_biomarkers() and tabulate_survival_biomarkers() allow to look at multiple continuous biomarker variables at once.\nIn addition to the treatment arms, the use of extract_survival_subgroups() and tabulate_survival_subgroups() functions can be extended to other binary variables, as done in SFG3 and SFG4. For example, we could define the binarized ARM variable as AGE&gt;=65 vs. AGE&lt;65 and then look at the odds ratios across subgroups. For the extract_survival_biomarkers() and tabulate_survival_biomarkers() functions, we could use the original continuous biomarker variable AGE, and then look at the estimated effect across subgroups.\n\nSimilarly like in SFG3, we will use the synthetic_cdisc_data$adtte data set from the scda package. Here we just filter for the overall survival outcome in a single arm in the biomarker evaluable population.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte_f &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(\n    PARAMCD == \"OS\",\n    ARM == \"A: Drug X\",\n    BEP01FL == \"Y\"\n  ) %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0\n  ) %&gt;%\n  var_relabel(\n    BEP01FL = \"BEP\",\n    BMRKR1 = \"Biomarker (Countinuous)\"\n  )\n\n\n\n\nHere we specify that we would like to analyze the two continuous biomarkers BMRKR1 and AGE, conditional on the covariate SEX, in the subgroups defined by the levels of BMRKR2.\n\nCodedf &lt;- extract_survival_biomarkers(\n  variables = list(\n    tte = \"AVAL\",\n    is_event = \"is_event\",\n    biomarkers = c(\"BMRKR1\", \"AGE\"),\n    covariates = \"SEX\",\n    subgroups = \"BMRKR2\"\n  ),\n  data = adtte_f\n)\n\nresult &lt;- tabulate_survival_biomarkers(\n  df = df,\n  vars = c(\"n_tot_events\", \"n_tot\", \"median\", \"hr\", \"ci\"),\n  time_unit = adtte_f$AVALU[1]\n)\n\n\nWe can look at the result in the console already.\n\nCoderesult\n\n                                  Total Events   Total n   Median (Months)   Hazard Ratio   95% Wald CI \n————————————————————————————————————————————————————————————————————————————————————————————————————————\nAge                                                                                                     \n  All Patients                         37          68           41.7             0.99       (0.94, 1.04)\n  Categorical Level Biomarker 2                                                                         \n    LOW                                13          26           48.2             0.95       (0.87, 1.04)\n    MEDIUM                             9           20           41.4             1.05       (0.93, 1.18)\n    HIGH                               15          22           43.6             0.99       (0.89, 1.09)\nBiomarker (Countinuous)                                                                                 \n  All Patients                         37          68           41.7             0.94       (0.84, 1.05)\n  Categorical Level Biomarker 2                                                                         \n    LOW                                13          26           48.2             0.96       (0.76, 1.21)\n    MEDIUM                             9           20           41.4             0.94       (0.79, 1.12)\n    HIGH                               15          22           43.6             0.89       (0.70, 1.12)\n\n\nNote that in addition to the Categorical Level Biomarker 2 subgroups we automatically also get the estimates for the overall patient population in the All Patients rows.\nWe can then produce the final forest plot using the g_forest() function on this tabular result.\n\nCodeg_forest(result, xlim = c(0.7, 1.4))\n\n\n\n\n\n\n\nHere we can see that the continuous biomarker (BMRKR1) shows a trend towards an estimated positive effect on survival (it is not statistically significant though as the confidence intervals still overlap the hazard ratio 1). It is a bit easier to see this here rather than in a cutpoint analysis as presented in SFG3.\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.3.9016       rtables_0.6.6.9010   \n[4] magrittr_2.0.3        formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.4        generics_0.1.3    tidyr_1.3.1       scda_0.1.6.9016  \n [5] stringi_1.8.3     lattice_0.22-5    digest_0.6.34     evaluate_0.23    \n [9] grid_4.3.2        fastmap_1.1.1     jsonlite_1.8.8    Matrix_1.6-5     \n[13] backports_1.4.1   survival_3.5-7    purrr_1.0.2       fansi_1.0.6      \n[17] scales_1.3.0      codetools_0.2-19  abind_1.4-5       Rdpack_2.6       \n[21] cli_3.6.2         rlang_1.1.3       rbibutils_2.2.16  cowplot_1.1.3    \n[25] munsell_0.5.0     splines_4.3.2     withr_3.0.0       yaml_2.3.8       \n[29] tools_4.3.2       checkmate_2.3.1   colorspace_2.1-0  ggplot2_3.4.4    \n[33] forcats_1.0.0     broom_1.0.5       vctrs_0.6.5       R6_2.5.1         \n[37] lifecycle_1.0.4   stringr_1.5.1     car_3.1-2         htmlwidgets_1.6.4\n[41] pkgconfig_2.0.3   pillar_1.9.0      gtable_0.3.4      glue_1.7.0       \n[45] xfun_0.41         tibble_3.2.1      tidyselect_1.2.0  knitr_1.45       \n[49] farver_2.1.1      htmltools_0.5.7   labeling_0.4.3    rmarkdown_2.25   \n[53] carData_3.0-5     compiler_4.3.2   \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "SFG",
      "SFG6"
    ]
  },
  {
    "objectID": "graphs/SFG6/sfg06b.html",
    "href": "graphs/SFG6/sfg06b.html",
    "title": "SFG6B",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nThese templates are helpful when we are interested in modelling the effects of continuous biomarker variables on a time-to-event (survival) outcome, conditional on covariates and/or stratification variables included in Cox proportional hazards regression models. We would like to assess how the estimates effects change when we look at different subgroups.\nIn detail the differences to the other survival forest graphs (SFG1 to SFG5) are the following:\n\nThe extract_survival_subgroups() and tabulate_survival_subgroups() functions evaluate the treatment effects comparing two arms, across subgroups. On the other hand, the extract_survival_biomarkers() and tabulate_survival_biomarkers() functions used here in SFG6 evaluate the effects from continuous biomarkers in the Cox proportional hazards models, across subgroups.\nThe extract_survival_subgroups() and tabulate_survival_subgroups() functions only allow specification of a single treatment arm variable, while the extract_survival_biomarkers() and tabulate_survival_biomarkers() allow to look at multiple continuous biomarker variables at once.\nIn addition to the treatment arms, the use of extract_survival_subgroups() and tabulate_survival_subgroups() functions can be extended to other binary variables, as done in SFG3 and SFG4. For example, we could define the binarized ARM variable as AGE&gt;=65 vs. AGE&lt;65 and then look at the odds ratios across subgroups. For the extract_survival_biomarkers() and tabulate_survival_biomarkers() functions, we could use the original continuous biomarker variable AGE, and then look at the estimated effect across subgroups.\n\nSimilarly like in SFG3, we will use the synthetic_cdisc_data$adtte data set from the scda package. Here we just filter for the overall survival outcome in a single arm in the biomarker evaluable population.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte_f &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(\n    PARAMCD == \"OS\",\n    ARM == \"A: Drug X\",\n    BEP01FL == \"Y\"\n  ) %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0\n  ) %&gt;%\n  var_relabel(\n    BEP01FL = \"BEP\",\n    BMRKR1 = \"Biomarker (Countinuous)\"\n  )\n\n\n\n\nIt is also possible to join and select subgroup categories manually using the groups_lists argument, as follows. Here we join the low and medium levels of BMRKR2 into a category one and compare with the high level labeled as category two.\n\nCodedf &lt;- extract_survival_biomarkers(\n  variables = list(\n    tte = \"AVAL\",\n    is_event = \"is_event\",\n    biomarkers = c(\"BMRKR1\", \"AGE\"),\n    covariates = \"SEX\",\n    subgroups = \"BMRKR2\"\n  ),\n  data = adtte_f,\n  groups_list = list(\n    BMRKR2 = list(\n      one = c(\"LOW\", \"MEDIUM\"),\n      two = \"HIGH\"\n    )\n  )\n)\n\nresult &lt;- tabulate_survival_biomarkers(\n  df = df,\n  vars = c(\"n_tot_events\", \"n_tot\", \"median\", \"hr\", \"ci\"),\n  time_unit = adtte_f$AVALU[1]\n)\ng_forest(result, xlim = c(0.7, 1.4))\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.3.9016       rtables_0.6.6.9010   \n[4] magrittr_2.0.3        formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.4        generics_0.1.3    tidyr_1.3.1       scda_0.1.6.9016  \n [5] stringi_1.8.3     lattice_0.22-5    digest_0.6.34     evaluate_0.23    \n [9] grid_4.3.2        fastmap_1.1.1     jsonlite_1.8.8    Matrix_1.6-5     \n[13] backports_1.4.1   survival_3.5-7    purrr_1.0.2       fansi_1.0.6      \n[17] scales_1.3.0      codetools_0.2-19  abind_1.4-5       Rdpack_2.6       \n[21] cli_3.6.2         rlang_1.1.3       rbibutils_2.2.16  cowplot_1.1.3    \n[25] munsell_0.5.0     splines_4.3.2     withr_3.0.0       yaml_2.3.8       \n[29] tools_4.3.2       checkmate_2.3.1   colorspace_2.1-0  ggplot2_3.4.4    \n[33] forcats_1.0.0     broom_1.0.5       vctrs_0.6.5       R6_2.5.1         \n[37] lifecycle_1.0.4   stringr_1.5.1     car_3.1-2         htmlwidgets_1.6.4\n[41] pkgconfig_2.0.3   pillar_1.9.0      gtable_0.3.4      glue_1.7.0       \n[45] xfun_0.41         tibble_3.2.1      tidyselect_1.2.0  knitr_1.45       \n[49] farver_2.1.1      htmltools_0.5.7   labeling_0.4.3    rmarkdown_2.25   \n[53] carData_3.0-5     compiler_4.3.2   \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "SFG",
      "SFG6",
      "SFG6B"
    ]
  },
  {
    "objectID": "graphs/RG1/rg01c.html",
    "href": "graphs/RG1/rg01c.html",
    "title": "RG1C",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nWe will use the synthetic_cdisc_data$adrs data set from the scda package to create the response plots. We transform the response variable into an ordered factor to ensure that the response labels are ordered correctly and a sequential color scheme is used in the graph. We select Best Confirmed Overall Response by Investigator to evaluate response. Finally, we select patients with measurable disease at baseline (BMEASIFL == \"Y\") as response evaluable patients.\nFor ggplot() used in all analyses, we add by = BMEASIFL in the aesthetics to support the calculation of proportions using geom_text(stat = \"prop\").\n\nCodelibrary(tern)\nlibrary(ggplot2.utils)\nlibrary(dplyr)\n\nadrs &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adrs %&gt;%\n  df_explicit_na() %&gt;%\n  mutate(AVALC = ordered(AVALC, levels = c(\"&lt;Missing&gt;\", \"NE\", \"PD\", \"SD\", \"PR\", \"CR\"))) %&gt;%\n  filter(PARAMCD == \"BESRSPI\", BMEASIFL == \"Y\")\n\n\n\n\nThe coord_flip() function from ggplot2 can be used to exchange the x and y coordinates, i.e. plot horizontally.\n\nCodeadrs &lt;- adrs %&gt;%\n  mutate(\n    AVALC_BIN = fct_collapse_only(\n      AVALC,\n      Yes = c(\"CR\", \"PR\"),\n      No = c(\"PD\", \"SD\", \"NE\", \"&lt;Missing&gt;\")\n    )\n  )\ngraph &lt;- ggplot(adrs, aes(BMEASIFL, fill = AVALC_BIN, by = BMEASIFL)) +\n  geom_bar(position = \"fill\") +\n  geom_text(stat = \"prop\", position = position_fill(.5)) +\n  scale_y_continuous(labels = scales::percent) +\n  ylab(\"%\")\ngraph +\n  coord_flip()\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           ggplot2.utils_0.3.1   ggplot2_3.4.4        \n[4] tern_0.9.3.9016       rtables_0.6.6.9010    magrittr_2.0.3       \n[7] formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.4        generics_0.1.3    tidyr_1.3.1       scda_0.1.6.9016  \n [5] EnvStats_2.8.1    lattice_0.22-5    digest_0.6.34     evaluate_0.23    \n [9] grid_4.3.2        fastmap_1.1.1     jsonlite_1.8.8    Matrix_1.6-5     \n[13] backports_1.4.1   survival_3.5-7    purrr_1.0.2       fansi_1.0.6      \n[17] viridisLite_0.4.2 scales_1.3.0      codetools_0.2-19  Rdpack_2.6       \n[21] cli_3.6.2         ggpp_0.5.6        rlang_1.1.3       rbibutils_2.2.16 \n[25] munsell_0.5.0     splines_4.3.2     withr_3.0.0       yaml_2.3.8       \n[29] tools_4.3.2       polynom_1.4-1     checkmate_2.3.1   colorspace_2.1-0 \n[33] forcats_1.0.0     ggstats_0.5.1     broom_1.0.5       vctrs_0.6.5      \n[37] R6_2.5.1          lifecycle_1.0.4   htmlwidgets_1.6.4 MASS_7.3-60.0.1  \n[41] pkgconfig_2.0.3   pillar_1.9.0      gtable_0.3.4      glue_1.7.0       \n[45] xfun_0.41         tibble_3.2.1      tidyselect_1.2.0  knitr_1.45       \n[49] farver_2.1.1      htmltools_0.5.7   labeling_0.4.3    rmarkdown_2.25   \n[53] compiler_4.3.2   \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "RG",
      "RG1",
      "RG1C"
    ]
  },
  {
    "objectID": "graphs/RG1/rg01a.html",
    "href": "graphs/RG1/rg01a.html",
    "title": "RG1A",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nWe will use the synthetic_cdisc_data$adrs data set from the scda package to create the response plots. We transform the response variable into an ordered factor to ensure that the response labels are ordered correctly and a sequential color scheme is used in the graph. We select Best Confirmed Overall Response by Investigator to evaluate response. Finally, we select patients with measurable disease at baseline (BMEASIFL == \"Y\") as response evaluable patients.\nFor ggplot() used in all analyses, we add by = BMEASIFL in the aesthetics to support the calculation of proportions using geom_text(stat = \"prop\").\n\nCodelibrary(tern)\nlibrary(ggplot2.utils)\nlibrary(dplyr)\n\nadrs &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adrs %&gt;%\n  df_explicit_na() %&gt;%\n  mutate(AVALC = ordered(AVALC, levels = c(\"&lt;Missing&gt;\", \"NE\", \"PD\", \"SD\", \"PR\", \"CR\"))) %&gt;%\n  filter(PARAMCD == \"BESRSPI\", BMEASIFL == \"Y\")\n\n\n\n\nWe can use the fct_collapse_only() function from tern to binarize the response variable.\n\nCodeadrs &lt;- adrs %&gt;%\n  mutate(\n    AVALC_BIN = fct_collapse_only(\n      AVALC,\n      Yes = c(\"CR\", \"PR\"),\n      No = c(\"PD\", \"SD\", \"NE\", \"&lt;Missing&gt;\")\n    )\n  )\n\n\nWe can then produce the response plot with the newly binarized response variable.\n\nCodegraph &lt;- ggplot(adrs, aes(BMEASIFL, fill = AVALC_BIN, by = BMEASIFL)) +\n  geom_bar(position = \"fill\") +\n  geom_text(stat = \"prop\", position = position_fill(.5)) +\n  scale_y_continuous(labels = scales::percent) +\n  ylab(\"%\")\n\ngraph\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           ggplot2.utils_0.3.1   ggplot2_3.4.4        \n[4] tern_0.9.3.9016       rtables_0.6.6.9010    magrittr_2.0.3       \n[7] formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.4        generics_0.1.3    tidyr_1.3.1       scda_0.1.6.9016  \n [5] EnvStats_2.8.1    lattice_0.22-5    digest_0.6.34     evaluate_0.23    \n [9] grid_4.3.2        fastmap_1.1.1     jsonlite_1.8.8    Matrix_1.6-5     \n[13] backports_1.4.1   survival_3.5-7    purrr_1.0.2       fansi_1.0.6      \n[17] viridisLite_0.4.2 scales_1.3.0      codetools_0.2-19  Rdpack_2.6       \n[21] cli_3.6.2         ggpp_0.5.6        rlang_1.1.3       rbibutils_2.2.16 \n[25] munsell_0.5.0     splines_4.3.2     withr_3.0.0       yaml_2.3.8       \n[29] tools_4.3.2       polynom_1.4-1     checkmate_2.3.1   colorspace_2.1-0 \n[33] forcats_1.0.0     ggstats_0.5.1     broom_1.0.5       vctrs_0.6.5      \n[37] R6_2.5.1          lifecycle_1.0.4   htmlwidgets_1.6.4 MASS_7.3-60.0.1  \n[41] pkgconfig_2.0.3   pillar_1.9.0      gtable_0.3.4      glue_1.7.0       \n[45] xfun_0.41         tibble_3.2.1      tidyselect_1.2.0  knitr_1.45       \n[49] farver_2.1.1      htmltools_0.5.7   labeling_0.4.3    rmarkdown_2.25   \n[53] compiler_4.3.2   \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "RG",
      "RG1",
      "RG1A"
    ]
  },
  {
    "objectID": "graphs/SFG1/sfg01b.html",
    "href": "graphs/SFG1/sfg01b.html",
    "title": "SFG1B",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nWe will use the synthetic_cdisc_data$adtte data set from the scda package to create the survival forest graph. We start by filtering the adtte data set for the overall survival observations, converting time of overall survival to months, creating a new variable for event information, binarizing the ARM variable and creating a binned age variable by using the function cut_quantile_bins(). Note that we do not include the boundaries 0 and 1 in the corresponding cutoffs vector AGE_probs, but only the true cutoff probabilities to use (here 0.5, i.e. the median). We restrict the analysis of the biomarker variables BMRKR1 and BMRKR2 to the BEP by setting them as missing for the non-BEP.\nWe also relabel the biomarker evaluable population flag variable BEP01FL and the categorical biomarker variable BMRKR2 to update the display label of these variables in the graph.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nAGE_probs &lt;- 0.5\n\nadtte &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(\n    PARAMCD == \"OS\"\n  ) %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0,\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = \"B: Placebo\",\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    ),\n    AGE_BIN = cut_quantile_bins(AGE, probs = AGE_probs),\n    BMRKR1 = ifelse(BEP01FL == \"N\", NA, BMRKR1),\n    BMRKR2 = fct_explicit_na_if(BMRKR2, BEP01FL == \"N\")\n  ) %&gt;%\n  var_relabel(\n    BEP01FL = \"BEP\",\n    BMRKR2 = \"Biomarker (Categorical)\"\n  )\n\n\n\n\nThis works analogously to SFG1, we just specify different factor variables in subgroups, here including the binned continuous variable AGE_BIN as well as SEX.\n\nCodetbl &lt;- extract_survival_subgroups(\n  variables = list(\n    tte = \"AVAL\",\n    is_event = \"is_event\",\n    arm = \"ARM_BIN\",\n    subgroups = c(\"SEX\", \"AGE_BIN\")\n  ),\n  data = adtte\n)\n\nresult &lt;- basic_table() %&gt;%\n  tabulate_survival_subgroups(\n    df = tbl,\n    vars = c(\"n_tot_events\", \"n\", \"n_events\", \"median\", \"hr\", \"ci\"),\n    time_unit = adtte$AVALU[1]\n  )\n\n\nWe can now produce the forest plot using g_forest().\n\nCodeg_forest(result)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.3.9016       rtables_0.6.6.9010   \n[4] magrittr_2.0.3        formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.6-5      gtable_0.3.4      jsonlite_1.8.8    compiler_4.3.2   \n [5] tidyselect_1.2.0  tidyr_1.3.1       splines_4.3.2     scales_1.3.0     \n [9] yaml_2.3.8        fastmap_1.1.1     lattice_0.22-5    ggplot2_3.4.4    \n[13] R6_2.5.1          labeling_0.4.3    generics_0.1.3    knitr_1.45       \n[17] forcats_1.0.0     rbibutils_2.2.16  htmlwidgets_1.6.4 backports_1.4.1  \n[21] checkmate_2.3.1   tibble_3.2.1      munsell_0.5.0     scda_0.1.6.9016  \n[25] pillar_1.9.0      rlang_1.1.3       utf8_1.2.4        stringi_1.8.3    \n[29] broom_1.0.5       xfun_0.41         cli_3.6.2         withr_3.0.0      \n[33] Rdpack_2.6        digest_0.6.34     grid_4.3.2        cowplot_1.1.3    \n[37] lifecycle_1.0.4   vctrs_0.6.5       evaluate_0.23     glue_1.7.0       \n[41] farver_2.1.1      codetools_0.2-19  survival_3.5-7    fansi_1.0.6      \n[45] colorspace_2.1-0  rmarkdown_2.25    purrr_1.0.2       tools_4.3.2      \n[49] pkgconfig_2.0.3   htmltools_0.5.7  \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "SFG",
      "SFG1",
      "SFG1B"
    ]
  },
  {
    "objectID": "graphs/SFG1/sfg01.html",
    "href": "graphs/SFG1/sfg01.html",
    "title": "SFG1",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nWe will use the synthetic_cdisc_data$adtte data set from the scda package to create the survival forest graph. We start by filtering the adtte data set for the overall survival observations, converting time of overall survival to months, creating a new variable for event information, binarizing the ARM variable and creating a binned age variable by using the function cut_quantile_bins(). Note that we do not include the boundaries 0 and 1 in the corresponding cutoffs vector AGE_probs, but only the true cutoff probabilities to use (here 0.5, i.e. the median). We restrict the analysis of the biomarker variables BMRKR1 and BMRKR2 to the BEP by setting them as missing for the non-BEP.\nWe also relabel the biomarker evaluable population flag variable BEP01FL and the categorical biomarker variable BMRKR2 to update the display label of these variables in the graph.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nAGE_probs &lt;- 0.5\n\nadtte &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(\n    PARAMCD == \"OS\"\n  ) %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0,\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = \"B: Placebo\",\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    ),\n    AGE_BIN = cut_quantile_bins(AGE, probs = AGE_probs),\n    BMRKR1 = ifelse(BEP01FL == \"N\", NA, BMRKR1),\n    BMRKR2 = fct_explicit_na_if(BMRKR2, BEP01FL == \"N\")\n  ) %&gt;%\n  var_relabel(\n    BEP01FL = \"BEP\",\n    BMRKR2 = \"Biomarker (Categorical)\"\n  )\n\n\n\n\nWe use the extract_survival_subgroups() function to calculate the survival forest results for the subgroups defined by the levels of the factor variables given in subgroups. We then tabulate the estimated statistics with the function tabulate_survival_subgroups() to be able to use them as an input for forest plot. Note that for the argument vars we could select different statistics, but the statistics n_tot, hr and ci are required.\n\nCodetbl &lt;- extract_survival_subgroups(\n  variables = list(\n    tte = \"AVAL\",\n    is_event = \"is_event\",\n    arm = \"ARM_BIN\",\n    subgroups = c(\"BEP01FL\", \"BMRKR2\")\n  ),\n  label_all = \"ITT\",\n  data = adtte\n)\n\nresult &lt;- basic_table() %&gt;%\n  tabulate_survival_subgroups(\n    df = tbl,\n    vars = c(\"n_tot_events\", \"n\", \"n_events\", \"median\", \"hr\", \"ci\"),\n    time_unit = adtte$AVALU[1]\n  )\n\n\nWe can remove the last line showing the &lt;Missing&gt; category from the result table to display the survival forest plot only with non-missing categories for BMRKR2.\n\nCoderesult &lt;- result[-9, , keep_topleft = TRUE]\n\n\nWe can now produce the forest plot using the g_forest() function from tern based on this trimmed result table.\n\nCodeg_forest(result)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.3.9016       rtables_0.6.6.9010   \n[4] magrittr_2.0.3        formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.6-5      gtable_0.3.4      jsonlite_1.8.8    compiler_4.3.2   \n [5] tidyselect_1.2.0  tidyr_1.3.1       splines_4.3.2     scales_1.3.0     \n [9] yaml_2.3.8        fastmap_1.1.1     lattice_0.22-5    ggplot2_3.4.4    \n[13] R6_2.5.1          labeling_0.4.3    generics_0.1.3    knitr_1.45       \n[17] forcats_1.0.0     rbibutils_2.2.16  htmlwidgets_1.6.4 backports_1.4.1  \n[21] checkmate_2.3.1   tibble_3.2.1      munsell_0.5.0     scda_0.1.6.9016  \n[25] pillar_1.9.0      rlang_1.1.3       utf8_1.2.4        stringi_1.8.3    \n[29] broom_1.0.5       xfun_0.41         cli_3.6.2         withr_3.0.0      \n[33] Rdpack_2.6        digest_0.6.34     grid_4.3.2        cowplot_1.1.3    \n[37] lifecycle_1.0.4   vctrs_0.6.5       evaluate_0.23     glue_1.7.0       \n[41] farver_2.1.1      codetools_0.2-19  survival_3.5-7    fansi_1.0.6      \n[45] colorspace_2.1-0  rmarkdown_2.25    purrr_1.0.2       tools_4.3.2      \n[49] pkgconfig_2.0.3   htmltools_0.5.7  \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "SFG"
    ]
  },
  {
    "objectID": "graphs/kg03.html",
    "href": "graphs/kg03.html",
    "title": "KG3",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nThe same data set as in KG1A is used. The difference is that here we use the categorical biomarker variable BMRKR2 as the treatment arm in variables which is then used by g_km() below.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte_arm_bep &lt;- random.cdisc.data::cadtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"OS\", ARM == \"A: Drug X\", BEP01FL == \"Y\") %&gt;%\n  mutate(is_event = CNSR == 0)\n\nvariables &lt;- list(tte = \"AVAL\", is_event = \"is_event\", arm = \"BMRKR2\")\n\n\n\n\nWe can produce the basic plot using the g_km() function from tern.\n\nCodeg_km(\n  df = adtte_arm_bep,\n  variables = variables,\n  annot_surv_med = FALSE\n)\n\n\n\n\n\n\n\nWe can also choose to annotate the plot with the median survival time for each of the biomarker subgroups using the annot_surv_med = TRUE option.\n\nCodeg_km(\n  df = adtte_arm_bep,\n  variables = variables,\n  annot_surv_med = TRUE\n)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.4.0 (2024-04-24)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 22.04.4 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.4.9008       rtables_0.6.7.9002   \n[4] magrittr_2.0.3        formatters_0.5.6.9005\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.7-0                  gtable_0.3.5                 \n [3] jsonlite_1.8.8                compiler_4.4.0               \n [5] tidyselect_1.2.1              stringr_1.5.1                \n [7] tidyr_1.3.1                   splines_4.4.0                \n [9] scales_1.3.0                  yaml_2.3.8                   \n[11] fastmap_1.2.0                 lattice_0.22-6               \n[13] ggplot2_3.5.1                 R6_2.5.1                     \n[15] labeling_0.4.3                generics_0.1.3               \n[17] knitr_1.46                    forcats_1.0.0                \n[19] rbibutils_2.2.16              htmlwidgets_1.6.4            \n[21] backports_1.4.1               checkmate_2.3.1              \n[23] tibble_3.2.1                  munsell_0.5.1                \n[25] pillar_1.9.0                  rlang_1.1.3                  \n[27] utf8_1.2.4                    stringi_1.8.4                \n[29] broom_1.0.6                   xfun_0.44                    \n[31] cli_3.6.2                     withr_3.0.0                  \n[33] Rdpack_2.6                    digest_0.6.35                \n[35] grid_4.4.0                    cowplot_1.1.3                \n[37] lifecycle_1.0.4               vctrs_0.6.5                  \n[39] evaluate_0.23                 glue_1.7.0                   \n[41] farver_2.1.2                  codetools_0.2-20             \n[43] survival_3.6-4                random.cdisc.data_0.3.15.9004\n[45] fansi_1.0.6                   colorspace_2.1-0             \n[47] rmarkdown_2.27                purrr_1.0.2                  \n[49] tools_4.4.0                   pkgconfig_2.0.3              \n[51] htmltools_0.5.8.1            \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "KG",
      "KG3"
    ]
  },
  {
    "objectID": "graphs/SFG2/sfg02b.html",
    "href": "graphs/SFG2/sfg02b.html",
    "title": "SFG2B",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nWe prepare the data similarly as in SFG1. In particular we use again the cut_quantile_bins() function, here to obtain quartile bins of the continuous biomarker BMRKR1.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nBMRKR1_probs &lt;- c(0.25, 0.5, 0.75)\n\nadtte &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(\n    PARAMCD == \"OS\"\n  ) %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0,\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = c(\"B: Placebo\"),\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    ),\n    BMRKR1 = ifelse(BEP01FL == \"N\", NA, BMRKR1),\n    BMRKR1_BIN = explicit_na(cut_quantile_bins(BMRKR1, BMRKR1_probs)),\n    BMRKR2 = fct_explicit_na_if(BMRKR2, BEP01FL == \"N\")\n  ) %&gt;%\n  var_relabel(\n    BEP01FL = \"BEP\",\n    BMRKR2 = \"Biomarker (Categorical)\",\n    BMRKR1_BIN = \"Biomarker (Binned)\"\n  )\n\n\n\n\nIn this template we are looking for each percentage cutoff at above vs. below subgroups: So we just provide yet another groups_lists specification for the BMRKR1_BIN binned variable.\n\nCodeBMRKR1_BIN_levels &lt;- levels(adtte$BMRKR1_BIN)\n\ntbl &lt;- extract_survival_subgroups(\n  variables = list(\n    tte = \"AVAL\",\n    is_event = \"is_event\",\n    arm = \"ARM_BIN\",\n    subgroups = c(\"BEP01FL\", \"BMRKR1_BIN\")\n  ),\n  label_all = \"ITT\",\n  groups_lists = list(\n    BMRKR1_BIN = list(\n      \"[0%, 25%]\" = BMRKR1_BIN_levels[1],\n      \"(25%, 100%]\" = BMRKR1_BIN_levels[2:4],\n      \"[0%, 50%]\" = BMRKR1_BIN_levels[1:2],\n      \"(50%, 100%]\" = BMRKR1_BIN_levels[3:4],\n      \"[0%, 75%]\" = BMRKR1_BIN_levels[1:3],\n      \"(75%, 100%]\" = BMRKR1_BIN_levels[4]\n    )\n  ),\n  data = adtte\n)\n\nresult &lt;- basic_table() %&gt;%\n  tabulate_survival_subgroups(\n    df = tbl,\n    vars = c(\"n_tot_events\", \"n\", \"n_events\", \"median\", \"hr\", \"ci\"),\n    time_unit = adtte$AVALU[1]\n  )\n\n\nWe can now produce the forest plot using the g_forest() function.\n\nCodeg_forest(result)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.3.9016       rtables_0.6.6.9010   \n[4] magrittr_2.0.3        formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.6-5      gtable_0.3.4      jsonlite_1.8.8    compiler_4.3.2   \n [5] tidyselect_1.2.0  tidyr_1.3.1       splines_4.3.2     scales_1.3.0     \n [9] yaml_2.3.8        fastmap_1.1.1     lattice_0.22-5    ggplot2_3.4.4    \n[13] R6_2.5.1          labeling_0.4.3    generics_0.1.3    knitr_1.45       \n[17] forcats_1.0.0     rbibutils_2.2.16  htmlwidgets_1.6.4 backports_1.4.1  \n[21] checkmate_2.3.1   tibble_3.2.1      munsell_0.5.0     scda_0.1.6.9016  \n[25] pillar_1.9.0      rlang_1.1.3       utf8_1.2.4        stringi_1.8.3    \n[29] broom_1.0.5       xfun_0.41         cli_3.6.2         withr_3.0.0      \n[33] Rdpack_2.6        digest_0.6.34     grid_4.3.2        cowplot_1.1.3    \n[37] lifecycle_1.0.4   vctrs_0.6.5       evaluate_0.23     glue_1.7.0       \n[41] farver_2.1.1      codetools_0.2-19  survival_3.5-7    fansi_1.0.6      \n[45] colorspace_2.1-0  rmarkdown_2.25    purrr_1.0.2       tools_4.3.2      \n[49] pkgconfig_2.0.3   htmltools_0.5.7  \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "SFG",
      "SFG2",
      "SFG2B"
    ]
  },
  {
    "objectID": "graphs/SFG2/sfg02a.html",
    "href": "graphs/SFG2/sfg02a.html",
    "title": "SFG2A",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nWe prepare the data similarly as in SFG1. In particular we use again the cut_quantile_bins() function, here to obtain quartile bins of the continuous biomarker BMRKR1.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nBMRKR1_probs &lt;- c(0.25, 0.5, 0.75)\n\nadtte &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(\n    PARAMCD == \"OS\"\n  ) %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0,\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = c(\"B: Placebo\"),\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    ),\n    BMRKR1 = ifelse(BEP01FL == \"N\", NA, BMRKR1),\n    BMRKR1_BIN = explicit_na(cut_quantile_bins(BMRKR1, BMRKR1_probs)),\n    BMRKR2 = fct_explicit_na_if(BMRKR2, BEP01FL == \"N\")\n  ) %&gt;%\n  var_relabel(\n    BEP01FL = \"BEP\",\n    BMRKR2 = \"Biomarker (Categorical)\",\n    BMRKR1_BIN = \"Biomarker (Binned)\"\n  )\n\n\n\n\nWith a different groups_lists definition we can also tabulate statistics for the “below than cutoff” grouped bins.\n\nCodeBMRKR1_BIN_levels &lt;- levels(adtte$BMRKR1_BIN)\n\ntbl &lt;- extract_survival_subgroups(\n  variables = list(\n    tte = \"AVAL\",\n    is_event = \"is_event\",\n    arm = \"ARM_BIN\",\n    subgroups = c(\"BEP01FL\", \"BMRKR1_BIN\")\n  ),\n  label_all = \"ITT\",\n  groups_lists = list(\n    BMRKR1_BIN = list(\n      \"[0%,25%]\" = BMRKR1_BIN_levels[1],\n      \"[0%,50%]\" = BMRKR1_BIN_levels[1:2],\n      \"[0%,75%]\" = BMRKR1_BIN_levels[1:3]\n    )\n  ),\n  data = adtte\n)\n\nresult &lt;- basic_table() %&gt;%\n  tabulate_survival_subgroups(\n    df = tbl,\n    vars = c(\"n_tot_events\", \"n\", \"n_events\", \"median\", \"hr\", \"ci\"),\n    time_unit = adtte$AVALU[1]\n  )\n\n\nWe can now produce the forest plot using the g_forest() function.\n\nCodeg_forest(result)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.3.9016       rtables_0.6.6.9010   \n[4] magrittr_2.0.3        formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.6-5      gtable_0.3.4      jsonlite_1.8.8    compiler_4.3.2   \n [5] tidyselect_1.2.0  tidyr_1.3.1       splines_4.3.2     scales_1.3.0     \n [9] yaml_2.3.8        fastmap_1.1.1     lattice_0.22-5    ggplot2_3.4.4    \n[13] R6_2.5.1          labeling_0.4.3    generics_0.1.3    knitr_1.45       \n[17] forcats_1.0.0     rbibutils_2.2.16  htmlwidgets_1.6.4 backports_1.4.1  \n[21] checkmate_2.3.1   tibble_3.2.1      munsell_0.5.0     scda_0.1.6.9016  \n[25] pillar_1.9.0      rlang_1.1.3       utf8_1.2.4        stringi_1.8.3    \n[29] broom_1.0.5       xfun_0.41         cli_3.6.2         withr_3.0.0      \n[33] Rdpack_2.6        digest_0.6.34     grid_4.3.2        cowplot_1.1.3    \n[37] lifecycle_1.0.4   vctrs_0.6.5       evaluate_0.23     glue_1.7.0       \n[41] farver_2.1.1      codetools_0.2-19  survival_3.5-7    fansi_1.0.6      \n[45] colorspace_2.1-0  rmarkdown_2.25    purrr_1.0.2       tools_4.3.2      \n[49] pkgconfig_2.0.3   htmltools_0.5.7  \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "SFG",
      "SFG2",
      "SFG2A"
    ]
  },
  {
    "objectID": "graphs/SFG2/setup.html#setup",
    "href": "graphs/SFG2/setup.html#setup",
    "title": "",
    "section": "Setup",
    "text": "Setup\nWe prepare the data similarly as in SFG1. In particular we use again the cut_quantile_bins() function, here to obtain quartile bins of the continuous biomarker BMRKR1.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nBMRKR1_probs &lt;- c(0.25, 0.5, 0.75)\n\nadtte &lt;- random.cdisc.data::cadtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(\n    PARAMCD == \"OS\"\n  ) %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0,\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = c(\"B: Placebo\"),\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    ),\n    BMRKR1 = ifelse(BEP01FL == \"N\", NA, BMRKR1),\n    BMRKR1_BIN = explicit_na(cut_quantile_bins(BMRKR1, BMRKR1_probs)),\n    BMRKR2 = fct_explicit_na_if(BMRKR2, BEP01FL == \"N\")\n  ) %&gt;%\n  var_relabel(\n    BEP01FL = \"BEP\",\n    BMRKR2 = \"Biomarker (Categorical)\",\n    BMRKR1_BIN = \"Biomarker (Binned)\"\n  )"
  },
  {
    "objectID": "graphs/RG2/rg02.html",
    "href": "graphs/RG2/rg02.html",
    "title": "RG2",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nThe same setup as in RG1 is used.\nFor ggplot() used in all analyses, we add by = BMEASIFL in the aesthetics to support the calculation of proportions using geom_text(stat = \"prop\").\n\nCodelibrary(tern)\nlibrary(ggplot2.utils)\nlibrary(dplyr)\n\nadrs &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adrs %&gt;%\n  df_explicit_na() %&gt;%\n  mutate(AVALC = ordered(AVALC, levels = c(\"&lt;Missing&gt;\", \"NE\", \"PD\", \"SD\", \"PR\", \"CR\"))) %&gt;%\n  filter(PARAMCD == \"BESRSPI\", BMEASIFL == \"Y\")\n\n\n\n\nThe facet_grid() layer from ggplot2 can be used to plot response by treatment arm and the margins argument can be used to produce the (all) column.\n\nCodegraph &lt;- ggplot(adrs, aes(BMEASIFL, fill = AVALC, by = BMEASIFL)) +\n  geom_bar(aes(BMEASIFL), position = \"fill\") +\n  geom_text(stat = \"prop\", position = position_fill(.5)) +\n  scale_y_continuous(labels = scales::percent) +\n  ylab(\"%\") +\n  facet_grid(. ~ ARM, margins = TRUE)\n\ngraph\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           ggplot2.utils_0.3.1   ggplot2_3.4.4        \n[4] tern_0.9.3.9016       rtables_0.6.6.9010    magrittr_2.0.3       \n[7] formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.4        generics_0.1.3    tidyr_1.3.1       scda_0.1.6.9016  \n [5] EnvStats_2.8.1    lattice_0.22-5    digest_0.6.34     evaluate_0.23    \n [9] grid_4.3.2        fastmap_1.1.1     jsonlite_1.8.8    Matrix_1.6-5     \n[13] backports_1.4.1   survival_3.5-7    purrr_1.0.2       fansi_1.0.6      \n[17] viridisLite_0.4.2 scales_1.3.0      codetools_0.2-19  Rdpack_2.6       \n[21] cli_3.6.2         ggpp_0.5.6        rlang_1.1.3       rbibutils_2.2.16 \n[25] munsell_0.5.0     splines_4.3.2     withr_3.0.0       yaml_2.3.8       \n[29] tools_4.3.2       polynom_1.4-1     checkmate_2.3.1   colorspace_2.1-0 \n[33] forcats_1.0.0     ggstats_0.5.1     broom_1.0.5       vctrs_0.6.5      \n[37] R6_2.5.1          lifecycle_1.0.4   htmlwidgets_1.6.4 MASS_7.3-60.0.1  \n[41] pkgconfig_2.0.3   pillar_1.9.0      gtable_0.3.4      glue_1.7.0       \n[45] xfun_0.41         tibble_3.2.1      tidyselect_1.2.0  knitr_1.45       \n[49] farver_2.1.1      htmltools_0.5.7   labeling_0.4.3    rmarkdown_2.25   \n[53] compiler_4.3.2   \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "RG",
      "RG2"
    ]
  },
  {
    "objectID": "graphs/RG2/setup.html#setup",
    "href": "graphs/RG2/setup.html#setup",
    "title": "",
    "section": "Setup",
    "text": "Setup\nThe same setup as in RG1 is used.\nFor ggplot() used in all analyses, we add by = BMEASIFL in the aesthetics to support the calculation of proportions using geom_text(stat = \"prop\").\n\nCodelibrary(tern)\nlibrary(ggplot2.utils)\nlibrary(dplyr)\n\nadrs &lt;- random.cdisc.data::cadrs %&gt;%\n  df_explicit_na() %&gt;%\n  mutate(AVALC = ordered(AVALC, levels = c(\"&lt;Missing&gt;\", \"NE\", \"PD\", \"SD\", \"PR\", \"CR\"))) %&gt;%\n  filter(PARAMCD == \"BESRSPI\", BMEASIFL == \"Y\")"
  },
  {
    "objectID": "graphs/KG4/kg04.html",
    "href": "graphs/KG4/kg04.html",
    "title": "KG4",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nA setup similar to KG1 is used, with some additional data manipulation steps to first binarize the continuous biomarker and the treatment arm variables, and then combine both into a new interaction variable ARM_BMRKR2. Since we are using biomarker information, we filter on the biomarker evaluable population using the flag variable BEP01FL.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte &lt;- random.cdisc.data::cadtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"OS\" & BEP01FL == \"Y\") %&gt;%\n  mutate(\n    is_event = CNSR == 0,\n    BMRKR2_BIN = fct_collapse_only(\n      BMRKR2,\n      High = c(\"HIGH\"),\n      Low = c(\"MEDIUM\", \"LOW\")\n    ),\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = c(\"B: Placebo\"),\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    ),\n    ARM_BMRKR2 = interaction(ARM_BIN, BMRKR2_BIN)\n  )\n\nvariables &lt;- list(tte = \"AVAL\", is_event = \"is_event\", arm = \"ARM_BMRKR2\")\n\n\n\n\nWe can produce the basic graph using the g_km() function from tern.\n\nCodeg_km(\n  df = adtte,\n  variables = variables,\n  annot_surv_med = FALSE,\n  col = c(\"red\", \"blue\", \"red\", \"blue\"),\n  lty = c(1, 1, 2, 2)\n)\n\n\n\n\n\n\n\nWe can also choose to annotate the plot with the median survival time for each of the treatment arms using the annot_surv_med = TRUE option.\n\nCodeg_km(\n  df = adtte,\n  variables = variables,\n  annot_surv_med = TRUE,\n  col = c(\"red\", \"blue\", \"red\", \"blue\"),\n  lty = c(1, 1, 2, 2)\n)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.4.0 (2024-04-24)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 22.04.4 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.4.9008       rtables_0.6.7.9002   \n[4] magrittr_2.0.3        formatters_0.5.6.9005\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.7-0                  gtable_0.3.5                 \n [3] jsonlite_1.8.8                compiler_4.4.0               \n [5] tidyselect_1.2.1              stringr_1.5.1                \n [7] tidyr_1.3.1                   splines_4.4.0                \n [9] scales_1.3.0                  yaml_2.3.8                   \n[11] fastmap_1.2.0                 lattice_0.22-6               \n[13] ggplot2_3.5.1                 R6_2.5.1                     \n[15] labeling_0.4.3                generics_0.1.3               \n[17] knitr_1.46                    forcats_1.0.0                \n[19] rbibutils_2.2.16              htmlwidgets_1.6.4            \n[21] backports_1.4.1               checkmate_2.3.1              \n[23] tibble_3.2.1                  munsell_0.5.1                \n[25] pillar_1.9.0                  rlang_1.1.3                  \n[27] utf8_1.2.4                    stringi_1.8.4                \n[29] broom_1.0.6                   xfun_0.44                    \n[31] cli_3.6.2                     withr_3.0.0                  \n[33] Rdpack_2.6                    digest_0.6.35                \n[35] grid_4.4.0                    cowplot_1.1.3                \n[37] lifecycle_1.0.4               vctrs_0.6.5                  \n[39] evaluate_0.23                 glue_1.7.0                   \n[41] farver_2.1.2                  codetools_0.2-20             \n[43] survival_3.6-4                random.cdisc.data_0.3.15.9004\n[45] fansi_1.0.6                   colorspace_2.1-0             \n[47] rmarkdown_2.27                purrr_1.0.2                  \n[49] tools_4.4.0                   pkgconfig_2.0.3              \n[51] htmltools_0.5.8.1            \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "KG",
      "KG4"
    ]
  },
  {
    "objectID": "graphs/KG4/setup.html#setup",
    "href": "graphs/KG4/setup.html#setup",
    "title": "",
    "section": "Setup",
    "text": "Setup\nA setup similar to KG1 is used, with some additional data manipulation steps to first binarize the continuous biomarker and the treatment arm variables, and then combine both into a new interaction variable ARM_BMRKR2. Since we are using biomarker information, we filter on the biomarker evaluable population using the flag variable BEP01FL.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte &lt;- random.cdisc.data::cadtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"OS\" & BEP01FL == \"Y\") %&gt;%\n  mutate(\n    is_event = CNSR == 0,\n    BMRKR2_BIN = fct_collapse_only(\n      BMRKR2,\n      High = c(\"HIGH\"),\n      Low = c(\"MEDIUM\", \"LOW\")\n    ),\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = c(\"B: Placebo\"),\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    ),\n    ARM_BMRKR2 = interaction(ARM_BIN, BMRKR2_BIN)\n  )\n\nvariables &lt;- list(tte = \"AVAL\", is_event = \"is_event\", arm = \"ARM_BMRKR2\")"
  },
  {
    "objectID": "graphs/rnag03.html",
    "href": "graphs/rnag03.html",
    "title": "RNAG3",
    "section": "",
    "text": "Setup: Import, Filter and Normalize\nPrincipal Components Analysis\nPrincipal Components Plot\nCorrelation of Principal Components with Sample Variables\nTeal Module for PCA Graphs\nSession Info\n\n\n\nThis page can be used as a template of how to use the available hermes functions for principal components analysis and plots of RNAseq data sets.\nThe principal components analysis function uses HermesData as input. See RNAG1 for details.\n\nCodelibrary(hermes)\n\nobject &lt;- hermes_data %&gt;%\n  add_quality_flags() %&gt;%\n  filter() %&gt;%\n  normalize()\n\n\n\n\nOnce we have filtered out low quality genes and samples, and normalized the counts, we can perform principal components analysis of the gene counts across all samples using the calc_pca() function. The calc_pca() function uses by default the raw counts, unless otherwise specified in the assay_name argument of the function.\n\nCoderesult &lt;- calc_pca(object)\n\nresult_cpm &lt;- calc_pca(object, assay_name = \"cpm\")\n\n\n\n\nWe can then also plot these principal component results using the corresponding autoplot() method.\n\nCodeautoplot(result)\n\n\n\n\n\n\n\nThere are many different options for plotting. See ?autoplot.pca_common for the full details. Here some examples.\nWe can specify which principal components should be plotted against each other.\n\nCodeautoplot(result, x = 2, y = 3)\n\n\n\n\n\n\n\nWe can also include sample labels on the plot.\n\nCodeautoplot(result, label = TRUE)\n\n\n\n\n\n\n\nOr we can exclude the variance percentages from the axis labels.\n\nCodeautoplot(result, variance_percentage = FALSE)\n\n\n\n\n\n\n\nAs a last example, we can also color the points by a sample variable.\n\nCodeautoplot(result, data = as.data.frame(colData(object)), colour = \"COUNTRY\")\n\n\n\n\n\n\n\n\n\nWe can also calculate the correlation (in R2 values) between sample variables in HermesData and the principal components of these samples using correlate():\n\nCodecors &lt;- correlate(result, object)\n\n\nWe can then also plot these R2 values between sample variables and principal components again using the autoplot() method. Sample variables that have high correlation with major principal components can point to potential batch effects.\n\nCodeautoplot(cors)\n\n\n\n\n\n\n\nWe can also avoid reordering the principal components column.\n\nCodeautoplot(cors, cluster_columns = FALSE)\n\n\n\n\n\n\n\nWe can also update the color definitions of R2 values in the heatmap.\n\nCodeautoplot(cors,\n  cor_colors = circlize::colorRamp2(\n    breaks = c(-1, -0.5, 0, 0.5, 1),\n    colors = c(\"blue\", \"purple\", \"yellow\", \"orange\", \"red\")\n  )\n)\n\n\n\n\n\n\n\nSee ?pca_cor_samplevar for the detailed options.\n\n\nWe start by importing a MultiAssayExperiment; here we use the example multi_assay_experiment available in hermes. It is wrapped as a teal::dataset. We can then use the provided teal module tm_g_pca to include a PCA module in our teal app.\n\nCodelibrary(teal.modules.hermes)\n\ndata &lt;- teal_data()\ndata &lt;- within(data, {\n  library(hermes)\n  MAE &lt;- multi_assay_experiment\n})\ndatanames(data) &lt;- \"MAE\"\n\napp &lt;- init(\n  data = data,\n  modules = modules(\n    tm_g_pca(\n      label = \"pca\",\n      mae_name = \"MAE\"\n    )\n  )\n)\n\n[INFO] 2024-02-23 15:36:56.8591 pid:3107 token:[] teal.modules.hermes Initializing tm_g_pca\n\nCodeshinyApp(app$ui, app$server)\n\n[INFO] 2024-02-23 15:36:58.4277 pid:3107 token:[2df628c8] teal Initializing reporter_previewer_module\n\n\nWarning: 'experiments' dropped; see 'drops()'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] teal.modules.hermes_0.1.6.9003 teal_0.15.1.9000              \n [3] teal.slice_0.5.0.9003          teal.data_0.5.0.9000          \n [5] teal.code_0.5.0.9003           shiny_1.8.0                   \n [7] hermes_1.7.1.9000              SummarizedExperiment_1.32.0   \n [9] Biobase_2.62.0                 GenomicRanges_1.54.1          \n[11] GenomeInfoDb_1.38.5            IRanges_2.36.0                \n[13] S4Vectors_0.40.2               BiocGenerics_0.48.1           \n[15] MatrixGenerics_1.14.0          matrixStats_1.2.0             \n[17] ggfortify_0.4.16               ggplot2_3.4.4                 \n\nloaded via a namespace (and not attached):\n  [1] RColorBrewer_1.1-3          jsonlite_1.8.8             \n  [3] shape_1.4.6                 MultiAssayExperiment_1.28.0\n  [5] magrittr_2.0.3              magick_2.8.2               \n  [7] farver_2.1.1                rmarkdown_2.25             \n  [9] ragg_1.2.7                  GlobalOptions_0.1.2        \n [11] zlibbioc_1.48.0             vctrs_0.6.5                \n [13] memoise_2.0.1               RCurl_1.98-1.14            \n [15] webshot_0.5.5               BiocBaseUtils_1.5.0        \n [17] htmltools_0.5.7             S4Arrays_1.2.0             \n [19] forcats_1.0.0               progress_1.2.3             \n [21] curl_5.2.0                  SparseArray_1.2.3          \n [23] sass_0.4.8                  bslib_0.6.1                \n [25] fontawesome_0.5.2           htmlwidgets_1.6.4          \n [27] testthat_3.2.1              cachem_1.0.8               \n [29] teal.widgets_0.4.2.9005     mime_0.12                  \n [31] lifecycle_1.0.4             iterators_1.0.14           \n [33] pkgconfig_2.0.3             webshot2_0.1.1             \n [35] Matrix_1.6-5                R6_2.5.1                   \n [37] fastmap_1.1.1               GenomeInfoDbData_1.2.11    \n [39] rbibutils_2.2.16            clue_0.3-65                \n [41] digest_0.6.34               colorspace_2.1-0           \n [43] shinycssloaders_1.0.0       ps_1.7.6                   \n [45] AnnotationDbi_1.64.1        DESeq2_1.42.0              \n [47] textshaping_0.3.7           crosstalk_1.2.1            \n [49] RSQLite_2.3.5               filelock_1.0.3             \n [51] labeling_0.4.3              fansi_1.0.6                \n [53] httr_1.4.7                  abind_1.4-5                \n [55] compiler_4.3.2              bit64_4.0.5                \n [57] withr_3.0.0                 doParallel_1.0.17          \n [59] backports_1.4.1             BiocParallel_1.36.0        \n [61] DBI_1.2.1                   logger_0.2.2               \n [63] biomaRt_2.58.0              rappdirs_0.3.3             \n [65] DelayedArray_0.28.0         rjson_0.2.21               \n [67] chromote_0.1.2              tools_4.3.2                \n [69] httpuv_1.6.13               glue_1.7.0                 \n [71] callr_3.7.3                 promises_1.2.1             \n [73] grid_4.3.2                  checkmate_2.3.1            \n [75] cluster_2.1.6               generics_0.1.3             \n [77] gtable_0.3.4                websocket_1.4.1            \n [79] tidyr_1.3.1                 hms_1.1.3                  \n [81] xml2_1.3.6                  utf8_1.2.4                 \n [83] XVector_0.42.0              ggrepel_0.9.5              \n [85] foreach_1.5.2               pillar_1.9.0               \n [87] stringr_1.5.1               limma_3.58.1               \n [89] later_1.3.2                 circlize_0.4.15            \n [91] dplyr_1.1.4                 BiocFileCache_2.10.1       \n [93] lattice_0.22-5              bit_4.0.5                  \n [95] tidyselect_1.2.0            ComplexHeatmap_2.18.0      \n [97] locfit_1.5-9.8              Biostrings_2.70.1          \n [99] knitr_1.45                  gridExtra_2.3              \n[101] teal.logger_0.1.3.9011      edgeR_4.0.12               \n[103] xfun_0.41                   statmod_1.5.0              \n[105] brio_1.1.4                  DT_0.31                    \n[107] stringi_1.8.3               yaml_2.3.8                 \n[109] shinyWidgets_0.8.1          evaluate_0.23              \n[111] codetools_0.2-19            tibble_3.2.1               \n[113] cli_3.6.2                   systemfonts_1.0.5          \n[115] xtable_1.8-4                Rdpack_2.6                 \n[117] processx_3.8.3              jquerylib_0.1.4            \n[119] munsell_0.5.0               teal.reporter_0.3.0.9003   \n[121] Rcpp_1.0.12                 dbplyr_2.4.0               \n[123] png_0.1-8                   XML_3.99-0.16.1            \n[125] parallel_4.3.2              ellipsis_0.3.2             \n[127] assertthat_0.2.1            blob_1.2.4                 \n[129] prettyunits_1.2.0           bitops_1.0-7               \n[131] scales_1.3.0                purrr_1.0.2                \n[133] crayon_1.5.2                GetoptLong_1.0.5           \n[135] rlang_1.1.3                 formatR_1.14               \n[137] KEGGREST_1.42.0             shinyjs_2.1.0              \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "RNAG",
      "RNAG3"
    ]
  },
  {
    "objectID": "graphs/spg01.html",
    "href": "graphs/spg01.html",
    "title": "SPG1",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nWe will use the cadtte data set from the random.cdisc.data package to create the STEP survival graph. We start by filtering the adtte data set for the overall survival observations, converting time of overall survival to months, creating a new variable for event information, binarizing the ARM variable, and discarding BMRKR1 values for the non-BEP. We also relabel the biomarker evaluable population flag variable BEP01FL.\n\nCodelibrary(tern)\nlibrary(ggplot2.utils)\nlibrary(dplyr)\n\nadtte &lt;- random.cdisc.data::cadtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(\n    PARAMCD == \"OS\"\n  ) %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0,\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = c(\"B: Placebo\"),\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    ),\n    BMRKR1 = ifelse(BEP01FL == \"N\", NA, BMRKR1)\n  ) %&gt;%\n  var_relabel(\n    BEP01FL = \"BEP\"\n  )\n\n\n\n\nWe then perform with the fit_survival_step() function the required calculations: this function fits the Subgroup Treatment Effect Pattern (STEP) models for the survival outcome within each of the percentile intervals of the biomarker variable defining the subgroups. The treatment arm variable must have exactly two levels, where the first one is taken as reference, i.e. the estimated hazard ratios are for the comparison of the second level vs. the first one.\nIn this example we fit the default model where a constant treatment effect is estimated in each of the subgroups that are created according to biomarker quantiles.\n\nCodevars &lt;- list(\n  time = \"AVAL\",\n  event = \"is_event\",\n  arm = \"ARM_BIN\",\n  biomarker = \"BMRKR1\"\n)\n\nstep_matrix &lt;- fit_survival_step(\n  variables = vars,\n  data = adtte\n)\n\n\nIn this second example we fit instead a model with quadratic biomarker interaction term and we control the number of points at which the hazard ratios are estimated.\n\nCodestep_matrix &lt;- fit_survival_step(\n  variables = vars,\n  data = adtte,\n  control = c(control_coxph(), control_step(degree = 2, num_points = 15L))\n)\n\n\nBefore we can plot the data, the broom::tidy() method needs to be applied to the STEP result to obtain graph ready data. Thereafter with the g_step() function we can create a graph showing the estimated HR along the continuous biomarker subgroups.\n\nCodestep_data &lt;- broom::tidy(step_matrix)\n\ngraph &lt;- g_step(step_data)\n\ngraph\n\n\n\n\n\n\n\nWe can also add a reference line.\n\nCodegraph +\n  geom_hline(aes(yintercept = 1), linetype = 2)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.4.0 (2024-04-24)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 22.04.4 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           ggplot2.utils_0.3.1   ggplot2_3.5.1        \n[4] tern_0.9.4.9008       rtables_0.6.7.9002    magrittr_2.0.3       \n[7] formatters_0.5.6.9005\n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.4                    generics_0.1.3               \n [3] tidyr_1.3.1                   EnvStats_2.8.1               \n [5] stringi_1.8.4                 lattice_0.22-6               \n [7] digest_0.6.35                 evaluate_0.23                \n [9] grid_4.4.0                    fastmap_1.2.0                \n[11] jsonlite_1.8.8                Matrix_1.7-0                 \n[13] backports_1.4.1               survival_3.6-4               \n[15] purrr_1.0.2                   fansi_1.0.6                  \n[17] scales_1.3.0                  codetools_0.2-20             \n[19] Rdpack_2.6                    cli_3.6.2                    \n[21] ggpp_0.5.7                    rlang_1.1.3                  \n[23] rbibutils_2.2.16              munsell_0.5.1                \n[25] splines_4.4.0                 withr_3.0.0                  \n[27] yaml_2.3.8                    tools_4.4.0                  \n[29] polynom_1.4-1                 checkmate_2.3.1              \n[31] colorspace_2.1-0              forcats_1.0.0                \n[33] ggstats_0.6.0                 broom_1.0.6                  \n[35] vctrs_0.6.5                   R6_2.5.1                     \n[37] lifecycle_1.0.4               stringr_1.5.1                \n[39] htmlwidgets_1.6.4             MASS_7.3-60.2                \n[41] pkgconfig_2.0.3               pillar_1.9.0                 \n[43] gtable_0.3.5                  glue_1.7.0                   \n[45] xfun_0.44                     tibble_3.2.1                 \n[47] tidyselect_1.2.1              knitr_1.46                   \n[49] farver_2.1.2                  htmltools_0.5.8.1            \n[51] labeling_0.4.3                rmarkdown_2.27               \n[53] random.cdisc.data_0.3.15.9004 compiler_4.4.0               \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "SPG"
    ]
  },
  {
    "objectID": "graphs/RFG2/rfg02b.html",
    "href": "graphs/RFG2/rfg02b.html",
    "title": "RFG2B",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nThese templates are helpful when we are interested in modelling the effects of continuous biomarker variables on the binary response outcome, conditional on covariates and/or stratification variables included in (conditional) logistic regression models. We would like to assess how the estimates effects change when we look at different subgroups.\nIn detail the differences to RFG1 are the following:\n\nThe extract_rsp_subgroups() and tabulate_rsp_subgroups() functions used in RFG1 evaluate the treatment effects from two arms, across subgroups. On the other hand, the extract_rsp_biomarkers() and tabulate_rsp_biomarkers() functions used here in RFG2 evaluate the effects from continuous biomarkers on the probability for response.\nThe extract_rsp_subgroups() and tabulate_rsp_subgroups() functions only allow specification of a single treatment arm variable, while the extract_rsp_biomarkers() and tabulate_rsp_biomarkers() allow to look at multiple continuous biomarker variables at once.\nIn addition to the treatment arms, the use of extract_rsp_subgroups() and tabulate_rsp_subgroups() functions can be extended to other binary variables. For example, we could define the binarized ARM variable as AGE&gt;=65 vs. AGE&lt;65 and then look at the odds ratios across subgroups. For the extract_rsp_biomarkers() and tabulate_rsp_biomarkers() functions, we could use the original continuous biomarker variable AGE, and then look at the estimated effect across subgroups.\n\nSimilarly like in RFG1, we will use the synthetic_cdisc_data$adrs data set from the scda package. Here we just filter for the Best Confirmed Overall Response by Investigator and patients with measurable disease at baseline, and define a new variable COMPRESP to include complete responses only.\n\nCodelibrary(tern)\nlibrary(dplyr)\nlibrary(hermes)\n\nadrs &lt;- scda::synthetic_cdisc_data(\"latest\")$adrs\n\nadrs_f &lt;- adrs %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"BESRSPI\", BMEASIFL == \"Y\") %&gt;%\n  mutate(COMPRESP = (AVALC == \"CR\"))\n\n\n\n\nIt is also possible to join and select subgroup categories manually using the groups_lists argument, as follows.\n\nCodedf &lt;- extract_rsp_biomarkers(\n  variables = list(\n    rsp = \"COMPRESP\",\n    biomarkers = c(\"BMRKR1\", \"AGE\"),\n    covariates = \"SEX\",\n    subgroups = \"BMRKR2\"\n  ),\n  data = adrs_f,\n  groups_list = list(\n    BMRKR2 = list(\n      one = c(\"LOW\", \"MEDIUM\"),\n      two = \"HIGH\"\n    )\n  )\n)\n\nresult &lt;- tabulate_rsp_biomarkers(df, vars = c(\"n_tot\", \"n_rsp\", \"prop\", \"or\", \"ci\"))\ng_forest(result, xlim = c(0.7, 1.4))\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] hermes_1.7.1.9000           SummarizedExperiment_1.32.0\n [3] Biobase_2.62.0              GenomicRanges_1.54.1       \n [5] GenomeInfoDb_1.38.5         IRanges_2.36.0             \n [7] S4Vectors_0.40.2            BiocGenerics_0.48.1        \n [9] MatrixGenerics_1.14.0       matrixStats_1.2.0          \n[11] ggfortify_0.4.16            ggplot2_3.4.4              \n[13] dplyr_1.1.4                 tern_0.9.3.9016            \n[15] rtables_0.6.6.9010          magrittr_2.0.3             \n[17] formatters_0.5.5.9010      \n\nloaded via a namespace (and not attached):\n  [1] Rdpack_2.6                  DBI_1.2.1                  \n  [3] bitops_1.0-7                gridExtra_2.3              \n  [5] biomaRt_2.58.0              rlang_1.1.3                \n  [7] clue_0.3-65                 GetoptLong_1.0.5           \n  [9] compiler_4.3.2              RSQLite_2.3.5              \n [11] png_0.1-8                   vctrs_0.6.5                \n [13] stringr_1.5.1               pkgconfig_2.0.3            \n [15] shape_1.4.6                 crayon_1.5.2               \n [17] fastmap_1.1.1               dbplyr_2.4.0               \n [19] backports_1.4.1             XVector_0.42.0             \n [21] labeling_0.4.3              utf8_1.2.4                 \n [23] rmarkdown_2.25              purrr_1.0.2                \n [25] bit_4.0.5                   xfun_0.41                  \n [27] MultiAssayExperiment_1.28.0 scda_0.1.6.9016            \n [29] zlibbioc_1.48.0             cachem_1.0.8               \n [31] jsonlite_1.8.8              progress_1.2.3             \n [33] blob_1.2.4                  DelayedArray_0.28.0        \n [35] prettyunits_1.2.0           broom_1.0.5                \n [37] parallel_4.3.2              cluster_2.1.6              \n [39] R6_2.5.1                    stringi_1.8.3              \n [41] RColorBrewer_1.1-3          Rcpp_1.0.12                \n [43] assertthat_0.2.1            iterators_1.0.14           \n [45] knitr_1.45                  Matrix_1.6-5               \n [47] splines_4.3.2               tidyselect_1.2.0           \n [49] abind_1.4-5                 yaml_2.3.8                 \n [51] doParallel_1.0.17           codetools_0.2-19           \n [53] curl_5.2.0                  lattice_0.22-5             \n [55] tibble_3.2.1                withr_3.0.0                \n [57] KEGGREST_1.42.0             evaluate_0.23              \n [59] survival_3.5-7              BiocFileCache_2.10.1       \n [61] xml2_1.3.6                  Biostrings_2.70.1          \n [63] circlize_0.4.15             filelock_1.0.3             \n [65] pillar_1.9.0                checkmate_2.3.1            \n [67] foreach_1.5.2               generics_0.1.3             \n [69] RCurl_1.98-1.14             hms_1.1.3                  \n [71] munsell_0.5.0               scales_1.3.0               \n [73] glue_1.7.0                  tools_4.3.2                \n [75] forcats_1.0.0               XML_3.99-0.16.1            \n [77] cowplot_1.1.3               grid_4.3.2                 \n [79] tidyr_1.3.1                 rbibutils_2.2.16           \n [81] AnnotationDbi_1.64.1        colorspace_2.1-0           \n [83] GenomeInfoDbData_1.2.11     cli_3.6.2                  \n [85] rappdirs_0.3.3              fansi_1.0.6                \n [87] S4Arrays_1.2.0              ComplexHeatmap_2.18.0      \n [89] gtable_0.3.4                digest_0.6.34              \n [91] SparseArray_1.2.3           ggrepel_0.9.5              \n [93] farver_2.1.1                rjson_0.2.21               \n [95] htmlwidgets_1.6.4           memoise_2.0.1              \n [97] htmltools_0.5.7             lifecycle_1.0.4            \n [99] httr_1.4.7                  GlobalOptions_0.1.2        \n[101] bit64_4.0.5                \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "RFG",
      "RFG2",
      "RFG2B"
    ]
  },
  {
    "objectID": "graphs/RFG2/rfg02a.html",
    "href": "graphs/RFG2/rfg02a.html",
    "title": "RFG2A",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nThese templates are helpful when we are interested in modelling the effects of continuous biomarker variables on the binary response outcome, conditional on covariates and/or stratification variables included in (conditional) logistic regression models. We would like to assess how the estimates effects change when we look at different subgroups.\nIn detail the differences to RFG1 are the following:\n\nThe extract_rsp_subgroups() and tabulate_rsp_subgroups() functions used in RFG1 evaluate the treatment effects from two arms, across subgroups. On the other hand, the extract_rsp_biomarkers() and tabulate_rsp_biomarkers() functions used here in RFG2 evaluate the effects from continuous biomarkers on the probability for response.\nThe extract_rsp_subgroups() and tabulate_rsp_subgroups() functions only allow specification of a single treatment arm variable, while the extract_rsp_biomarkers() and tabulate_rsp_biomarkers() allow to look at multiple continuous biomarker variables at once.\nIn addition to the treatment arms, the use of extract_rsp_subgroups() and tabulate_rsp_subgroups() functions can be extended to other binary variables. For example, we could define the binarized ARM variable as AGE&gt;=65 vs. AGE&lt;65 and then look at the odds ratios across subgroups. For the extract_rsp_biomarkers() and tabulate_rsp_biomarkers() functions, we could use the original continuous biomarker variable AGE, and then look at the estimated effect across subgroups.\n\nSimilarly like in RFG1, we will use the synthetic_cdisc_data$adrs data set from the scda package. Here we just filter for the Best Confirmed Overall Response by Investigator and patients with measurable disease at baseline, and define a new variable COMPRESP to include complete responses only.\n\nCodelibrary(tern)\nlibrary(dplyr)\nlibrary(hermes)\n\nadrs &lt;- scda::synthetic_cdisc_data(\"latest\")$adrs\n\nadrs_f &lt;- adrs %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"BESRSPI\", BMEASIFL == \"Y\") %&gt;%\n  mutate(COMPRESP = (AVALC == \"CR\"))\n\n\n\n\nHere we specify that we would like to analyze the two continuous biomarkers BMRKR1 and AGE, conditional on the covariate SEX, in the subgroups defined by the levels of BMRKR2.\n\nCodedf &lt;- extract_rsp_biomarkers(\n  variables = list(\n    rsp = \"COMPRESP\",\n    biomarkers = c(\"BMRKR1\", \"AGE\"),\n    covariates = \"SEX\",\n    subgroups = \"BMRKR2\"\n  ),\n  data = adrs_f\n)\n\nresult &lt;- tabulate_rsp_biomarkers(df, vars = c(\"n_tot\", \"n_rsp\", \"prop\", \"or\", \"ci\"))\n\n\nWe can look at the result in the console already.\n\nCoderesult\n\n                                  Total n   Responders   Response (%)   Odds Ratio      95% CI   \n—————————————————————————————————————————————————————————————————————————————————————————————————\nAge                                                                                              \n  All Patients                      203        165          81.3%          1.01      (0.96, 1.06)\n  Categorical Level Biomarker 2                                                                  \n    LOW                             74          64          86.5%          1.07      (0.96, 1.18)\n    MEDIUM                          65          49          75.4%          1.04      (0.95, 1.15)\n    HIGH                            64          52          81.2%          0.92      (0.84, 1.01)\nContinuous Level Biomarker 1                                                                     \n  All Patients                      203        165          81.3%          1.02      (0.91, 1.14)\n  Categorical Level Biomarker 2                                                                  \n    LOW                             74          64          86.5%          1.05      (0.83, 1.33)\n    MEDIUM                          65          49          75.4%          1.00      (0.85, 1.18)\n    HIGH                            64          52          81.2%          1.05      (0.84, 1.31)\n\n\nNote that in addition to the Categorical Level Biomarker 2 subgroups we automatically also get the estimates for the overall patient population.\nWe can then produce the final forest plot using the g_forest() function on this tabular result.\n\nCodeg_forest(result, xlim = c(0.7, 1.4))\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] hermes_1.7.1.9000           SummarizedExperiment_1.32.0\n [3] Biobase_2.62.0              GenomicRanges_1.54.1       \n [5] GenomeInfoDb_1.38.5         IRanges_2.36.0             \n [7] S4Vectors_0.40.2            BiocGenerics_0.48.1        \n [9] MatrixGenerics_1.14.0       matrixStats_1.2.0          \n[11] ggfortify_0.4.16            ggplot2_3.4.4              \n[13] dplyr_1.1.4                 tern_0.9.3.9016            \n[15] rtables_0.6.6.9010          magrittr_2.0.3             \n[17] formatters_0.5.5.9010      \n\nloaded via a namespace (and not attached):\n  [1] Rdpack_2.6                  DBI_1.2.1                  \n  [3] bitops_1.0-7                gridExtra_2.3              \n  [5] biomaRt_2.58.0              rlang_1.1.3                \n  [7] clue_0.3-65                 GetoptLong_1.0.5           \n  [9] compiler_4.3.2              RSQLite_2.3.5              \n [11] png_0.1-8                   vctrs_0.6.5                \n [13] stringr_1.5.1               pkgconfig_2.0.3            \n [15] shape_1.4.6                 crayon_1.5.2               \n [17] fastmap_1.1.1               dbplyr_2.4.0               \n [19] backports_1.4.1             XVector_0.42.0             \n [21] labeling_0.4.3              utf8_1.2.4                 \n [23] rmarkdown_2.25              purrr_1.0.2                \n [25] bit_4.0.5                   xfun_0.41                  \n [27] MultiAssayExperiment_1.28.0 scda_0.1.6.9016            \n [29] zlibbioc_1.48.0             cachem_1.0.8               \n [31] jsonlite_1.8.8              progress_1.2.3             \n [33] blob_1.2.4                  DelayedArray_0.28.0        \n [35] prettyunits_1.2.0           broom_1.0.5                \n [37] parallel_4.3.2              cluster_2.1.6              \n [39] R6_2.5.1                    stringi_1.8.3              \n [41] RColorBrewer_1.1-3          Rcpp_1.0.12                \n [43] assertthat_0.2.1            iterators_1.0.14           \n [45] knitr_1.45                  Matrix_1.6-5               \n [47] splines_4.3.2               tidyselect_1.2.0           \n [49] abind_1.4-5                 yaml_2.3.8                 \n [51] doParallel_1.0.17           codetools_0.2-19           \n [53] curl_5.2.0                  lattice_0.22-5             \n [55] tibble_3.2.1                withr_3.0.0                \n [57] KEGGREST_1.42.0             evaluate_0.23              \n [59] survival_3.5-7              BiocFileCache_2.10.1       \n [61] xml2_1.3.6                  Biostrings_2.70.1          \n [63] circlize_0.4.15             filelock_1.0.3             \n [65] pillar_1.9.0                checkmate_2.3.1            \n [67] foreach_1.5.2               generics_0.1.3             \n [69] RCurl_1.98-1.14             hms_1.1.3                  \n [71] munsell_0.5.0               scales_1.3.0               \n [73] glue_1.7.0                  tools_4.3.2                \n [75] forcats_1.0.0               XML_3.99-0.16.1            \n [77] cowplot_1.1.3               grid_4.3.2                 \n [79] tidyr_1.3.1                 rbibutils_2.2.16           \n [81] AnnotationDbi_1.64.1        colorspace_2.1-0           \n [83] GenomeInfoDbData_1.2.11     cli_3.6.2                  \n [85] rappdirs_0.3.3              fansi_1.0.6                \n [87] S4Arrays_1.2.0              ComplexHeatmap_2.18.0      \n [89] gtable_0.3.4                digest_0.6.34              \n [91] SparseArray_1.2.3           ggrepel_0.9.5              \n [93] farver_2.1.1                rjson_0.2.21               \n [95] htmlwidgets_1.6.4           memoise_2.0.1              \n [97] htmltools_0.5.7             lifecycle_1.0.4            \n [99] httr_1.4.7                  GlobalOptions_0.1.2        \n[101] bit64_4.0.5                \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "RFG",
      "RFG2"
    ]
  },
  {
    "objectID": "graphs/rnag08.html",
    "href": "graphs/rnag08.html",
    "title": "RNAG8",
    "section": "",
    "text": "Setup: Import, Filter and Normalize\nScatterplot for Gene Expression Values\nScatterplot for Gene Signatures\nAdditional Options for Customization\nTeal Module for Scatterplot\nSession Info\n\n\n\nThis page can be used as a template of how to use the available hermes functions to produce a scatterplot of two genes or gene signatures and to create an interactive scatterplot for RNA-seq gene expression analysis using teal.modules.hermes.\nThe draw_scatterplot() function used below needs HermesData as input. See RNAG1 for details on how to import, filter and normalize HermesData.\n\nCodelibrary(hermes)\nobject &lt;- hermes_data %&gt;%\n  add_quality_flags() %&gt;%\n  filter() %&gt;%\n  normalize()\n\n\n\n\nWe can create scatterplots for gene expression values by providing a gene in the gene_spec (gene specification) as follows.\n\nCodedraw_scatterplot(\n  object = object,\n  assay_name = \"counts\",\n  x_spec = gene_spec(genes(object)[1]),\n  y_spec = gene_spec(genes(object)[2])\n)\n\n\n\n\n\n\n\n\n\nWe can also specify a gene summary function for multiple genes, thereby using the corresponding gene signature. Note that we use the first 10 genes and the next 10 genes from the object without explicitly specifying the gene IDs, and this can be done through the genes() function in hermes.\n\nCodedraw_scatterplot(\n  object = object,\n  assay_name = \"counts\",\n  x_spec = gene_spec(\n    genes(object)[1:10],\n    fun = colMeans,\n    fun_name = \"Mean\"\n  ),\n  y_spec = gene_spec(\n    genes(object)[11:20],\n    fun = colMedians,\n    fun_name = \"Median\"\n  ),\n)\n\n\n\n\n\n\n\n\n\nIt is also possible to pass additional arguments to the function draw_scatterplot(), e.g. if we wish to specify an optional faceting variable, optional color variable or specific smoothing method. See ?hermes::draw_scatterplot() for details about the additional parameters available.\n\nCodedraw_scatterplot(\n  object = object,\n  assay_name = \"tpm\",\n  x_spec = gene_spec(\n    genes(object)[1:10],\n    fun = colMeans,\n    fun_name = \"Mean\"\n  ),\n  y_spec = gene_spec(\n    genes(object)[11:20],\n    fun = colMedians,\n    fun_name = \"Median\"\n  ),\n  color = \"RACE\"\n)\n\n\n\n\n\n\n\n\nCodedraw_scatterplot(\n  object = object,\n  assay_name = \"tpm\",\n  x_spec = gene_spec(\n    genes(object)[1:10],\n    fun = colMeans,\n    fun_name = \"Mean\"\n  ),\n  y_spec = gene_spec(\n    genes(object)[11:20],\n    fun = colMedians,\n    fun_name = \"Median\"\n  ),\n  facet_var = \"SEX\"\n)\n\n\n\n\n\n\n\n\nCodedraw_scatterplot(\n  object = object,\n  assay_name = \"tpm\",\n  x_spec = gene_spec(\n    genes(object)[1:10],\n    fun = colMeans,\n    fun_name = \"Mean\"\n  ),\n  y_spec = gene_spec(\n    genes(object)[11:20],\n    fun = colMedians,\n    fun_name = \"Median\"\n  ),\n  smooth_method = \"loess\"\n)\n\n\n\n\n\n\n\n\n\nWe start by importing a MultiAssayExperiment; here we use the example multi_assay_experiment available in hermes. It is wrapped as a teal::dataset. We can then use the provided teal module tm_g_scatterplot to have add a scatterplot module in our teal app.\n\nCodelibrary(teal.modules.hermes)\n\ndata &lt;- teal_data()\ndata &lt;- within(data, {\n  library(hermes)\n  MAE &lt;- multi_assay_experiment\n})\ndatanames(data) &lt;- \"MAE\"\n\napp &lt;- init(\n  data = data,\n  modules = modules(\n    tm_g_scatterplot(\n      label = \"scatterplot\",\n      mae_name = \"MAE\"\n    )\n  )\n)\n\n[INFO] 2024-02-23 15:46:34.5024 pid:10033 token:[] teal.modules.hermes Initializing tm_g_scatterplot\n\nCodeshinyApp(app$ui, app$server)\n\n[INFO] 2024-02-23 15:46:36.0879 pid:10033 token:[a5912cf3] teal Initializing reporter_previewer_module\n\n\nWarning: 'experiments' dropped; see 'drops()'\n\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] teal.modules.hermes_0.1.6.9003 teal_0.15.1.9000              \n [3] teal.slice_0.5.0.9003          teal.data_0.5.0.9000          \n [5] teal.code_0.5.0.9003           shiny_1.8.0                   \n [7] hermes_1.7.1.9000              SummarizedExperiment_1.32.0   \n [9] Biobase_2.62.0                 GenomicRanges_1.54.1          \n[11] GenomeInfoDb_1.38.5            IRanges_2.36.0                \n[13] S4Vectors_0.40.2               BiocGenerics_0.48.1           \n[15] MatrixGenerics_1.14.0          matrixStats_1.2.0             \n[17] ggfortify_0.4.16               ggplot2_3.4.4                 \n\nloaded via a namespace (and not attached):\n  [1] RColorBrewer_1.1-3          jsonlite_1.8.8             \n  [3] shape_1.4.6                 MultiAssayExperiment_1.28.0\n  [5] magrittr_2.0.3              farver_2.1.1               \n  [7] rmarkdown_2.25              GlobalOptions_0.1.2        \n  [9] zlibbioc_1.48.0             vctrs_0.6.5                \n [11] memoise_2.0.1               RCurl_1.98-1.14            \n [13] webshot_0.5.5               BiocBaseUtils_1.5.0        \n [15] htmltools_0.5.7             S4Arrays_1.2.0             \n [17] forcats_1.0.0               progress_1.2.3             \n [19] curl_5.2.0                  SparseArray_1.2.3          \n [21] sass_0.4.8                  bslib_0.6.1                \n [23] fontawesome_0.5.2           htmlwidgets_1.6.4          \n [25] testthat_3.2.1              cachem_1.0.8               \n [27] teal.widgets_0.4.2.9005     mime_0.12                  \n [29] lifecycle_1.0.4             iterators_1.0.14           \n [31] pkgconfig_2.0.3             webshot2_0.1.1             \n [33] Matrix_1.6-5                R6_2.5.1                   \n [35] fastmap_1.1.1               GenomeInfoDbData_1.2.11    \n [37] rbibutils_2.2.16            clue_0.3-65                \n [39] digest_0.6.34               colorspace_2.1-0           \n [41] shinycssloaders_1.0.0       ps_1.7.6                   \n [43] AnnotationDbi_1.64.1        DESeq2_1.42.0              \n [45] RSQLite_2.3.5               filelock_1.0.3             \n [47] labeling_0.4.3              fansi_1.0.6                \n [49] httr_1.4.7                  abind_1.4-5                \n [51] mgcv_1.9-1                  compiler_4.3.2             \n [53] bit64_4.0.5                 withr_3.0.0                \n [55] doParallel_1.0.17           backports_1.4.1            \n [57] BiocParallel_1.36.0         DBI_1.2.1                  \n [59] logger_0.2.2                biomaRt_2.58.0             \n [61] rappdirs_0.3.3              DelayedArray_0.28.0        \n [63] rjson_0.2.21                chromote_0.1.2             \n [65] tools_4.3.2                 httpuv_1.6.13              \n [67] glue_1.7.0                  callr_3.7.3                \n [69] nlme_3.1-164                promises_1.2.1             \n [71] grid_4.3.2                  checkmate_2.3.1            \n [73] cluster_2.1.6               generics_0.1.3             \n [75] gtable_0.3.4                websocket_1.4.1            \n [77] tidyr_1.3.1                 hms_1.1.3                  \n [79] xml2_1.3.6                  utf8_1.2.4                 \n [81] XVector_0.42.0              ggrepel_0.9.5              \n [83] foreach_1.5.2               pillar_1.9.0               \n [85] stringr_1.5.1               limma_3.58.1               \n [87] later_1.3.2                 circlize_0.4.15            \n [89] splines_4.3.2               dplyr_1.1.4                \n [91] BiocFileCache_2.10.1        lattice_0.22-5             \n [93] bit_4.0.5                   tidyselect_1.2.0           \n [95] ComplexHeatmap_2.18.0       locfit_1.5-9.8             \n [97] Biostrings_2.70.1           knitr_1.45                 \n [99] gridExtra_2.3               teal.logger_0.1.3.9011     \n[101] edgeR_4.0.12                xfun_0.41                  \n[103] statmod_1.5.0               brio_1.1.4                 \n[105] stringi_1.8.3               yaml_2.3.8                 \n[107] shinyWidgets_0.8.1          evaluate_0.23              \n[109] codetools_0.2-19            tibble_3.2.1               \n[111] cli_3.6.2                   xtable_1.8-4               \n[113] Rdpack_2.6                  processx_3.8.3             \n[115] jquerylib_0.1.4             munsell_0.5.0              \n[117] teal.reporter_0.3.0.9003    Rcpp_1.0.12                \n[119] dbplyr_2.4.0                png_0.1-8                  \n[121] XML_3.99-0.16.1             parallel_4.3.2             \n[123] ellipsis_0.3.2              assertthat_0.2.1           \n[125] blob_1.2.4                  prettyunits_1.2.0          \n[127] bitops_1.0-7                scales_1.3.0               \n[129] purrr_1.0.2                 crayon_1.5.2               \n[131] GetoptLong_1.0.5            rlang_1.1.3                \n[133] formatR_1.14                KEGGREST_1.42.0            \n[135] shinyjs_2.1.0              \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "RNAG",
      "RNAG8"
    ]
  },
  {
    "objectID": "graphs/RG3/rg03b.html",
    "href": "graphs/RG3/rg03b.html",
    "title": "RG3B",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nThe same setup as in RG1 is used.\nFor ggplot() used in all analyses, we add by = BMEASIFL in the aesthetics to support the calculation of proportions using geom_text(stat = \"prop\").\n\nCodelibrary(tern)\nlibrary(ggplot2.utils)\nlibrary(dplyr)\n\nadrs &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adrs %&gt;%\n  df_explicit_na() %&gt;%\n  mutate(\n    AVALC = ordered(AVALC, levels = c(\"&lt;Missing&gt;\", \"NE\", \"PD\", \"SD\", \"PR\", \"CR\")),\n    AVALC_BIN = fct_collapse_only(\n      AVALC,\n      Yes = c(\"CR\", \"PR\"),\n      No = c(\"PD\", \"SD\", \"NE\", \"&lt;Missing&gt;\")\n    ),\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      Ctrl = c(\"B: Placebo\"),\n      Trt = c(\"A: Drug X\", \"C: Combination\")\n    )\n  ) %&gt;%\n  filter(PARAMCD == \"BESRSPI\", BMEASIFL == \"Y\")\n\n\n\n\nIn this example we compare the responses across treatment arms between the BEP and the full population using the option position = \"stack\" in the geom_bar() layer to display counts instead of percentages.\n\nCodegraph &lt;- ggplot(adrs, aes(BMEASIFL, fill = AVALC_BIN, by = BMEASIFL)) +\n  geom_bar(position = \"stack\") +\n  scale_x_discrete(labels = NULL) +\n  xlab(NULL) +\n  geom_text(stat = \"count\", aes(label = after_stat(count)), position = position_stack(.5), colour = \"white\") +\n  facet_grid(BEP01FL ~ ARM_BIN, margins = TRUE)\n\ngraph\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           ggplot2.utils_0.3.1   ggplot2_3.4.4        \n[4] tern_0.9.3.9016       rtables_0.6.6.9010    magrittr_2.0.3       \n[7] formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.4        generics_0.1.3    tidyr_1.3.1       scda_0.1.6.9016  \n [5] EnvStats_2.8.1    lattice_0.22-5    digest_0.6.34     evaluate_0.23    \n [9] grid_4.3.2        fastmap_1.1.1     jsonlite_1.8.8    Matrix_1.6-5     \n[13] backports_1.4.1   survival_3.5-7    purrr_1.0.2       fansi_1.0.6      \n[17] viridisLite_0.4.2 scales_1.3.0      codetools_0.2-19  Rdpack_2.6       \n[21] cli_3.6.2         ggpp_0.5.6        rlang_1.1.3       rbibutils_2.2.16 \n[25] munsell_0.5.0     splines_4.3.2     withr_3.0.0       yaml_2.3.8       \n[29] tools_4.3.2       polynom_1.4-1     checkmate_2.3.1   colorspace_2.1-0 \n[33] forcats_1.0.0     ggstats_0.5.1     broom_1.0.5       vctrs_0.6.5      \n[37] R6_2.5.1          lifecycle_1.0.4   htmlwidgets_1.6.4 MASS_7.3-60.0.1  \n[41] pkgconfig_2.0.3   pillar_1.9.0      gtable_0.3.4      glue_1.7.0       \n[45] xfun_0.41         tibble_3.2.1      tidyselect_1.2.0  knitr_1.45       \n[49] farver_2.1.1      htmltools_0.5.7   labeling_0.4.3    rmarkdown_2.25   \n[53] compiler_4.3.2   \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "RG",
      "RG3",
      "RG3B"
    ]
  },
  {
    "objectID": "graphs/RG3/rg03.html",
    "href": "graphs/RG3/rg03.html",
    "title": "RG3",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nThe same setup as in RG1 is used.\nFor ggplot() used in all analyses, we add by = BMEASIFL in the aesthetics to support the calculation of proportions using geom_text(stat = \"prop\").\n\nCodelibrary(tern)\nlibrary(ggplot2.utils)\nlibrary(dplyr)\n\nadrs &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adrs %&gt;%\n  df_explicit_na() %&gt;%\n  mutate(\n    AVALC = ordered(AVALC, levels = c(\"&lt;Missing&gt;\", \"NE\", \"PD\", \"SD\", \"PR\", \"CR\")),\n    AVALC_BIN = fct_collapse_only(\n      AVALC,\n      Yes = c(\"CR\", \"PR\"),\n      No = c(\"PD\", \"SD\", \"NE\", \"&lt;Missing&gt;\")\n    ),\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      Ctrl = c(\"B: Placebo\"),\n      Trt = c(\"A: Drug X\", \"C: Combination\")\n    )\n  ) %&gt;%\n  filter(PARAMCD == \"BESRSPI\", BMEASIFL == \"Y\")\n\n\n\n\nIn this example we can use the facet_grid() layer with the margins = TRUE option to compare the responses between the biomarker evaluable population (BEP) and the overall population.\n\nCodegraph &lt;- ggplot(adrs, aes(BMEASIFL, fill = AVALC_BIN, by = BMEASIFL)) +\n  geom_bar(position = \"fill\") +\n  geom_text(stat = \"prop\", position = position_fill(.5), colour = \"white\") +\n  scale_y_continuous(\n    labels = scales::percent,\n    name = \"Proportion %\"\n  ) +\n  scale_x_discrete(labels = NULL) +\n  xlab(NULL)\n\ngraph +\n  facet_grid(BEP01FL ~ ., margins = TRUE)\n\n\n\n\n\n\n\nIn this example we compare the responses across treatment arms between the biomarker evaluable population and the full population. We can add the option margins = TRUE option within the facet_grid() layer to obtain the responses across all treatment arms and their combination within each of the populations.\n\nCodegraph +\n  facet_grid(BEP01FL ~ ARM_BIN, margins = TRUE)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           ggplot2.utils_0.3.1   ggplot2_3.4.4        \n[4] tern_0.9.3.9016       rtables_0.6.6.9010    magrittr_2.0.3       \n[7] formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.4        generics_0.1.3    tidyr_1.3.1       scda_0.1.6.9016  \n [5] EnvStats_2.8.1    lattice_0.22-5    digest_0.6.34     evaluate_0.23    \n [9] grid_4.3.2        fastmap_1.1.1     jsonlite_1.8.8    Matrix_1.6-5     \n[13] backports_1.4.1   survival_3.5-7    purrr_1.0.2       fansi_1.0.6      \n[17] viridisLite_0.4.2 scales_1.3.0      codetools_0.2-19  Rdpack_2.6       \n[21] cli_3.6.2         ggpp_0.5.6        rlang_1.1.3       rbibutils_2.2.16 \n[25] munsell_0.5.0     splines_4.3.2     withr_3.0.0       yaml_2.3.8       \n[29] tools_4.3.2       polynom_1.4-1     checkmate_2.3.1   colorspace_2.1-0 \n[33] forcats_1.0.0     ggstats_0.5.1     broom_1.0.5       vctrs_0.6.5      \n[37] R6_2.5.1          lifecycle_1.0.4   htmlwidgets_1.6.4 MASS_7.3-60.0.1  \n[41] pkgconfig_2.0.3   pillar_1.9.0      gtable_0.3.4      glue_1.7.0       \n[45] xfun_0.41         tibble_3.2.1      tidyselect_1.2.0  knitr_1.45       \n[49] farver_2.1.1      htmltools_0.5.7   labeling_0.4.3    rmarkdown_2.25   \n[53] compiler_4.3.2   \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "RG",
      "RG3"
    ]
  },
  {
    "objectID": "graphs/KG5/kg05a.html",
    "href": "graphs/KG5/kg05a.html",
    "title": "KG5A",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nA setup similar to KG4 is used. The difference here is that we create the initial binary biomarker variable BMRKR1_BIN from comparing the continuous biomarker variable BMRKR1 with a cutoff of interest.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte &lt;- random.cdisc.data::cadtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"OS\" & BEP01FL == \"Y\") %&gt;%\n  mutate(\n    is_event = CNSR == 0,\n    BMRKR1_BIN = ifelse(\n      BMRKR1 &gt; 5, \"High\", \"Low\"\n    ),\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = c(\"B: Placebo\"),\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    ),\n    ARM_BMRKR1 = interaction(ARM_BIN, BMRKR1_BIN)\n  )\n\nvariables &lt;- list(tte = \"AVAL\", is_event = \"is_event\", arm = \"ARM_BMRKR1\")\n\n\n\n\nAlternatively we can also use the cut() function to cut the continuous biomarker variable BMRKR1 into a factor with two levels BMRKR1_CAT, and then create its interaction with the treatment arm variable, to create effectively the same graphical comparison.\n\nCodeadtte2 &lt;- adtte %&gt;%\n  mutate(\n    BMRKR1_CAT = cut(BMRKR1, c(0, 5, 22)),\n    ARM_BMRKR1 = interaction(ARM_BIN, BMRKR1_CAT)\n  )\n\ng_km(\n  df = adtte2,\n  variables = variables,\n  annot_surv_med = TRUE,\n  col = c(\"red\", \"blue\", \"red\", \"blue\"),\n  lty = c(1, 1, 2, 2)\n)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.4.0 (2024-04-24)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 22.04.4 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.4.9008       rtables_0.6.7.9002   \n[4] magrittr_2.0.3        formatters_0.5.6.9005\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.7-0                  gtable_0.3.5                 \n [3] jsonlite_1.8.8                compiler_4.4.0               \n [5] tidyselect_1.2.1              stringr_1.5.1                \n [7] tidyr_1.3.1                   splines_4.4.0                \n [9] scales_1.3.0                  yaml_2.3.8                   \n[11] fastmap_1.2.0                 lattice_0.22-6               \n[13] ggplot2_3.5.1                 R6_2.5.1                     \n[15] labeling_0.4.3                generics_0.1.3               \n[17] knitr_1.46                    forcats_1.0.0                \n[19] rbibutils_2.2.16              htmlwidgets_1.6.4            \n[21] backports_1.4.1               checkmate_2.3.1              \n[23] tibble_3.2.1                  munsell_0.5.1                \n[25] pillar_1.9.0                  rlang_1.1.3                  \n[27] utf8_1.2.4                    stringi_1.8.4                \n[29] broom_1.0.6                   xfun_0.44                    \n[31] cli_3.6.2                     withr_3.0.0                  \n[33] Rdpack_2.6                    digest_0.6.35                \n[35] grid_4.4.0                    cowplot_1.1.3                \n[37] lifecycle_1.0.4               vctrs_0.6.5                  \n[39] evaluate_0.23                 glue_1.7.0                   \n[41] farver_2.1.2                  codetools_0.2-20             \n[43] survival_3.6-4                random.cdisc.data_0.3.15.9004\n[45] fansi_1.0.6                   colorspace_2.1-0             \n[47] rmarkdown_2.27                purrr_1.0.2                  \n[49] tools_4.4.0                   pkgconfig_2.0.3              \n[51] htmltools_0.5.8.1            \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "KG",
      "KG5",
      "KG5A"
    ]
  },
  {
    "objectID": "graphs/KG5/setup.html#setup",
    "href": "graphs/KG5/setup.html#setup",
    "title": "",
    "section": "Setup",
    "text": "Setup\nA setup similar to KG4 is used. The difference here is that we create the initial binary biomarker variable BMRKR1_BIN from comparing the continuous biomarker variable BMRKR1 with a cutoff of interest.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte &lt;- random.cdisc.data::cadtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"OS\" & BEP01FL == \"Y\") %&gt;%\n  mutate(\n    is_event = CNSR == 0,\n    BMRKR1_BIN = ifelse(\n      BMRKR1 &gt; 5, \"High\", \"Low\"\n    ),\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = c(\"B: Placebo\"),\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    ),\n    ARM_BMRKR1 = interaction(ARM_BIN, BMRKR1_BIN)\n  )\n\nvariables &lt;- list(tte = \"AVAL\", is_event = \"is_event\", arm = \"ARM_BMRKR1\")"
  },
  {
    "objectID": "graphs/spg02.html",
    "href": "graphs/spg02.html",
    "title": "SPG2",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nWe will use the cadrs data set from the random.cdisc.data package to create the STEP response graph. We start by filtering the adrs data set for response evaluable patients and the response parameter of interest, creating a new logical variable encoding response (response patients should solely be CR patients), binarizing the ARM variable.\n\nCodelibrary(tern)\nlibrary(ggplot2.utils)\nlibrary(dplyr)\n\nadrs &lt;- random.cdisc.data::cadrs %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAM == \"Best Confirmed Overall Response by Investigator\", BMEASIFL == \"Y\") %&gt;%\n  mutate(\n    is_rsp = AVALC == \"CR\",\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = c(\"B: Placebo\"),\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    )\n  )\n\n\n\n\nWe then perform with the fit_rsp_step() function the required calculations: this function fits the Subgroup Treatment Effect Pattern (STEP) logistic regression models for the response outcome within each of the percentile intervals of the age variable AGE defining the subgroups. The treatment arm variable must have exactly two levels, where the first one is taken as reference, i.e. the estimated odds ratios are for the comparison of the second level vs. the first one.\nIn this example we fit the default model where a constant treatment effect is estimated in each of the subgroups that are created according to age quantiles.\n\nCodevars &lt;- list(\n  time = \"AVAL\",\n  response = \"is_rsp\",\n  arm = \"ARM_BIN\",\n  biomarker = \"AGE\"\n)\n\nstep_matrix &lt;- fit_rsp_step(\n  variables = vars,\n  data = adrs\n)\n\n\nIn this second example we fit instead a model with a linear age interaction term and we control the bandwidth (50% of data) of the STEP windows for the age variable.\n\nCodestep_matrix &lt;- fit_rsp_step(\n  variables = vars,\n  data = adrs,\n  control = c(control_logistic(), control_step(degree = 1, bandwidth = 0.5))\n)\n\n\nBefore we can plot the data, the broom::tidy() method needs to be applied to the STEP result to obtain graph ready data. Thereafter with the g_step() function we can create a graph showing the estimated odds ratio along the continuous age subgroups.\n\nCodestep_data &lt;- broom::tidy(step_matrix)\n\ngraph &lt;- g_step(step_data)\n\ngraph\n\n\n\n\n\n\n\nWe can also add a reference line and change the axis limits.\n\nCodegraph +\n  geom_hline(aes(yintercept = 1), linetype = 2) +\n  coord_cartesian(ylim = c(0, 10))\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.4.0 (2024-04-24)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 22.04.4 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           ggplot2.utils_0.3.1   ggplot2_3.5.1        \n[4] tern_0.9.4.9008       rtables_0.6.7.9002    magrittr_2.0.3       \n[7] formatters_0.5.6.9005\n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.4                    generics_0.1.3               \n [3] tidyr_1.3.1                   EnvStats_2.8.1               \n [5] stringi_1.8.4                 lattice_0.22-6               \n [7] digest_0.6.35                 evaluate_0.23                \n [9] grid_4.4.0                    fastmap_1.2.0                \n[11] jsonlite_1.8.8                Matrix_1.7-0                 \n[13] backports_1.4.1               survival_3.6-4               \n[15] purrr_1.0.2                   fansi_1.0.6                  \n[17] scales_1.3.0                  codetools_0.2-20             \n[19] Rdpack_2.6                    cli_3.6.2                    \n[21] ggpp_0.5.7                    rlang_1.1.3                  \n[23] rbibutils_2.2.16              munsell_0.5.1                \n[25] splines_4.4.0                 withr_3.0.0                  \n[27] yaml_2.3.8                    tools_4.4.0                  \n[29] polynom_1.4-1                 checkmate_2.3.1              \n[31] colorspace_2.1-0              forcats_1.0.0                \n[33] ggstats_0.6.0                 broom_1.0.6                  \n[35] vctrs_0.6.5                   R6_2.5.1                     \n[37] lifecycle_1.0.4               stringr_1.5.1                \n[39] htmlwidgets_1.6.4             MASS_7.3-60.2                \n[41] pkgconfig_2.0.3               pillar_1.9.0                 \n[43] gtable_0.3.5                  glue_1.7.0                   \n[45] xfun_0.44                     tibble_3.2.1                 \n[47] tidyselect_1.2.1              knitr_1.46                   \n[49] farver_2.1.2                  htmltools_0.5.8.1            \n[51] labeling_0.4.3                rmarkdown_2.27               \n[53] random.cdisc.data_0.3.15.9004 compiler_4.4.0               \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "SPG",
      "SPG2"
    ]
  },
  {
    "objectID": "graphs/DG3/setup.html#setup",
    "href": "graphs/DG3/setup.html#setup",
    "title": "",
    "section": "Setup",
    "text": "Setup\nThe graphs below summarize the distribution of a categorical biomarker variable as barplots, either in the overall population or by one or more categorical clinical variables.\nWe will use the cadsl data set from the random.cdisc.data package to illustrate the graph and will select on the biomarker evaluable population with BEP01FL. The column BMRKR2 contains the biomarker values on a categorical scale. We will use ARM as categorical clinical variable.\n\nCodelibrary(tern)\nlibrary(ggplot2.utils)\nlibrary(dplyr)\n\nadsl &lt;- random.cdisc.data::cadsl %&gt;%\n  df_explicit_na() %&gt;%\n  filter(BEP01FL == \"Y\")"
  },
  {
    "objectID": "graphs/SFG3/sfg03a.html",
    "href": "graphs/SFG3/sfg03a.html",
    "title": "SFG3A",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nWe prepare the data similarly as in SFG1, focusing on a single arm in the biomarker evaluable population.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte &lt;- random.cdisc.data::cadtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(\n    PARAMCD == \"OS\",\n    ARM == \"A: Drug X\",\n    BEP01FL == \"Y\"\n  ) %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0\n  ) %&gt;%\n  var_relabel(\n    BEP01FL = \"BEP\",\n    BMRKR1 = \"Biomarker (Countinuous)\"\n  )\n\n\n\n\nWe prepare the data similarly as in SFG3. Additionally we are filtering random.cdisc.data::cadtte to keep only two categories for the SEX variable (otherwise we would not be able to do the forest plot), and we are keeping all ITT patients. We then tabulate statistics to be able to use them as an input for the forest plot.\n\nCodeadtte_mf &lt;- random.cdisc.data::cadtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(\n    PARAMCD == \"OS\",\n    ARM == \"A: Drug X\",\n    SEX %in% c(\"M\", \"F\")\n  ) %&gt;%\n  droplevels() %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0\n  ) %&gt;%\n  var_relabel(\n    BEP01FL = \"BEP\",\n    BMRKR1 = \"Biomarker (Countinuous)\"\n  )\n\ntbl &lt;- extract_survival_subgroups(\n  variables = list(\n    tte = \"AVAL\",\n    is_event = \"is_event\",\n    arm = \"SEX\",\n    subgroups = \"BEP01FL\"\n  ),\n  label_all = \"ITT\",\n  data = adtte_mf\n)\n\nresult &lt;- basic_table() %&gt;%\n  tabulate_survival_subgroups(\n    df = tbl,\n    vars = c(\"n_tot_events\", \"n\", \"n_events\", \"median\", \"hr\", \"ci\"),\n    time_unit = adtte_mf$AVALU[1]\n  )\n\n\nWe can now produce the forest plot using the g_forest() function.\n\nCodeg_forest(result)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.4.0 (2024-04-24)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 22.04.4 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.4.9008       rtables_0.6.7.9002   \n[4] magrittr_2.0.3        formatters_0.5.6.9005\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.7-0                  gtable_0.3.5                 \n [3] jsonlite_1.8.8                compiler_4.4.0               \n [5] tidyselect_1.2.1              stringr_1.5.1                \n [7] tidyr_1.3.1                   splines_4.4.0                \n [9] scales_1.3.0                  yaml_2.3.8                   \n[11] fastmap_1.2.0                 lattice_0.22-6               \n[13] ggplot2_3.5.1                 R6_2.5.1                     \n[15] labeling_0.4.3                generics_0.1.3               \n[17] knitr_1.46                    forcats_1.0.0                \n[19] rbibutils_2.2.16              htmlwidgets_1.6.4            \n[21] backports_1.4.1               checkmate_2.3.1              \n[23] tibble_3.2.1                  munsell_0.5.1                \n[25] pillar_1.9.0                  rlang_1.1.3                  \n[27] utf8_1.2.4                    stringi_1.8.4                \n[29] broom_1.0.6                   xfun_0.44                    \n[31] cli_3.6.2                     withr_3.0.0                  \n[33] Rdpack_2.6                    digest_0.6.35                \n[35] grid_4.4.0                    cowplot_1.1.3                \n[37] lifecycle_1.0.4               vctrs_0.6.5                  \n[39] evaluate_0.23                 glue_1.7.0                   \n[41] farver_2.1.2                  codetools_0.2-20             \n[43] survival_3.6-4                random.cdisc.data_0.3.15.9004\n[45] fansi_1.0.6                   colorspace_2.1-0             \n[47] rmarkdown_2.27                purrr_1.0.2                  \n[49] tools_4.4.0                   pkgconfig_2.0.3              \n[51] htmltools_0.5.8.1            \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "SFG",
      "SFG3",
      "SFG3A"
    ]
  },
  {
    "objectID": "graphs/SFG3/sfg03.html",
    "href": "graphs/SFG3/sfg03.html",
    "title": "SFG3",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nWe prepare the data similarly as in SFG1, focusing on a single arm in the biomarker evaluable population.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(\n    PARAMCD == \"OS\",\n    ARM == \"A: Drug X\",\n    BEP01FL == \"Y\"\n  ) %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0\n  ) %&gt;%\n  var_relabel(\n    BEP01FL = \"BEP\",\n    BMRKR1 = \"Biomarker (Countinuous)\"\n  )\n\n\n\n\nWe define a vector of all cutpoints to use for a numeric biomarker (here BMRKR1). We lapply() over this vector, each time generating a binary factor variable BMRKR1_cut and then tabulating the resulting statistics as e.g. in SFG1. Then we rbind() all tables in the list together.\n\nCodeall_cutpoints &lt;- c(2.5, 5, 7.5, 10)\n\ntables_all_cutpoints &lt;- lapply(all_cutpoints, function(cutpoint) {\n  adtte_cut &lt;- adtte %&gt;%\n    mutate(\n      BMRKR1_cut = explicit_na(factor(\n        ifelse(BMRKR1 &gt; cutpoint, \"Greater\", \"Less\")\n      ))\n    )\n  tbl &lt;- extract_survival_subgroups(\n    variables = list(\n      tte = \"AVAL\",\n      is_event = \"is_event\",\n      arm = \"BMRKR1_cut\"\n    ),\n    label_all = paste0(\"BMRKR1 (\", cutpoint, \")\"),\n    data = adtte_cut\n  )\n  basic_table() %&gt;%\n    tabulate_survival_subgroups(\n      df = tbl,\n      vars = c(\"n_tot_events\", \"n\", \"n_events\", \"median\", \"hr\", \"ci\"),\n      time_unit = adtte_cut$AVALU[1]\n    )\n})\nresult &lt;- do.call(rbind, tables_all_cutpoints)\n\n\nWe can now produce the forest plot using the g_forest() function. Notice that the result object in these derivation steps has lost its attributes. In order to specify the column indices for the estimator, confidence interval, and header, we need to derive the attributes from one of the original tables and specify them using the col_x, col_y and forest_header arguments of g_forest().\n\nCodeone_table &lt;- tables_all_cutpoints[[1]]\ng_forest(result,\n  col_x = attr(one_table, \"col_x\"),\n  col_ci = attr(one_table, \"col_ci\"),\n  forest_header = attr(one_table, \"forest_header\")\n)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.3.9016       rtables_0.6.6.9010   \n[4] magrittr_2.0.3        formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.6-5      gtable_0.3.4      jsonlite_1.8.8    compiler_4.3.2   \n [5] tidyselect_1.2.0  tidyr_1.3.1       splines_4.3.2     scales_1.3.0     \n [9] yaml_2.3.8        fastmap_1.1.1     lattice_0.22-5    ggplot2_3.4.4    \n[13] R6_2.5.1          labeling_0.4.3    generics_0.1.3    knitr_1.45       \n[17] forcats_1.0.0     rbibutils_2.2.16  htmlwidgets_1.6.4 backports_1.4.1  \n[21] checkmate_2.3.1   tibble_3.2.1      munsell_0.5.0     scda_0.1.6.9016  \n[25] pillar_1.9.0      rlang_1.1.3       utf8_1.2.4        stringi_1.8.3    \n[29] broom_1.0.5       xfun_0.41         cli_3.6.2         withr_3.0.0      \n[33] Rdpack_2.6        digest_0.6.34     grid_4.3.2        cowplot_1.1.3    \n[37] lifecycle_1.0.4   vctrs_0.6.5       evaluate_0.23     glue_1.7.0       \n[41] farver_2.1.1      codetools_0.2-19  survival_3.5-7    fansi_1.0.6      \n[45] colorspace_2.1-0  rmarkdown_2.25    purrr_1.0.2       tools_4.3.2      \n[49] pkgconfig_2.0.3   htmltools_0.5.7  \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "SFG",
      "SFG3"
    ]
  },
  {
    "objectID": "graphs/DG1/dg01a.html",
    "href": "graphs/DG1/dg01a.html",
    "title": "DG1A",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nWe will use the synthetic_cdisc_data$adsl data set from the scda package and ggplot2 to create the plots. In this example, we will plot histograms of one or multiple numeric variables. We start by selecting the biomarker evaluable population with the flag variable BEP01FL and then populating a new continuous biomarker variable, BMRKR3.\n\nCodelibrary(tern)\nlibrary(ggplot2.utils)\nlibrary(dplyr)\nlibrary(tibble)\nlibrary(tidyr)\n\nadsl &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adsl %&gt;%\n  df_explicit_na() %&gt;%\n  filter(BEP01FL == \"Y\") %&gt;%\n  mutate(BMRKR3 = rnorm(n(), mean = 7, sd = 2))\n\n\n\n\nIn this example, we will manipulate the variables that we want to show in the graph into a long data format using the pivot_longer() function from tidyr. This is necessary such that below we can use the faceting layer facet_grid() to plot each variable in its own facet.\n\nCodenum_var_long &lt;- adsl %&gt;%\n  pivot_longer(\n    c(BMRKR1, BMRKR3),\n    names_to = \"var\",\n    values_to = \"value\"\n  ) %&gt;%\n  select(var, value)\n\n\nProducing the base plot is then simple: We use the same code as above but just add the faceting layer.\n\nCodegraph &lt;- ggplot(num_var_long, aes(value)) +\n  geom_histogram(aes(y = after_stat(density)), bins = 30) +\n  geom_density(aes(y = after_stat(density))) +\n  facet_grid(var ~ .)\n\ngraph\n\n\n\n\n\n\n\nSimilar to the DG1 example, we will calculate and populate the statistics table to accompany the plot. Note that also here we can use the pivot_longer() function to also obtain the statistics table input orig_tb and then data_tb in long format, and thus parallel to the biomarker variable format in num_var_long.\n\nCodeorig_tb &lt;- num_var_long %&gt;%\n  group_by(var) %&gt;%\n  summarize_at(\"value\", list(mean = mean, median = median)) %&gt;%\n  pivot_longer(\n    c(mean, median),\n    names_to = \"Statistic\",\n    values_to = \"Value\"\n  )\n\ndata_tb &lt;- orig_tb %&gt;%\n  group_by(var) %&gt;%\n  summarize(x = 1, y = 1, tb = list(tibble(Statistic, Value)))\n\ngraph &lt;- graph +\n  geom_table_npc(data = data_tb, aes(npcx = x, npcy = y, label = tb))\n\ngraph\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] tidyr_1.3.1           tibble_3.2.1          dplyr_1.1.4          \n[4] ggplot2.utils_0.3.1   ggplot2_3.4.4         tern_0.9.3.9016      \n[7] rtables_0.6.6.9010    magrittr_2.0.3        formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.4        generics_0.1.3    scda_0.1.6.9016   EnvStats_2.8.1   \n [5] lattice_0.22-5    digest_0.6.34     evaluate_0.23     grid_4.3.2       \n [9] fastmap_1.1.1     jsonlite_1.8.8    Matrix_1.6-5      backports_1.4.1  \n[13] survival_3.5-7    gridExtra_2.3     purrr_1.0.2       fansi_1.0.6      \n[17] scales_1.3.0      codetools_0.2-19  Rdpack_2.6        cli_3.6.2        \n[21] ggpp_0.5.6        rlang_1.1.3       rbibutils_2.2.16  munsell_0.5.0    \n[25] splines_4.3.2     withr_3.0.0       yaml_2.3.8        tools_4.3.2      \n[29] polynom_1.4-1     checkmate_2.3.1   colorspace_2.1-0  forcats_1.0.0    \n[33] ggstats_0.5.1     broom_1.0.5       vctrs_0.6.5       R6_2.5.1         \n[37] lifecycle_1.0.4   htmlwidgets_1.6.4 MASS_7.3-60.0.1   pkgconfig_2.0.3  \n[41] pillar_1.9.0      gtable_0.3.4      glue_1.7.0        xfun_0.41        \n[45] tidyselect_1.2.0  knitr_1.45        farver_2.1.1      htmltools_0.5.7  \n[49] labeling_0.4.3    rmarkdown_2.25    compiler_4.3.2   \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "DG",
      "DG1",
      "DG1A"
    ]
  },
  {
    "objectID": "graphs/DG1/setup.html#setup",
    "href": "graphs/DG1/setup.html#setup",
    "title": "",
    "section": "Setup",
    "text": "Setup\nWe will use the cadsl data set from the random.cdisc.data package and ggplot2 to create the plots. In this example, we will plot histograms of one or multiple numeric variables. We start by selecting the biomarker evaluable population with the flag variable BEP01FL and then populating a new continuous biomarker variable, BMRKR3.\n\nCodelibrary(tern)\nlibrary(ggplot2.utils)\nlibrary(dplyr)\nlibrary(tibble)\nlibrary(tidyr)\n\nadsl &lt;- random.cdisc.data::cadsl %&gt;%\n  df_explicit_na() %&gt;%\n  filter(BEP01FL == \"Y\") %&gt;%\n  mutate(BMRKR3 = rnorm(n(), mean = 7, sd = 2))"
  },
  {
    "objectID": "graphs/rfg03.html",
    "href": "graphs/rfg03.html",
    "title": "RFG3",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nFor response endpoints it is good to show how to obtain within-treatment-arms comparisons of biomarker subgroups. This is similar to SFG04.\nSimilarly like in RFG1.\n\nCodelibrary(tern)\nlibrary(ggplot2.utils)\nlibrary(dplyr)\n\nadrs &lt;- random.cdisc.data::cadrs %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"BESRSPI\", BMEASIFL == \"Y\") %&gt;%\n  mutate(\n    is_rsp = AVALC %in% c(\"CR\", \"PR\"),\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = c(\"B: Placebo\"),\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    ),\n    BMRKR2 = fct_explicit_na_if(BMRKR2, BEP01FL == \"N\")\n  ) %&gt;%\n  var_relabel(\n    BEP01FL = \"BEP\",\n    BMRKR2 = \"Biomarker (Categorical)\"\n  )\n\n\n\n\nWe define a vector of all cutpoints to use for a numeric biomarker (here BMRKR1).\nWe lapply() over this vector, each time generating a binary factor variable BMRKR1_cut and then tabulating the resulting statistics similar to SFG4, this time including the treatment arms in the subgroups argument. Then we rbind() all tables in the list together.\n\nCode# across arm ----\ncutpoints &lt;- c(4, 5, 8)\n\nadrs2 &lt;- adrs %&gt;%\n  mutate(\n    BMRKR1 = ifelse(BEP01FL == \"N\", NA, BMRKR1),\n    BMRKR1_cut = explicit_na(cut(BMRKR1, c(-Inf, cutpoints, Inf), right = FALSE))\n  ) %&gt;%\n  var_relabel(BMRKR1_cut = \"Biomarker (Binned Continuous)\")\n\ntables_all_cutpoints &lt;- lapply(cutpoints, function(cutpoint) {\n  adrs3 &lt;- adrs2 %&gt;%\n    filter(!is.na(BMRKR1)) %&gt;%\n    mutate(\n      BMRKR1_thresh = explicit_na(factor(\n        ifelse(BMRKR1 &gt; cutpoint, \"Greater\", \"Less\")\n      ))\n    )\n  tbl &lt;- extract_rsp_subgroups(\n    variables = list(\n      rsp = \"is_rsp\",\n      arm = \"BMRKR1_thresh\",\n      subgroups = c(\"ARM_BIN\")\n    ),\n    label_all = paste0(\"BMRKR1 (\", cutpoint, \")\"),\n    data = adrs3\n  )\n  basic_table() %&gt;%\n    tabulate_rsp_subgroups(\n      df = tbl,\n      vars = c(\"n_tot\", \"n\", \"n_rsp\", \"prop\", \"or\", \"ci\")\n    )\n})\n\nresult &lt;- do.call(rbind, tables_all_cutpoints)\n\n\nWe can look at the result in the console already.\n\nCoderesult\n\n                                                  Greater                            Less                                            \nBaseline Risk Factors        Total n   n    Responders   Response (%)   n    Responders   Response (%)   Odds Ratio       95% CI     \n—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\nBMRKR1 (4)                     97      62       61          98.4%       35       34          97.1%          0.56       (0.03, 9.20)  \nDescription of Planned Arm                                                                                                           \n  CTRL                         36      21       21          100.0%      15       15          100.0%         1.00      (0.00, &gt;999.99)\n  TRT                          61      41       40          97.6%       20       19          95.0%          0.48       (0.03, 8.01)  \nBMRKR1 (5)                     97      50       49          98.0%       47       46          97.9%          0.94       (0.06, 15.45) \nDescription of Planned Arm                                                                                                           \n  CTRL                         36      16       16          100.0%      20       20          100.0%         1.00      (0.00, &gt;999.99)\n  TRT                          61      34       33          97.1%       27       26          96.3%          0.79       (0.05, 13.21) \nBMRKR1 (8)                     97      16       16          100.0%      81       79          97.5%         &lt;0.01      (0.00, &gt;999.99)\nDescription of Planned Arm                                                                                                           \n  CTRL                         36      3        3           100.0%      33       33          100.0%         1.00      (0.00, &gt;999.99)\n  TRT                          61      13       13          100.0%      48       46          95.8%         &lt;0.01      (0.00, &gt;999.99)\n\n\nWe can now produce the forest plot using the g_forest() function. Similarly as in SFG4 we need to specify the col_x, col_y and forest_header arguments for g_forest() by recovering them from one of the original tables.\n\nCodeone_table &lt;- tables_all_cutpoints[[1]]\ng2 &lt;- g_forest(\n  result,\n  col_x = attr(one_table, \"col_x\"),\n  col_ci = attr(one_table, \"col_ci\"),\n  forest_header = attr(one_table, \"forest_header\"),\n  col_symbol_size = attr(one_table, \"col_symbol_size\")\n)\n\n\nWith gridExtra::grid.arrange() the plot can be combined e.g. with a between-treatment-arms comparison, like RFG1A\n\n\n\nCodesessionInfo()\n\nR version 4.4.0 (2024-04-24)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 22.04.4 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           ggplot2.utils_0.3.1   ggplot2_3.5.1        \n[4] tern_0.9.4.9008       rtables_0.6.7.9002    magrittr_2.0.3       \n[7] formatters_0.5.6.9005\n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.4                    generics_0.1.3               \n [3] tidyr_1.3.1                   EnvStats_2.8.1               \n [5] stringi_1.8.4                 lattice_0.22-6               \n [7] digest_0.6.35                 evaluate_0.23                \n [9] grid_4.4.0                    fastmap_1.2.0                \n[11] jsonlite_1.8.8                Matrix_1.7-0                 \n[13] backports_1.4.1               survival_3.6-4               \n[15] purrr_1.0.2                   fansi_1.0.6                  \n[17] scales_1.3.0                  codetools_0.2-20             \n[19] Rdpack_2.6                    cli_3.6.2                    \n[21] ggpp_0.5.7                    rlang_1.1.3                  \n[23] rbibutils_2.2.16              cowplot_1.1.3                \n[25] munsell_0.5.1                 splines_4.4.0                \n[27] withr_3.0.0                   yaml_2.3.8                   \n[29] tools_4.4.0                   polynom_1.4-1                \n[31] checkmate_2.3.1               colorspace_2.1-0             \n[33] forcats_1.0.0                 ggstats_0.6.0                \n[35] broom_1.0.6                   vctrs_0.6.5                  \n[37] R6_2.5.1                      lifecycle_1.0.4              \n[39] stringr_1.5.1                 htmlwidgets_1.6.4            \n[41] MASS_7.3-60.2                 pkgconfig_2.0.3              \n[43] pillar_1.9.0                  gtable_0.3.5                 \n[45] glue_1.7.0                    xfun_0.44                    \n[47] tibble_3.2.1                  tidyselect_1.2.1             \n[49] knitr_1.46                    farver_2.1.2                 \n[51] htmltools_0.5.8.1             labeling_0.4.3               \n[53] rmarkdown_2.27                random.cdisc.data_0.3.15.9004\n[55] compiler_4.4.0               \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "RFG",
      "RFG3"
    ]
  },
  {
    "objectID": "graphs/dg02.html",
    "href": "graphs/dg02.html",
    "title": "DG2",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nThe graph below plots the distribution of a biomarker variable (on a continuous scale) as a boxplot by one or more categorical clinical variables with overlaid points.\nWe will use the cadsl data set from the random.cdisc.data package to illustrate the graph and will select the biomarker evaluable population with BEP01FL. The column BMRKR1 contains the biomarker values on a continuous scale. We will use STRATA2 and ARM as categorical clinical variables.\n\nCodelibrary(tern)\nlibrary(ggplot2.utils)\nlibrary(dplyr)\n\nadsl &lt;- random.cdisc.data::cadsl %&gt;%\n  df_explicit_na() %&gt;%\n  filter(BEP01FL == \"Y\")\n\n\n\n\nHere below the code for a simple boxplot with the outliers displayed. Note that you may run into warning messages after producing the graph if the variable you want to analyze contains NAs. To avoid these warning messages, you can use the drop_na() function from tidyr in the data manipulation step above to remove the NAs rows from the dataset (e.g drop_na(BMRKR1)).\n\nCodegraph &lt;- ggplot(adsl, aes(x = STRATA2, y = BMRKR1)) +\n  geom_boxplot() +\n  stat_boxplot(geom = \"errorbar\")\n\ngraph\n\n\n\n\n\n\n\nNow we overlay the original data points, and remove the display of the outliers to avoid duplicate points.\n\nCodegraph &lt;- ggplot(adsl, aes(x = STRATA2, y = BMRKR1)) +\n  geom_boxplot(outlier.shape = NA) +\n  stat_boxplot(geom = \"errorbar\") +\n  geom_point(\n    position = position_jitter(width = 0.2),\n    alpha = 1 / 4\n  )\n\ngraph\n\n\n\n\n\n\n\nWe can customize the labels of the axes.\n\nCodegraph +\n  scale_x_discrete(\n    breaks = c(\"S1\", \"S2\"),\n    labels = c(\"Stratum 1\", \"Stratum 2\"),\n    name = \"Strata\"\n  ) +\n  scale_y_continuous(name = \"Biomarker (Units)\")\n\n\n\n\n\n\n\nWe can add the group sizes as annotations.\n\nCodegraph +\n  stat_n_text(text.box = TRUE)\n\n\n\n\n\n\n\nWe can also display the biomarker by a further categorical variable with the facet_grid() layer.\n\nCodegraph +\n  facet_grid(. ~ ARM)\n\n\n\n\n\n\n\nThis example shows how to display the biomarker axis on a log scale.\n\nCodegraph +\n  scale_y_log10(name = \"Biomarker (Log(Units))\")\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.4.0 (2024-04-24)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 22.04.4 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           ggplot2.utils_0.3.1   ggplot2_3.5.1        \n[4] tern_0.9.4.9008       rtables_0.6.7.9002    magrittr_2.0.3       \n[7] formatters_0.5.6.9005\n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.4                    generics_0.1.3               \n [3] tidyr_1.3.1                   EnvStats_2.8.1               \n [5] stringi_1.8.4                 lattice_0.22-6               \n [7] digest_0.6.35                 evaluate_0.23                \n [9] grid_4.4.0                    fastmap_1.2.0                \n[11] jsonlite_1.8.8                Matrix_1.7-0                 \n[13] backports_1.4.1               survival_3.6-4               \n[15] purrr_1.0.2                   fansi_1.0.6                  \n[17] scales_1.3.0                  codetools_0.2-20             \n[19] Rdpack_2.6                    cli_3.6.2                    \n[21] ggpp_0.5.7                    rlang_1.1.3                  \n[23] rbibutils_2.2.16              munsell_0.5.1                \n[25] splines_4.4.0                 withr_3.0.0                  \n[27] yaml_2.3.8                    tools_4.4.0                  \n[29] polynom_1.4-1                 checkmate_2.3.1              \n[31] colorspace_2.1-0              forcats_1.0.0                \n[33] ggstats_0.6.0                 broom_1.0.6                  \n[35] vctrs_0.6.5                   R6_2.5.1                     \n[37] lifecycle_1.0.4               stringr_1.5.1                \n[39] htmlwidgets_1.6.4             MASS_7.3-60.2                \n[41] pkgconfig_2.0.3               pillar_1.9.0                 \n[43] gtable_0.3.5                  glue_1.7.0                   \n[45] xfun_0.44                     tibble_3.2.1                 \n[47] tidyselect_1.2.1              knitr_1.46                   \n[49] farver_2.1.2                  htmltools_0.5.8.1            \n[51] labeling_0.4.3                rmarkdown_2.27               \n[53] random.cdisc.data_0.3.15.9004 compiler_4.4.0               \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "DG",
      "DG2"
    ]
  },
  {
    "objectID": "graphs/KG1/kg01b.html",
    "href": "graphs/KG1/kg01b.html",
    "title": "KG1B",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nWe will use the cadtte data set from the random.cdisc.data package to create the Kaplan-Meier (KM) plots. We start by filtering the time-to-event dataset for the overall survival observations and by one treatment arm (A), creating a new variable for event information, and curating a list of variables required to produce the plot.\n\nCodelibrary(tern)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(grid)\n\nadtte_arm &lt;- random.cdisc.data::cadtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"OS\", ARM == \"A: Drug X\") %&gt;%\n  mutate(is_event = CNSR == 0)\n\nvariables &lt;- list(tte = \"AVAL\", is_event = \"is_event\", arm = \"ARM\")\n\n\n\n\nHere we only filter the time-to-event dataset for the overall survival observations, but keep all treatment arms and the overall population.\n\nCodeadtte &lt;- random.cdisc.data::cadtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"OS\") %&gt;%\n  mutate(is_event = CNSR == 0)\n\nvariables &lt;- list(tte = \"AVAL\", is_event = \"is_event\", arm = \"ARM\")\n\n\nPlot the ITT (top, with CIs) and BEP (bottom, without CIs) KM graphs, convert them to ggplotGrob objects, and combine the plots via rbind. Then, use the grid package to create an empty plot area, and draw the KM curves on the graph device.\n\nCoderes1 &lt;- g_km(\n  df = adtte, variables = variables, annot_surv_med = FALSE, ci_ribbon = TRUE\n)\n\nres2 &lt;- g_km(\n  df = filter(adtte, BEP01FL == \"Y\"), variables = variables, annot_surv_med = FALSE\n)\n\ng &lt;- rbind(ggplot2::ggplotGrob(res1), ggplot2::ggplotGrob(res2), size = \"first\")\n\ngrid.newpage()\ngrid.draw(g)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.4.0 (2024-04-24)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 22.04.4 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] grid      stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n[1] ggplot2_3.5.1         dplyr_1.1.4           tern_0.9.4.9008      \n[4] rtables_0.6.7.9002    magrittr_2.0.3        formatters_0.5.6.9005\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.7-0                  gtable_0.3.5                 \n [3] jsonlite_1.8.8                compiler_4.4.0               \n [5] tidyselect_1.2.1              stringr_1.5.1                \n [7] tidyr_1.3.1                   splines_4.4.0                \n [9] scales_1.3.0                  yaml_2.3.8                   \n[11] fastmap_1.2.0                 lattice_0.22-6               \n[13] R6_2.5.1                      labeling_0.4.3               \n[15] generics_0.1.3                knitr_1.46                   \n[17] forcats_1.0.0                 rbibutils_2.2.16             \n[19] htmlwidgets_1.6.4             backports_1.4.1              \n[21] checkmate_2.3.1               tibble_3.2.1                 \n[23] munsell_0.5.1                 pillar_1.9.0                 \n[25] rlang_1.1.3                   utf8_1.2.4                   \n[27] stringi_1.8.4                 broom_1.0.6                  \n[29] xfun_0.44                     cli_3.6.2                    \n[31] withr_3.0.0                   Rdpack_2.6                   \n[33] digest_0.6.35                 cowplot_1.1.3                \n[35] lifecycle_1.0.4               vctrs_0.6.5                  \n[37] evaluate_0.23                 glue_1.7.0                   \n[39] farver_2.1.2                  codetools_0.2-20             \n[41] survival_3.6-4                random.cdisc.data_0.3.15.9004\n[43] fansi_1.0.6                   colorspace_2.1-0             \n[45] rmarkdown_2.27                purrr_1.0.2                  \n[47] tools_4.4.0                   pkgconfig_2.0.3              \n[49] htmltools_0.5.8.1            \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "KG",
      "KG1",
      "KG1B"
    ]
  },
  {
    "objectID": "graphs/KG1/setup.html#setup",
    "href": "graphs/KG1/setup.html#setup",
    "title": "",
    "section": "Setup",
    "text": "Setup\nWe will use the cadtte data set from the random.cdisc.data package to create the Kaplan-Meier (KM) plots. We start by filtering the time-to-event dataset for the overall survival observations and by one treatment arm (A), creating a new variable for event information, and curating a list of variables required to produce the plot.\n\nCodelibrary(tern)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(grid)\n\nadtte_arm &lt;- random.cdisc.data::cadtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"OS\", ARM == \"A: Drug X\") %&gt;%\n  mutate(is_event = CNSR == 0)\n\nvariables &lt;- list(tte = \"AVAL\", is_event = \"is_event\", arm = \"ARM\")"
  },
  {
    "objectID": "graphs/rnag01.html",
    "href": "graphs/rnag01.html",
    "title": "RNAG1",
    "section": "",
    "text": "Setup\nNormalization\nGraphs: Separate Graph Functions\nGraphs: All Graphs at Once\nTeal Module for QC Graphs\nSession Info\n\n\n\nThis page can be used as a template of how to use the available hermes functions for simple QC analyses of RNA-seq gene expression data and to create interactive QC graphs using teal.modules.hermes.\nWe start by creating HermesData from a SummarizedExperiment (SE) object. An example SummarizedExperiment object with name summarized_experiment is available in hermes.\n\nCodelibrary(hermes)\n\nHermesData(summarized_experiment)\n\nclass: HermesData\nassays(1): counts\ngenes(5085): GeneID:11185 GeneID:10677 ... GeneID:9087 GeneID:9426\nadditional gene information(12): HGNC HGNCGeneName ... chromosome_name\n  LowExpressionFlag\nsamples(20): 06520011B0023R 06520067C0018R ... 06520015C0016R\n  06520019C0023R\nadditional sample information(74): Filename SampleID ... LowDepthFlag\n  TechnicalFailureFlag\n\n\nAt this point we can also take the already prepared object hermes_data instead. First we add all quality flags (low expression, low read depth, technical failure).\n\nCodeobject &lt;- hermes_data %&gt;%\n  add_quality_flags()\n\n\nWe can look at how many samples or genes have been flagged.\n\nCodetable(get_low_expression(object))\n\n\nFALSE  TRUE \n 2391  2694 \n\nCodetable(get_tech_failure(object))\n\n\nFALSE  TRUE \n   19     1 \n\nCodetable(get_low_depth(object))\n\n\nFALSE \n   20 \n\n\nWe then filter for samples that pass all quality checks (i.e. all flags are FALSE).\n\nCoderesult &lt;- filter(object)\n\n\nIt is also possible to only filter genes or samples via the what argument of filter().\n\n\nNow that the samples are properly filtered, we can apply our normalization method. By default, if a method is not specified for normalize() then five methods (cpm, rpkm, tpm, voom, vst) will be performed and results saved as separate assays. If only one method is needed, it can be easily specified in the methods argument. In addition, if the rlog transformation method is preferred, it can also be specified in the methods argument.\n\nCodenorm_result &lt;- normalize(result)\n\n\n\n\nThe hermes package offers a series of draw_* functions to help in the QC process. First we introduce draw_libsize_hist() which displays a histogram of the sample library sizes.\n\nCodedraw_libsize_hist(norm_result, fill = \"lightblue\")\n\n\n\n\n\n\n\nThe draw_libsize_qq() displays a QQ plot of the samples library size. Here we look for potential outliers.\n\nCodedraw_libsize_qq(norm_result, color = \"red\")\n\n\n\n\n\n\n\nThe draw_libsize_densities() displays a density plot of the (log) counts distributions. Distribution lines correspond to each sample.\n\nCodedraw_libsize_densities(norm_result)\n\n\n\n\n\n\n\nThe draw_nonzero_boxplot() displays a box plot of the non-zero expressed genes per sample.\n\nCodedraw_nonzero_boxplot(norm_result)\n\n\n\n\n\n\n\nIt’s also possible to add an additional ggplot2 layer to get the sample ID of any points of interest, reusing the same position for labeling. If the labeling of several data points overlaps, the parameters of position_jitter() or geom_text_repel() can be adjusted to avoid that.\n\nCodelibrary(ggrepel)\npos &lt;- position_jitter(0.4)\ndraw_nonzero_boxplot(norm_result, position = pos) +\n  geom_text_repel(aes(label = norm_result$SampleID), position = pos)\n\n\n\n\n\n\n\nThe draw_nonzero_boxplot() displays a box plot of the non-zero expressed genes per sample.\n\nCodedraw_genes_barplot(norm_result)\n\n\n\n\n\n\n\nWe can also select for specific chromosomes by specifying the values in the chromosomes parameter. For example, to only display chromosomes 1 and 2 separately and ignore all others:\n\nCodedraw_genes_barplot(norm_result, chromosomes = c(\"1\", \"2\"), include_others = FALSE)\n\n\n\n\n\n\n\n\n\nIt is also possible to call all available draw_* functions with one function, autoplot(). Note: autoplot() does not allow for customization of the plots. We recommend using the appropriate draw_* function if you wish to make adjustments to the plots.\n\nCodeautoplot(norm_result)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe start by importing a MultiAssayExperiment; here we use the example multi_assay_experiment available in hermes. It is wrapped as a teal::dataset. We can then use the provided teal module tm_g_quality to include a QC module in our teal app.\n\nCodelibrary(teal.modules.hermes)\n\ndata &lt;- teal_data()\ndata &lt;- within(data, {\n  library(hermes)\n  MAE &lt;- multi_assay_experiment\n})\ndatanames(data) &lt;- \"MAE\"\n\napp &lt;- init(\n  data = data,\n  modules = modules(\n    tm_g_quality(\n      label = \"quality\",\n      mae_name = \"MAE\"\n    )\n  )\n)\nshinyApp(app$ui, app$server)\n\n[INFO] 2024-02-23 15:36:12.8976 pid:2858 token:[dbb59cc4] teal Initializing reporter_previewer_module\n\n\nWarning: 'experiments' dropped; see 'drops()'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] teal.modules.hermes_0.1.6.9003 teal_0.15.1.9000              \n [3] teal.slice_0.5.0.9003          teal.data_0.5.0.9000          \n [5] teal.code_0.5.0.9003           shiny_1.8.0                   \n [7] ggrepel_0.9.5                  hermes_1.7.1.9000             \n [9] SummarizedExperiment_1.32.0    Biobase_2.62.0                \n[11] GenomicRanges_1.54.1           GenomeInfoDb_1.38.5           \n[13] IRanges_2.36.0                 S4Vectors_0.40.2              \n[15] BiocGenerics_0.48.1            MatrixGenerics_1.14.0         \n[17] matrixStats_1.2.0              ggfortify_0.4.16              \n[19] ggplot2_3.4.4                 \n\nloaded via a namespace (and not attached):\n  [1] RColorBrewer_1.1-3          jsonlite_1.8.8             \n  [3] shape_1.4.6                 MultiAssayExperiment_1.28.0\n  [5] magrittr_2.0.3              farver_2.1.1               \n  [7] rmarkdown_2.25              ragg_1.2.7                 \n  [9] GlobalOptions_0.1.2         zlibbioc_1.48.0            \n [11] vctrs_0.6.5                 memoise_2.0.1              \n [13] RCurl_1.98-1.14             webshot_0.5.5              \n [15] BiocBaseUtils_1.5.0         htmltools_0.5.7            \n [17] S4Arrays_1.2.0              forcats_1.0.0              \n [19] progress_1.2.3              curl_5.2.0                 \n [21] SparseArray_1.2.3           sass_0.4.8                 \n [23] bslib_0.6.1                 fontawesome_0.5.2          \n [25] htmlwidgets_1.6.4           testthat_3.2.1             \n [27] cachem_1.0.8                teal.widgets_0.4.2.9005    \n [29] mime_0.12                   lifecycle_1.0.4            \n [31] iterators_1.0.14            pkgconfig_2.0.3            \n [33] webshot2_0.1.1              Matrix_1.6-5               \n [35] R6_2.5.1                    fastmap_1.1.1              \n [37] GenomeInfoDbData_1.2.11     rbibutils_2.2.16           \n [39] clue_0.3-65                 digest_0.6.34              \n [41] colorspace_2.1-0            shinycssloaders_1.0.0      \n [43] ps_1.7.6                    AnnotationDbi_1.64.1       \n [45] DESeq2_1.42.0               textshaping_0.3.7          \n [47] RSQLite_2.3.5               filelock_1.0.3             \n [49] labeling_0.4.3              fansi_1.0.6                \n [51] httr_1.4.7                  abind_1.4-5                \n [53] compiler_4.3.2              bit64_4.0.5                \n [55] withr_3.0.0                 doParallel_1.0.17          \n [57] backports_1.4.1             BiocParallel_1.36.0        \n [59] DBI_1.2.1                   logger_0.2.2               \n [61] biomaRt_2.58.0              rappdirs_0.3.3             \n [63] DelayedArray_0.28.0         rjson_0.2.21               \n [65] chromote_0.1.2              tools_4.3.2                \n [67] httpuv_1.6.13               glue_1.7.0                 \n [69] callr_3.7.3                 promises_1.2.1             \n [71] grid_4.3.2                  checkmate_2.3.1            \n [73] cluster_2.1.6               generics_0.1.3             \n [75] gtable_0.3.4                websocket_1.4.1            \n [77] tidyr_1.3.1                 hms_1.1.3                  \n [79] xml2_1.3.6                  utf8_1.2.4                 \n [81] XVector_0.42.0              foreach_1.5.2              \n [83] pillar_1.9.0                stringr_1.5.1              \n [85] limma_3.58.1                later_1.3.2                \n [87] circlize_0.4.15             dplyr_1.1.4                \n [89] BiocFileCache_2.10.1        lattice_0.22-5             \n [91] bit_4.0.5                   tidyselect_1.2.0           \n [93] ComplexHeatmap_2.18.0       locfit_1.5-9.8             \n [95] Biostrings_2.70.1           knitr_1.45                 \n [97] gridExtra_2.3               teal.logger_0.1.3.9011     \n [99] edgeR_4.0.12                xfun_0.41                  \n[101] statmod_1.5.0               brio_1.1.4                 \n[103] stringi_1.8.3               yaml_2.3.8                 \n[105] shinyWidgets_0.8.1          evaluate_0.23              \n[107] codetools_0.2-19            tibble_3.2.1               \n[109] cli_3.6.2                   systemfonts_1.0.5          \n[111] xtable_1.8-4                Rdpack_2.6                 \n[113] processx_3.8.3              jquerylib_0.1.4            \n[115] munsell_0.5.0               teal.reporter_0.3.0.9003   \n[117] Rcpp_1.0.12                 EnvStats_2.8.1             \n[119] dbplyr_2.4.0                png_0.1-8                  \n[121] XML_3.99-0.16.1             parallel_4.3.2             \n[123] ellipsis_0.3.2              assertthat_0.2.1           \n[125] blob_1.2.4                  prettyunits_1.2.0          \n[127] bitops_1.0-7                scales_1.3.0               \n[129] purrr_1.0.2                 crayon_1.5.2               \n[131] GetoptLong_1.0.5            rlang_1.1.3                \n[133] formatR_1.14                KEGGREST_1.42.0            \n[135] shinyjs_2.1.0              \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "RNAG"
    ]
  },
  {
    "objectID": "graphs/SFG5/sfg05.html",
    "href": "graphs/SFG5/sfg05.html",
    "title": "SFG5",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nWe prepare the data similarly as in SFG1.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nAGE_probs &lt;- 0.5\n\nadtte &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(\n    PARAMCD == \"OS\"\n  ) %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0,\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = \"B: Placebo\",\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    ),\n    AGE_BIN = cut_quantile_bins(AGE, probs = AGE_probs),\n    BMRKR2 = fct_explicit_na_if(BMRKR2, BEP01FL == \"N\"),\n    BMRKR2_BIN = fct_collapse_only(\n      BMRKR2,\n      High = \"HIGH\",\n      Low = c(\"MEDIUM\", \"LOW\")\n    )\n  ) %&gt;%\n  var_relabel(\n    BEP01FL = \"BEP\",\n    BMRKR2_BIN = \"Biomarker (Binary)\"\n  )\n\n\n\n\nWe create a tables_all() helper function first which creates a subtable with resulting statistics as e.g. in SFG1 for each subgroup of interest.\n\nCodetables_all &lt;- function(filter_var, filter_condition, sub_var) {\n  dataset &lt;- adtte %&gt;%\n    filter(!!as.name(filter_var) == filter_condition)\n  if (nrow(dataset) == 0) {\n    stop(paste(\"Subset\", filter_var, \"==\", filter_condition, \"is empty\"))\n  }\n  tbl &lt;- extract_survival_subgroups(\n    variables = list(\n      tte = \"AVAL\",\n      is_event = \"is_event\",\n      arm = \"ARM_BIN\",\n      subgroups = sub_var\n    ),\n    label_all = \"ITT\",\n    data = dataset\n  )\n  basic_table() %&gt;%\n    tabulate_survival_subgroups(\n      df = tbl,\n      vars = c(\"n_tot_events\", \"n\", \"n_events\", \"median\", \"hr\", \"ci\"),\n      time_unit = dataset$AVALU[1]\n    )\n}\n\n\nThen we can call this helper function on the subsets we are interested in and have prepared in the above data setup chunk. Note that e.g. the levels for AGE_BIN mentioned in the filter_condition argument need to be aligned with the AGE_probs cutoff(s) specified above. Otherwise the subset might be empty and an according error message is shown.\n\nCodetables_list &lt;- list(\n  tables_all(filter_var = \"SEX\", filter_condition = \"F\", sub_var = \"BEP01FL\"),\n  tables_all(filter_var = \"SEX\", filter_condition = \"M\", sub_var = \"BEP01FL\"),\n  tables_all(filter_var = \"AGE_BIN\", filter_condition = \"[0%,50%]\", sub_var = \"BEP01FL\"),\n  tables_all(filter_var = \"AGE_BIN\", filter_condition = \"(50%,100%]\", sub_var = \"BEP01FL\")\n)\n\n\nWe can then add subtitles for each subtable, rbind() them together and produce the forest plot using the g_forest() function. Similarly as in SFG3 we need to specify the col_x, col_y and forest_header arguments for g_forest() by recovering them from one of the original tables.\nFor adding subtitles we use a small helper function:\n\nCodeadd_subtitle &lt;- function(sub_tab, sub_title) {\n  label_at_path(sub_tab, path = row_paths(sub_tab)[[1]][1]) &lt;- sub_title\n  sub_tab\n}\n\n\nSo we can use this now:\n\nCodeone_table &lt;- tables_list[[1]]\nresult &lt;- rbind(\n  add_subtitle(tables_list[[1]], \"SEX = F\"),\n  add_subtitle(tables_list[[2]], \"SEX = M\"),\n  add_subtitle(tables_list[[3]], \"AGE_BIN = [0%,50%]\"),\n  add_subtitle(tables_list[[4]], \"AGE_BIN = (50%,100%]\")\n)\ng_forest(\n  result,\n  col_x = attr(one_table, \"col_x\"),\n  col_ci = attr(one_table, \"col_ci\"),\n  forest_header = attr(one_table, \"forest_header\"),\n  col_symbol_size = attr(one_table, \"col_symbol_size\")\n)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.3.9016       rtables_0.6.6.9010   \n[4] magrittr_2.0.3        formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.6-5      gtable_0.3.4      jsonlite_1.8.8    compiler_4.3.2   \n [5] tidyselect_1.2.0  tidyr_1.3.1       splines_4.3.2     scales_1.3.0     \n [9] yaml_2.3.8        fastmap_1.1.1     lattice_0.22-5    ggplot2_3.4.4    \n[13] R6_2.5.1          labeling_0.4.3    generics_0.1.3    knitr_1.45       \n[17] forcats_1.0.0     rbibutils_2.2.16  htmlwidgets_1.6.4 backports_1.4.1  \n[21] checkmate_2.3.1   tibble_3.2.1      munsell_0.5.0     scda_0.1.6.9016  \n[25] pillar_1.9.0      rlang_1.1.3       utf8_1.2.4        stringi_1.8.3    \n[29] broom_1.0.5       xfun_0.41         cli_3.6.2         withr_3.0.0      \n[33] Rdpack_2.6        digest_0.6.34     grid_4.3.2        cowplot_1.1.3    \n[37] lifecycle_1.0.4   vctrs_0.6.5       evaluate_0.23     glue_1.7.0       \n[41] farver_2.1.1      codetools_0.2-19  survival_3.5-7    fansi_1.0.6      \n[45] colorspace_2.1-0  rmarkdown_2.25    purrr_1.0.2       tools_4.3.2      \n[49] pkgconfig_2.0.3   htmltools_0.5.7  \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "SFG",
      "SFG5"
    ]
  },
  {
    "objectID": "graphs/SFG5/setup.html#setup",
    "href": "graphs/SFG5/setup.html#setup",
    "title": "",
    "section": "Setup",
    "text": "Setup\nWe prepare the data similarly as in SFG1.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nAGE_probs &lt;- 0.5\n\nadtte &lt;- random.cdisc.data::cadtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(\n    PARAMCD == \"OS\"\n  ) %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0,\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = \"B: Placebo\",\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    ),\n    AGE_BIN = cut_quantile_bins(AGE, probs = AGE_probs),\n    BMRKR2 = fct_explicit_na_if(BMRKR2, BEP01FL == \"N\"),\n    BMRKR2_BIN = fct_collapse_only(\n      BMRKR2,\n      High = \"HIGH\",\n      Low = c(\"MEDIUM\", \"LOW\")\n    )\n  ) %&gt;%\n  var_relabel(\n    BEP01FL = \"BEP\",\n    BMRKR2_BIN = \"Biomarker (Binary)\"\n  )"
  },
  {
    "objectID": "graphs/SFG5/sfg05b.html",
    "href": "graphs/SFG5/sfg05b.html",
    "title": "SFG5B",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nWe prepare the data similarly as in SFG1.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nAGE_probs &lt;- 0.5\n\nadtte &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(\n    PARAMCD == \"OS\"\n  ) %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0,\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = \"B: Placebo\",\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    ),\n    AGE_BIN = cut_quantile_bins(AGE, probs = AGE_probs),\n    BMRKR2 = fct_explicit_na_if(BMRKR2, BEP01FL == \"N\"),\n    BMRKR2_BIN = fct_collapse_only(\n      BMRKR2,\n      High = \"HIGH\",\n      Low = c(\"MEDIUM\", \"LOW\")\n    )\n  ) %&gt;%\n  var_relabel(\n    BEP01FL = \"BEP\",\n    BMRKR2_BIN = \"Biomarker (Binary)\"\n  )\n\n\n\n\nWe use the same tables_all() function above and combine all subtables using rbind() to tabulate statistics to be able to use as an input for forest plot.\n\nCodetables_all &lt;- function(filter_var, filter_condition, sub_var) {\n  dataset &lt;- adtte %&gt;%\n    filter(!!as.name(filter_var) == filter_condition)\n  if (nrow(dataset) == 0) {\n    stop(paste(\"Subset\", filter_var, \"==\", filter_condition, \"is empty\"))\n  }\n  tbl &lt;- extract_survival_subgroups(\n    variables = list(\n      tte = \"AVAL\",\n      is_event = \"is_event\",\n      arm = \"ARM_BIN\",\n      subgroups = sub_var\n    ),\n    label_all = \"ITT\",\n    data = dataset\n  )\n  basic_table() %&gt;%\n    tabulate_survival_subgroups(\n      df = tbl,\n      vars = c(\"n_tot_events\", \"n\", \"n_events\", \"median\", \"hr\", \"ci\"),\n      time_unit = dataset$AVALU[1]\n    )\n}\n\nadd_subtitle &lt;- function(sub_tab, sub_title) {\n  label_at_path(sub_tab, path = row_paths(sub_tab)[[1]][1]) &lt;- sub_title\n  sub_tab\n}\n\ntables_list &lt;- list(\n  tables_all(filter_var = \"SEX\", filter_condition = \"F\", sub_var = c(\"BEP01FL\", \"BMRKR2_BIN\")),\n  tables_all(filter_var = \"SEX\", filter_condition = \"M\", sub_var = c(\"BEP01FL\", \"BMRKR2_BIN\")),\n  tables_all(filter_var = \"AGE_BIN\", filter_condition = \"[0%,50%]\", sub_var = c(\"BEP01FL\", \"BMRKR2_BIN\")),\n  tables_all(filter_var = \"AGE_BIN\", filter_condition = \"(50%,100%]\", sub_var = c(\"BEP01FL\", \"BMRKR2_BIN\"))\n)\n\n\nWe can now produce the forest plot using the g_forest() function.\n\nCodeone_table &lt;- tables_list[[1]]\nresult &lt;- rbind(\n  add_subtitle(tables_list[[1]], \"SEX = F\"),\n  add_subtitle(tables_list[[2]], \"SEX = M\"),\n  add_subtitle(tables_list[[3]], \"AGE_BIN = [0%,50%]\"),\n  add_subtitle(tables_list[[4]], \"AGE_BIN = (50%,100%]\")\n)\ng_forest(\n  result,\n  col_x = attr(one_table, \"col_x\"),\n  col_ci = attr(one_table, \"col_ci\"),\n  forest_header = attr(one_table, \"forest_header\"),\n  col_symbol_size = attr(one_table, \"col_symbol_size\")\n)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.3.9016       rtables_0.6.6.9010   \n[4] magrittr_2.0.3        formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.6-5      gtable_0.3.4      jsonlite_1.8.8    compiler_4.3.2   \n [5] tidyselect_1.2.0  tidyr_1.3.1       splines_4.3.2     scales_1.3.0     \n [9] yaml_2.3.8        fastmap_1.1.1     lattice_0.22-5    ggplot2_3.4.4    \n[13] R6_2.5.1          labeling_0.4.3    generics_0.1.3    knitr_1.45       \n[17] forcats_1.0.0     rbibutils_2.2.16  htmlwidgets_1.6.4 backports_1.4.1  \n[21] checkmate_2.3.1   tibble_3.2.1      munsell_0.5.0     scda_0.1.6.9016  \n[25] pillar_1.9.0      rlang_1.1.3       utf8_1.2.4        stringi_1.8.3    \n[29] broom_1.0.5       xfun_0.41         cli_3.6.2         withr_3.0.0      \n[33] Rdpack_2.6        digest_0.6.34     grid_4.3.2        cowplot_1.1.3    \n[37] lifecycle_1.0.4   vctrs_0.6.5       evaluate_0.23     glue_1.7.0       \n[41] farver_2.1.1      codetools_0.2-19  survival_3.5-7    fansi_1.0.6      \n[45] colorspace_2.1-0  rmarkdown_2.25    purrr_1.0.2       tools_4.3.2      \n[49] pkgconfig_2.0.3   htmltools_0.5.7  \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "SFG",
      "SFG5",
      "SFG5B"
    ]
  },
  {
    "objectID": "graphs/KG2/setup.html#setup",
    "href": "graphs/KG2/setup.html#setup",
    "title": "",
    "section": "Setup",
    "text": "Setup\nThe same setup as in KG1 is used.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte &lt;- random.cdisc.data::cadtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"OS\") %&gt;%\n  mutate(is_event = CNSR == 0)\n\nvariables &lt;- list(tte = \"AVAL\", is_event = \"is_event\", arm = \"ARM\")"
  },
  {
    "objectID": "graphs/RFG1/rfg01a.html",
    "href": "graphs/RFG1/rfg01a.html",
    "title": "RFG1A",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nThese templates are helpful when we are interested in the odds ratios between two groups, usually two treatment arms. We would like to assess how the odds ratio changes when we look at different subgroups, often defined by categorical biomarker variables, e.g.\nWe will use the synthetic_cdisc_data$adrs data set from the scda package to create the response forest graph. We start by filtering the adrs data set for the Best Confirmed Overall Response by Investigator and patients with measurable disease at baseline (BMEASIFL == \"Y\"). We create a new variable for response information (we define response patients to include CR and PR patients), and binarize the ARM variable. We also fix a data artifact by setting the categorical biomarker variable BMRKR2 to an explicit &lt;Missing&gt; level for the non-biomarker evaluable population.\nWe also relabel the biomarker evaluable population flag variable BEP01FL and the categorical biomarker variable BMRKR2 to update the display label of these variables in the graph.\n\nCodelibrary(tern)\nlibrary(ggplot2.utils)\nlibrary(dplyr)\n\nadrs &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adrs %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"BESRSPI\", BMEASIFL == \"Y\") %&gt;%\n  mutate(\n    is_rsp = AVALC %in% c(\"CR\", \"PR\"),\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = c(\"B: Placebo\"),\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    ),\n    BMRKR2 = fct_explicit_na_if(BMRKR2, BEP01FL == \"N\")\n  ) %&gt;%\n  var_relabel(\n    BEP01FL = \"BEP\",\n    BMRKR2 = \"Biomarker (Categorical)\"\n  )\n\n\n\n\nWe define a binned factor variable BMRKR1_cut from the continuous biomarker variable BMRKR1 to illustrate. Note that the remaining code would work the same for an originally categorical biomarker.\n\nCodeBMRKR1_cutpoint &lt;- 5\n\nadrs2 &lt;- adrs %&gt;%\n  mutate(\n    BMRKR1 = ifelse(BEP01FL == \"N\", NA, BMRKR1),\n    BMRKR1_cut = explicit_na(factor(\n      ifelse(BMRKR1 &gt; BMRKR1_cutpoint, \"Greater\", \"Less\")\n    ))\n  ) %&gt;%\n  var_relabel(BMRKR1_cut = \"Biomarker (Binned Continuous)\")\n\ndf &lt;- extract_rsp_subgroups(\n  variables = list(\n    rsp = \"is_rsp\",\n    arm = \"ARM_BIN\",\n    subgroups = c(\"BMRKR1_cut\", \"BMRKR2\")\n  ),\n  data = adrs2,\n  conf_level = 0.95\n)\n\nresult &lt;- basic_table() %&gt;%\n  tabulate_rsp_subgroups(df, vars = c(\"n_tot\", \"n\", \"n_rsp\", \"prop\", \"or\", \"ci\"))\n\n\nWe can remove the first line showing the All Patients category from the result table as follows.\n\nCoderesult &lt;- result[-1, , keep_topleft = TRUE]\n\n\nWe can then produce the forest plot again using g_forest() on this trimmed result table.\n\nCodeg_forest(result)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           ggplot2.utils_0.3.1   ggplot2_3.4.4        \n[4] tern_0.9.3.9016       rtables_0.6.6.9010    magrittr_2.0.3       \n[7] formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.4        generics_0.1.3    tidyr_1.3.1       scda_0.1.6.9016  \n [5] EnvStats_2.8.1    stringi_1.8.3     lattice_0.22-5    digest_0.6.34    \n [9] evaluate_0.23     grid_4.3.2        fastmap_1.1.1     jsonlite_1.8.8   \n[13] Matrix_1.6-5      backports_1.4.1   survival_3.5-7    purrr_1.0.2      \n[17] fansi_1.0.6       scales_1.3.0      codetools_0.2-19  Rdpack_2.6       \n[21] cli_3.6.2         ggpp_0.5.6        rlang_1.1.3       rbibutils_2.2.16 \n[25] cowplot_1.1.3     munsell_0.5.0     splines_4.3.2     withr_3.0.0      \n[29] yaml_2.3.8        tools_4.3.2       polynom_1.4-1     checkmate_2.3.1  \n[33] colorspace_2.1-0  forcats_1.0.0     ggstats_0.5.1     broom_1.0.5      \n[37] vctrs_0.6.5       R6_2.5.1          lifecycle_1.0.4   htmlwidgets_1.6.4\n[41] MASS_7.3-60.0.1   pkgconfig_2.0.3   pillar_1.9.0      gtable_0.3.4     \n[45] glue_1.7.0        xfun_0.41         tibble_3.2.1      tidyselect_1.2.0 \n[49] knitr_1.45        farver_2.1.1      htmltools_0.5.7   labeling_0.4.3   \n[53] rmarkdown_2.25    compiler_4.3.2   \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "RFG",
      "RFG1",
      "RFG1A"
    ]
  },
  {
    "objectID": "graphs/RFG1/rfg01.html",
    "href": "graphs/RFG1/rfg01.html",
    "title": "RFG1",
    "section": "",
    "text": "Setup\nPlot\nSession Info\n\n\n\nThese templates are helpful when we are interested in the odds ratios between two groups, usually two treatment arms. We would like to assess how the odds ratio changes when we look at different subgroups, often defined by categorical biomarker variables, e.g.\nWe will use the synthetic_cdisc_data$adrs data set from the scda package to create the response forest graph. We start by filtering the adrs data set for the Best Confirmed Overall Response by Investigator and patients with measurable disease at baseline (BMEASIFL == \"Y\"). We create a new variable for response information (we define response patients to include CR and PR patients), and binarize the ARM variable. We also fix a data artifact by setting the categorical biomarker variable BMRKR2 to an explicit &lt;Missing&gt; level for the non-biomarker evaluable population.\nWe also relabel the biomarker evaluable population flag variable BEP01FL and the categorical biomarker variable BMRKR2 to update the display label of these variables in the graph.\n\nCodelibrary(tern)\nlibrary(ggplot2.utils)\nlibrary(dplyr)\n\nadrs &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adrs %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"BESRSPI\", BMEASIFL == \"Y\") %&gt;%\n  mutate(\n    is_rsp = AVALC %in% c(\"CR\", \"PR\"),\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = c(\"B: Placebo\"),\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    ),\n    BMRKR2 = fct_explicit_na_if(BMRKR2, BEP01FL == \"N\")\n  ) %&gt;%\n  var_relabel(\n    BEP01FL = \"BEP\",\n    BMRKR2 = \"Biomarker (Categorical)\"\n  )\n\n\n\n\nWe calculate the response forest graph subgroup results with extract_rsp_subgroups() and then use the function tabulate_rsp_subgroups() to tabulate the required statistics estimates specified in vars.\n\nCodedf &lt;- extract_rsp_subgroups(\n  variables = list(\n    rsp = \"is_rsp\",\n    arm = \"ARM_BIN\",\n    subgroups = c(\"BEP01FL\", \"BMRKR2\")\n  ),\n  data = adrs,\n  conf_level = 0.95\n)\n\nresult &lt;- basic_table() %&gt;%\n  tabulate_rsp_subgroups(df, vars = c(\"n_tot\", \"n\", \"n_rsp\", \"prop\", \"or\", \"ci\"))\n\n\nWe can then produce the final forest plot using g_forest() function based on this result table.\n\nCodeg_forest(result)\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           ggplot2.utils_0.3.1   ggplot2_3.4.4        \n[4] tern_0.9.3.9016       rtables_0.6.6.9010    magrittr_2.0.3       \n[7] formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.4        generics_0.1.3    tidyr_1.3.1       scda_0.1.6.9016  \n [5] EnvStats_2.8.1    stringi_1.8.3     lattice_0.22-5    digest_0.6.34    \n [9] evaluate_0.23     grid_4.3.2        fastmap_1.1.1     jsonlite_1.8.8   \n[13] Matrix_1.6-5      backports_1.4.1   survival_3.5-7    purrr_1.0.2      \n[17] fansi_1.0.6       scales_1.3.0      codetools_0.2-19  Rdpack_2.6       \n[21] cli_3.6.2         ggpp_0.5.6        rlang_1.1.3       rbibutils_2.2.16 \n[25] cowplot_1.1.3     munsell_0.5.0     splines_4.3.2     withr_3.0.0      \n[29] yaml_2.3.8        tools_4.3.2       polynom_1.4-1     checkmate_2.3.1  \n[33] colorspace_2.1-0  forcats_1.0.0     ggstats_0.5.1     broom_1.0.5      \n[37] vctrs_0.6.5       R6_2.5.1          lifecycle_1.0.4   htmlwidgets_1.6.4\n[41] MASS_7.3-60.0.1   pkgconfig_2.0.3   pillar_1.9.0      gtable_0.3.4     \n[45] glue_1.7.0        xfun_0.41         tibble_3.2.1      tidyselect_1.2.0 \n[49] knitr_1.45        farver_2.1.1      htmltools_0.5.7   labeling_0.4.3   \n[53] rmarkdown_2.25    compiler_4.3.2   \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "RFG"
    ]
  },
  {
    "objectID": "graphs/rnag07.html",
    "href": "graphs/rnag07.html",
    "title": "RNAG7",
    "section": "",
    "text": "Setup: Import, Filter and Normalize\nBoxplot for Single Gene Expression Values\nBoxplot for Multiple Genes Expression Values\nBoxplot for Gene Signatures\nAdditional Options for Customization\nTeal Module for Boxplot\nSession Info\n\n\n\nThis page can be used as a template of how to create boxplots for RNA-seq gene expression data using available hermes, and to create interactive boxplot for RNA-seq gene expression analysis using teal.modules.hermes.\nThe draw_boxplot() function used below needs HermesData as input. See RNAG1 for details on how to import, filter and normalize HermesData.\n\nCodelibrary(hermes)\nobject &lt;- hermes_data %&gt;%\n  add_quality_flags() %&gt;%\n  filter() %&gt;%\n  normalize()\n\n\n\n\nWe can create boxplots for expression values of single genes by providing the gene ID in a gene_spec (gene specification) as follows.\n\nCodedraw_boxplot(\n  object = object,\n  assay_name = \"counts\",\n  genes = gene_spec(\"GeneID:11185\")\n)\n\n\n\n\n\n\n\n\n\nWe can also create boxplots for multiple genes next to each other, simply by specifying multiple gene IDs in the gene_spec. Note that names given to the gene ID vector are used in the plot instead of the IDs.\n\nCodedraw_boxplot(\n  object = object,\n  assay_name = \"counts\",\n  genes = gene_spec(c(\n    A = \"GeneID:11185\", B = \"GeneID:10677\", C = \"GeneID:286205\", D = \"GeneID:8365\", E = \"GeneID:6804\"\n  ))\n)\n\n\n\n\n\n\n\n\n\nWe can also specify a gene summary function for multiple genes, thereby using the corresponding gene signature. Note that here we just want to use the first 6 genes from the object without explicitly specifying the gene IDs, and this can be done through the genes() function in hermes.\n\nCodedraw_boxplot(\n  object = object,\n  assay_name = \"counts\",\n  genes = gene_spec(genes(object)[1:6], fun = colMeans)\n)\n\n\n\n\n\n\n\n\n\nWe can add sample variables for stratification (x_var), faceting (facet_var) or coloring (color_var).\n\nCodedraw_boxplot(\n  object = object,\n  assay_name = \"counts\",\n  genes = gene_spec(genes(object)[1]),\n  x_var = \"AGE18\",\n  facet_var = \"SEX\",\n  color_var = \"RACE\"\n)\n\n\n\n\n\n\n\nWe can also add jittering to the data points overlaying the boxplot using the jitter flag.\n\nCodedraw_boxplot(\n  object = object,\n  assay_name = \"counts\",\n  genes = gene_spec(genes(object)[1]),\n  jitter = TRUE\n)\n\n\n\n\n\n\n\nWe can also create violin plots instead of boxplots using the violin flag.\n\nCodedraw_boxplot(\n  object = object,\n  assay_name = \"counts\",\n  genes = gene_spec(genes(object)[1]),\n  violin = TRUE\n)\n\n\n\n\n\n\n\n\n\nWe start by importing a MultiAssayExperiment; here we use the example multi_assay_experiment available in hermes. It is wrapped as a teal::dataset. We can then use the provided teal module tm_g_boxplot to have a boxplot module in our teal app.\n\nCodelibrary(teal.modules.hermes)\n\ndata &lt;- teal_data()\ndata &lt;- within(data, {\n  library(hermes)\n  MAE &lt;- multi_assay_experiment\n})\ndatanames(data) &lt;- \"MAE\"\n\napp &lt;- init(\n  data = data,\n  modules = modules(\n    tm_g_boxplot(\n      label = \"boxplot\",\n      mae_name = \"MAE\"\n    )\n  )\n)\n\n[INFO] 2024-02-23 15:47:26.2982 pid:10889 token:[] teal.modules.hermes Initializing tm_g_boxplot\n\nCodeshinyApp(app$ui, app$server)\n\n[INFO] 2024-02-23 15:47:27.8947 pid:10889 token:[0f2d3bf2] teal Initializing reporter_previewer_module\n\n\nWarning: 'experiments' dropped; see 'drops()'\n\n\n\n\n\n\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] teal.modules.hermes_0.1.6.9003 teal_0.15.1.9000              \n [3] teal.slice_0.5.0.9003          teal.data_0.5.0.9000          \n [5] teal.code_0.5.0.9003           shiny_1.8.0                   \n [7] hermes_1.7.1.9000              SummarizedExperiment_1.32.0   \n [9] Biobase_2.62.0                 GenomicRanges_1.54.1          \n[11] GenomeInfoDb_1.38.5            IRanges_2.36.0                \n[13] S4Vectors_0.40.2               BiocGenerics_0.48.1           \n[15] MatrixGenerics_1.14.0          matrixStats_1.2.0             \n[17] ggfortify_0.4.16               ggplot2_3.4.4                 \n\nloaded via a namespace (and not attached):\n  [1] RColorBrewer_1.1-3          jsonlite_1.8.8             \n  [3] shape_1.4.6                 MultiAssayExperiment_1.28.0\n  [5] magrittr_2.0.3              farver_2.1.1               \n  [7] rmarkdown_2.25              GlobalOptions_0.1.2        \n  [9] zlibbioc_1.48.0             vctrs_0.6.5                \n [11] memoise_2.0.1               RCurl_1.98-1.14            \n [13] webshot_0.5.5               BiocBaseUtils_1.5.0        \n [15] htmltools_0.5.7             S4Arrays_1.2.0             \n [17] forcats_1.0.0               progress_1.2.3             \n [19] curl_5.2.0                  SparseArray_1.2.3          \n [21] sass_0.4.8                  bslib_0.6.1                \n [23] fontawesome_0.5.2           htmlwidgets_1.6.4          \n [25] testthat_3.2.1              cachem_1.0.8               \n [27] teal.widgets_0.4.2.9005     mime_0.12                  \n [29] lifecycle_1.0.4             iterators_1.0.14           \n [31] pkgconfig_2.0.3             webshot2_0.1.1             \n [33] Matrix_1.6-5                R6_2.5.1                   \n [35] fastmap_1.1.1               GenomeInfoDbData_1.2.11    \n [37] rbibutils_2.2.16            clue_0.3-65                \n [39] digest_0.6.34               colorspace_2.1-0           \n [41] shinycssloaders_1.0.0       ps_1.7.6                   \n [43] AnnotationDbi_1.64.1        DESeq2_1.42.0              \n [45] RSQLite_2.3.5               filelock_1.0.3             \n [47] labeling_0.4.3              fansi_1.0.6                \n [49] httr_1.4.7                  abind_1.4-5                \n [51] compiler_4.3.2              bit64_4.0.5                \n [53] withr_3.0.0                 doParallel_1.0.17          \n [55] backports_1.4.1             BiocParallel_1.36.0        \n [57] DBI_1.2.1                   logger_0.2.2               \n [59] biomaRt_2.58.0              rappdirs_0.3.3             \n [61] DelayedArray_0.28.0         rjson_0.2.21               \n [63] chromote_0.1.2              tools_4.3.2                \n [65] httpuv_1.6.13               glue_1.7.0                 \n [67] callr_3.7.3                 promises_1.2.1             \n [69] grid_4.3.2                  checkmate_2.3.1            \n [71] cluster_2.1.6               generics_0.1.3             \n [73] gtable_0.3.4                websocket_1.4.1            \n [75] tidyr_1.3.1                 hms_1.1.3                  \n [77] xml2_1.3.6                  utf8_1.2.4                 \n [79] XVector_0.42.0              ggrepel_0.9.5              \n [81] foreach_1.5.2               pillar_1.9.0               \n [83] stringr_1.5.1               limma_3.58.1               \n [85] later_1.3.2                 circlize_0.4.15            \n [87] dplyr_1.1.4                 BiocFileCache_2.10.1       \n [89] lattice_0.22-5              bit_4.0.5                  \n [91] tidyselect_1.2.0            ComplexHeatmap_2.18.0      \n [93] locfit_1.5-9.8              Biostrings_2.70.1          \n [95] knitr_1.45                  gridExtra_2.3              \n [97] teal.logger_0.1.3.9011      edgeR_4.0.12               \n [99] xfun_0.41                   statmod_1.5.0              \n[101] brio_1.1.4                  stringi_1.8.3              \n[103] yaml_2.3.8                  shinyWidgets_0.8.1         \n[105] evaluate_0.23               codetools_0.2-19           \n[107] tibble_3.2.1                cli_3.6.2                  \n[109] xtable_1.8-4                Rdpack_2.6                 \n[111] processx_3.8.3              jquerylib_0.1.4            \n[113] munsell_0.5.0               teal.reporter_0.3.0.9003   \n[115] Rcpp_1.0.12                 dbplyr_2.4.0               \n[117] png_0.1-8                   XML_3.99-0.16.1            \n[119] parallel_4.3.2              ellipsis_0.3.2             \n[121] assertthat_0.2.1            blob_1.2.4                 \n[123] prettyunits_1.2.0           bitops_1.0-7               \n[125] scales_1.3.0                purrr_1.0.2                \n[127] crayon_1.5.2                GetoptLong_1.0.5           \n[129] rlang_1.1.3                 formatR_1.14               \n[131] KEGGREST_1.42.0             shinyjs_2.1.0              \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Graphs",
      "RNAG",
      "RNAG7"
    ]
  },
  {
    "objectID": "tables/TET1/tet01a.html",
    "href": "tables/TET1/tet01a.html",
    "title": "TET1A",
    "section": "",
    "text": "Setup\nTable\nSession Info\n\n\n\nWe will use the synthetic_cdisc_data$adtte data set from the scda package for the time-to-event summary table. We start by filtering the adtte data set for the overall survival observations, converting time of overall survival to months, creating new variables for event and non-event information and binarizing the ARM variable.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(\n    PARAMCD == \"OS\"\n  ) %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0,\n    is_not_event = CNSR == 1,\n    ARM_BIN = fct_collapse_only(\n      ARM,\n      CTRL = c(\"B: Placebo\"),\n      TRT = c(\"A: Drug X\", \"C: Combination\")\n    )\n  )\n\n\n\n\nWe can add the summary of an analysis with Cox Proportional Hazards models stratified by SEX to the table above using coxph_pairwise().\n\nCodelyt &lt;- basic_table() %&gt;%\n  split_cols_by(\n    var = \"ARM_BIN\",\n    ref_group = \"CTRL\"\n  ) %&gt;%\n  add_colcounts() %&gt;%\n  summarize_vars(\n    vars = \"is_event\",\n    .stats = \"count_fraction\",\n    .labels = c(count_fraction = \"Patients with event (%)\"),\n    nested = FALSE,\n    show_labels = \"hidden\"\n  ) %&gt;%\n  summarize_vars(\n    vars = \"is_not_event\",\n    .stats = \"count_fraction\",\n    .labels = c(count_fraction = \"Patients without event (%)\"),\n    nested = FALSE,\n    show_labels = \"hidden\"\n  ) %&gt;%\n  surv_time(\n    vars = \"AVAL\",\n    var_labels = \"Time to Event (months)\",\n    is_event = \"is_event\",\n    table_names = \"time_to_event\"\n  ) %&gt;%\n  coxph_pairwise(\n    vars = \"AVAL\",\n    is_event = \"is_event\",\n    var_labels = c(\"Unstratified Analysis\"),\n    control = control_coxph(pval_method = \"log-rank\"),\n    table_names = \"coxph_unstratified\"\n  )\n\nWarning: `summarize_vars()` was deprecated in tern 0.8.5.9010.\nℹ Please use `analyze_vars()` instead.\n\nCodelyt2 &lt;- lyt %&gt;%\n  coxph_pairwise(\n    vars = \"AVAL\",\n    is_event = \"is_event\",\n    var_labels = c(\"Stratified Analysis\"),\n    strat = \"SEX\",\n    control = control_coxph(pval_method = \"log-rank\"),\n    table_names = \"coxph_stratified\"\n  )\n\nbuild_table(lyt2, adtte)\n\n                                 CTRL             TRT       \n                               (N=134)          (N=266)     \n————————————————————————————————————————————————————————————\nPatients with event (%)       87 (64.9%)      195 (73.3%)   \nPatients without event (%)    47 (35.1%)       71 (26.7%)   \nTime to Event (months)                                      \n  Median                         27.5             21.3      \n    95% CI                   (17.3, 30.2)     (16.3, 25.6)  \n  25% and 75%-ile             9.5, 54.9        7.1, 50.9    \n  Range                      0.0 to 122.4   0.1 to 154.7 {1}\nUnstratified Analysis                                       \n  p-value (log-rank)                             0.2146     \n  Hazard Ratio                                    1.17      \n  95% CI                                      (0.91, 1.51)  \nStratified Analysis                                         \n  p-value (log-rank)                             0.2072     \n  Hazard Ratio                                    1.18      \n  95% CI                                      (0.91, 1.52)  \n————————————————————————————————————————————————————————————\n\n{1} - Censored observation: range maximum\n————————————————————————————————————————————————————————————\n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.3.9016       rtables_0.6.6.9010   \n[4] magrittr_2.0.3        formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.6-5      gtable_0.3.4      jsonlite_1.8.8    compiler_4.3.2   \n [5] tidyselect_1.2.0  tidyr_1.3.1       splines_4.3.2     scales_1.3.0     \n [9] yaml_2.3.8        fastmap_1.1.1     lattice_0.22-5    ggplot2_3.4.4    \n[13] R6_2.5.1          generics_0.1.3    knitr_1.45        forcats_1.0.0    \n[17] rbibutils_2.2.16  htmlwidgets_1.6.4 backports_1.4.1   checkmate_2.3.1  \n[21] tibble_3.2.1      munsell_0.5.0     scda_0.1.6.9016   pillar_1.9.0     \n[25] rlang_1.1.3       utf8_1.2.4        stringi_1.8.3     broom_1.0.5      \n[29] xfun_0.41         cli_3.6.2         Rdpack_2.6        digest_0.6.34    \n[33] grid_4.3.2        lifecycle_1.0.4   vctrs_0.6.5       evaluate_0.23    \n[37] glue_1.7.0        codetools_0.2-19  survival_3.5-7    fansi_1.0.6      \n[41] colorspace_2.1-0  rmarkdown_2.25    purrr_1.0.2       tools_4.3.2      \n[45] pkgconfig_2.0.3   htmltools_0.5.7  \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Tables",
      "TET",
      "TET1",
      "TET1A"
    ]
  },
  {
    "objectID": "tables/cpmt03.html",
    "href": "tables/cpmt03.html",
    "title": "CPMT3",
    "section": "",
    "text": "Setup\nTable\nSession Info\n\n\n\nWe prepare the data in the same way as in CPMT1.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte &lt;- random.cdisc.data::cadtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"OS\", BEP01FL == \"Y\") %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    event = 1 - CNSR\n  )\n\n\n\n\nThe separate Cox Proportional Hazards models for each covariate can be fitted and summarized in a table using the summarize_coxreg() function in tern. This function takes the same variables, at, and control arguments that are used to fit a model using the fit_coxreg_univar() function - specifying the time, event and covariate in a variables list, and control and at with any further customizations to the model. Note that the default confidence level is 95% but this can be customized via the conf_level element in control.\nWe input these three arguments into the summarize_coxreg() function to summarize the model fit in a table layout, and then build the table with our pre-processed adtte data set.\n\nCodelyt &lt;- basic_table() %&gt;%\n  summarize_coxreg(\n    variables = list(\n      time = \"AVAL\",\n      event = \"event\",\n      covariates = c(\"COUNTRY\", \"AGE\")\n    )\n  )\n\nbuild_table(lyt = lyt, df = adtte)\n\n                              Hazard Ratio      95% CI      p-value\n———————————————————————————————————————————————————————————————————\nCovariate:                                                         \n  Country (reference = CHN)                                 0.1604 \n    USA                           1.67       (0.87, 3.19)   0.1230 \n    BRA                           0.43       (0.17, 1.07)   0.0698 \n    PAK                           0.38       (0.12, 1.22)   0.1043 \n    NGA                           1.67       (0.76, 3.66)   0.2048 \n    RUS                           0.91       (0.33, 2.50)   0.8488 \n    JPN                           1.40       (0.51, 3.85)   0.5206 \n    GBR                           0.78       (0.24, 2.49)   0.6738 \n    CAN                           1.31       (0.41, 4.21)   0.6460 \n  Age                                                              \n    All                           1.01       (0.98, 1.03)   0.5600 \n\n\n\n\n\nCodesessionInfo()\n\nR version 4.4.0 (2024-04-24)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 22.04.4 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.4.9008       rtables_0.6.7.9002   \n[4] magrittr_2.0.3        formatters_0.5.6.9005\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.7-0                  gtable_0.3.5                 \n [3] jsonlite_1.8.8                compiler_4.4.0               \n [5] tidyselect_1.2.1              stringr_1.5.1                \n [7] tidyr_1.3.1                   splines_4.4.0                \n [9] scales_1.3.0                  yaml_2.3.8                   \n[11] fastmap_1.2.0                 lattice_0.22-6               \n[13] ggplot2_3.5.1                 R6_2.5.1                     \n[15] generics_0.1.3                knitr_1.46                   \n[17] forcats_1.0.0                 rbibutils_2.2.16             \n[19] htmlwidgets_1.6.4             backports_1.4.1              \n[21] checkmate_2.3.1               tibble_3.2.1                 \n[23] car_3.1-2                     munsell_0.5.1                \n[25] pillar_1.9.0                  rlang_1.1.3                  \n[27] utf8_1.2.4                    stringi_1.8.4                \n[29] broom_1.0.6                   xfun_0.44                    \n[31] cli_3.6.2                     Rdpack_2.6                   \n[33] digest_0.6.35                 grid_4.4.0                   \n[35] lifecycle_1.0.4               vctrs_0.6.5                  \n[37] evaluate_0.23                 glue_1.7.0                   \n[39] codetools_0.2-20              abind_1.4-5                  \n[41] survival_3.6-4                carData_3.0-5                \n[43] random.cdisc.data_0.3.15.9004 fansi_1.0.6                  \n[45] colorspace_2.1-0              rmarkdown_2.27               \n[47] purrr_1.0.2                   tools_4.4.0                  \n[49] pkgconfig_2.0.3               htmltools_0.5.8.1            \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Tables",
      "CPMT",
      "CPMT3"
    ]
  },
  {
    "objectID": "tables/cpmt01.html",
    "href": "tables/cpmt01.html",
    "title": "CPMT1",
    "section": "",
    "text": "Setup\nTable\nSession Info\n\n\n\nWe will use the cadtte data set from the random.cdisc.data package to illustrate the tables. We start by selecting the biomarker evaluable population (BEP) and the time-to-event endpoint of interest, here overall survival. We then convert time of overall survival to months and create a new variable for the event information.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte &lt;- random.cdisc.data::cadtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"OS\", BEP01FL == \"Y\") %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    event = 1 - CNSR\n  )\n\n\n\n\nThe summarize_coxreg() function in tern takes the same variables, at, and control arguments that are used to fit a model using the fit_coxreg_univar() function - specifying the time, event and covariate in a variables list, and control and at with any further customizations to the model. Note that the default confidence level is 95% but this can be customized via the conf_level element in control.\nRather than fitting the model and then tidying the output via the broom::tidy() function, we can directly input these three arguments into the summarize_coxreg() function to summarize the model fit in a table layout, building the table with our pre-processed adtte data set.\n\nCodelyt &lt;- basic_table() %&gt;%\n  summarize_coxreg(variables = list(\n    time = \"AVAL\",\n    event = \"event\",\n    covariates = \"COUNTRY\"\n  ))\n\nbuild_table(lyt, adtte)\n\n                              Hazard Ratio      95% CI      p-value\n———————————————————————————————————————————————————————————————————\nCovariate:                                                         \n  Country (reference = CHN)                                 0.1604 \n    USA                           1.67       (0.87, 3.19)   0.1230 \n    BRA                           0.43       (0.17, 1.07)   0.0698 \n    PAK                           0.38       (0.12, 1.22)   0.1043 \n    NGA                           1.67       (0.76, 3.66)   0.2048 \n    RUS                           0.91       (0.33, 2.50)   0.8488 \n    JPN                           1.40       (0.51, 3.85)   0.5206 \n    GBR                           0.78       (0.24, 2.49)   0.6738 \n    CAN                           1.31       (0.41, 4.21)   0.6460 \n\n\n\n\n\nCodesessionInfo()\n\nR version 4.4.0 (2024-04-24)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 22.04.4 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.4.9008       rtables_0.6.7.9002   \n[4] magrittr_2.0.3        formatters_0.5.6.9005\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.7-0                  gtable_0.3.5                 \n [3] jsonlite_1.8.8                compiler_4.4.0               \n [5] tidyselect_1.2.1              stringr_1.5.1                \n [7] tidyr_1.3.1                   splines_4.4.0                \n [9] scales_1.3.0                  yaml_2.3.8                   \n[11] fastmap_1.2.0                 lattice_0.22-6               \n[13] ggplot2_3.5.1                 R6_2.5.1                     \n[15] generics_0.1.3                knitr_1.46                   \n[17] forcats_1.0.0                 rbibutils_2.2.16             \n[19] htmlwidgets_1.6.4             backports_1.4.1              \n[21] checkmate_2.3.1               tibble_3.2.1                 \n[23] car_3.1-2                     munsell_0.5.1                \n[25] pillar_1.9.0                  rlang_1.1.3                  \n[27] utf8_1.2.4                    stringi_1.8.4                \n[29] broom_1.0.6                   xfun_0.44                    \n[31] cli_3.6.2                     Rdpack_2.6                   \n[33] digest_0.6.35                 grid_4.4.0                   \n[35] lifecycle_1.0.4               vctrs_0.6.5                  \n[37] evaluate_0.23                 glue_1.7.0                   \n[39] codetools_0.2-20              abind_1.4-5                  \n[41] survival_3.6-4                carData_3.0-5                \n[43] random.cdisc.data_0.3.15.9004 fansi_1.0.6                  \n[45] colorspace_2.1-0              rmarkdown_2.27               \n[47] purrr_1.0.2                   tools_4.4.0                  \n[49] pkgconfig_2.0.3               htmltools_0.5.8.1            \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Tables",
      "CPMT"
    ]
  },
  {
    "objectID": "tables/CPMT2/setup.html#setup",
    "href": "tables/CPMT2/setup.html#setup",
    "title": "",
    "section": "Setup",
    "text": "Setup\nWe prepare the data similarly as in CPMT1.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadtte &lt;- random.cdisc.data::cadtte %&gt;%\n  df_explicit_na() %&gt;%\n  filter(PARAMCD == \"OS\", BEP01FL == \"Y\") %&gt;%\n  mutate(\n    AVAL = day2month(AVAL),\n    AVALU = \"Months\",\n    is_event = CNSR == 0\n  ) %&gt;%\n  var_relabel(\n    BMRKR1 = \"Biomarker (Continuous)\",\n    BMRKR2 = \"Biomarker (Categorical)\"\n  )"
  },
  {
    "objectID": "tables/DT1/dt01c.html",
    "href": "tables/DT1/dt01c.html",
    "title": "DT1C",
    "section": "",
    "text": "Setup\nTable\nSession Info\n\n\n\nThe tables below compare the overall population (“All”) with the biomarker evaluable population (“BEP”) with regards to selected demographic variables.\nWe will use the synthetic_cdisc_data$adsl data set from the scda package to illustrate the tables. We add a second artificial BEP flag variable BEP02FL.\nIn order to compare All with BEP, we need to define a list bep_groups defining these two groups. The reason is that these two groups are overlapping (BEP is a subset of All). Here, we refer in the list elements to the levels Y and N of the biomarker population flag variable BEP01FL from adsl which we will use below:\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nset.seed(123)\nadsl &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adsl %&gt;%\n  df_explicit_na() %&gt;%\n  mutate(BEP02FL = factor(sample(c(\"Y\", \"N\"), size = n(), replace = TRUE)))\n\nbep_groups &lt;- list(\n  \"All\" = c(\"Y\", \"N\"),\n  \"BEP\" = \"Y\"\n)\n\n\nThis can then be used by the tern layout function split_cols_by_groups() below.\n\n\nWe can of course use a different BEP factor variable BEP02FL with corresponding groups definition bep2_groups in the demographics table DT1.\n\nCodebep2_groups &lt;- list(\n  \"All\" = c(\"Y\", \"N\"),\n  \"BEP2\" = \"Y\"\n)\n\nlyt &lt;- basic_table() %&gt;%\n  split_cols_by(\"ARM\") %&gt;%\n  split_cols_by_groups(\"BEP02FL\", bep2_groups) %&gt;%\n  summarize_vars(c(\"AGE\", \"SEX\")) %&gt;%\n  add_colcounts()\n\nWarning: `summarize_vars()` was deprecated in tern 0.8.5.9010.\nℹ Please use `analyze_vars()` instead.\n\nCodebuild_table(lyt, adsl)\n\n                      A: Drug X                  B: Placebo                C: Combination      \n                  All          BEP2           All          BEP2           All          BEP2    \n                (N=134)       (N=68)        (N=134)       (N=75)        (N=132)       (N=68)   \n———————————————————————————————————————————————————————————————————————————————————————————————\nAGE                                                                                            \n  n               134           68            134           75            132           68     \n  Mean (SD)   33.8 (6.6)    32.3 (6.2)    35.4 (7.9)    35.5 (7.4)    35.4 (7.7)    35.3 (6.7) \n  Median         33.0          31.0          35.0          36.0          35.0          35.0    \n  Min - Max   21.0 - 50.0   21.0 - 47.0   21.0 - 62.0   23.0 - 58.0   20.0 - 69.0   21.0 - 49.0\nSEX                                                                                            \n  n               134           68            134           75            132           68     \n  F            79 (59%)     42 (61.8%)    82 (61.2%)     48 (64%)      70 (53%)      34 (50%)  \n  M            55 (41%)     26 (38.2%)    52 (38.8%)     27 (36%)      62 (47%)      34 (50%)  \n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.3.9016       rtables_0.6.6.9010   \n[4] magrittr_2.0.3        formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.6-5      gtable_0.3.4      jsonlite_1.8.8    compiler_4.3.2   \n [5] tidyselect_1.2.0  tidyr_1.3.1       splines_4.3.2     scales_1.3.0     \n [9] yaml_2.3.8        fastmap_1.1.1     lattice_0.22-5    ggplot2_3.4.4    \n[13] R6_2.5.1          generics_0.1.3    knitr_1.45        forcats_1.0.0    \n[17] rbibutils_2.2.16  htmlwidgets_1.6.4 backports_1.4.1   checkmate_2.3.1  \n[21] tibble_3.2.1      munsell_0.5.0     scda_0.1.6.9016   pillar_1.9.0     \n[25] rlang_1.1.3       utf8_1.2.4        stringi_1.8.3     broom_1.0.5      \n[29] xfun_0.41         cli_3.6.2         Rdpack_2.6        digest_0.6.34    \n[33] grid_4.3.2        lifecycle_1.0.4   vctrs_0.6.5       evaluate_0.23    \n[37] glue_1.7.0        codetools_0.2-19  survival_3.5-7    fansi_1.0.6      \n[41] colorspace_2.1-0  rmarkdown_2.25    purrr_1.0.2       tools_4.3.2      \n[45] pkgconfig_2.0.3   htmltools_0.5.7  \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Tables",
      "DT",
      "DT1",
      "DT1C"
    ]
  },
  {
    "objectID": "tables/DT1/dt01b.html",
    "href": "tables/DT1/dt01b.html",
    "title": "DT1B",
    "section": "",
    "text": "Setup\nTable\nSession Info\n\n\n\nThe tables below compare the overall population (“All”) with the biomarker evaluable population (“BEP”) with regards to selected demographic variables.\nWe will use the synthetic_cdisc_data$adsl data set from the scda package to illustrate the tables. We add a second artificial BEP flag variable BEP02FL.\nIn order to compare All with BEP, we need to define a list bep_groups defining these two groups. The reason is that these two groups are overlapping (BEP is a subset of All). Here, we refer in the list elements to the levels Y and N of the biomarker population flag variable BEP01FL from adsl which we will use below:\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nset.seed(123)\nadsl &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adsl %&gt;%\n  df_explicit_na() %&gt;%\n  mutate(BEP02FL = factor(sample(c(\"Y\", \"N\"), size = n(), replace = TRUE)))\n\nbep_groups &lt;- list(\n  \"All\" = c(\"Y\", \"N\"),\n  \"BEP\" = \"Y\"\n)\n\n\nThis can then be used by the tern layout function split_cols_by_groups() below.\n\n\nIt is simple to omit the treatment arm split in the demographics table DT1, thus effectively combining the treatment arms.\n\nCodelyt &lt;- basic_table() %&gt;%\n  split_cols_by_groups(\"BEP01FL\", bep_groups) %&gt;%\n  summarize_vars(c(\"AGE\", \"SEX\")) %&gt;%\n  add_colcounts()\n\nWarning: `summarize_vars()` was deprecated in tern 0.8.5.9010.\nℹ Please use `analyze_vars()` instead.\n\nCodebuild_table(lyt, adsl)\n\n                  All           BEP    \n                (N=400)       (N=197)  \n———————————————————————————————————————\nAGE                                    \n  n               400           197    \n  Mean (SD)   34.9 (7.4)    34.6 (7.7) \n  Median         34.0          34.0    \n  Min - Max   20.0 - 69.0   21.0 - 69.0\nSEX                                    \n  n               400           197    \n  F           231 (57.8%)    126 (64%) \n  M           169 (42.2%)    71 (36%)  \n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.3.9016       rtables_0.6.6.9010   \n[4] magrittr_2.0.3        formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.6-5      gtable_0.3.4      jsonlite_1.8.8    compiler_4.3.2   \n [5] tidyselect_1.2.0  tidyr_1.3.1       splines_4.3.2     scales_1.3.0     \n [9] yaml_2.3.8        fastmap_1.1.1     lattice_0.22-5    ggplot2_3.4.4    \n[13] R6_2.5.1          generics_0.1.3    knitr_1.45        forcats_1.0.0    \n[17] rbibutils_2.2.16  htmlwidgets_1.6.4 backports_1.4.1   checkmate_2.3.1  \n[21] tibble_3.2.1      munsell_0.5.0     scda_0.1.6.9016   pillar_1.9.0     \n[25] rlang_1.1.3       utf8_1.2.4        stringi_1.8.3     broom_1.0.5      \n[29] xfun_0.41         cli_3.6.2         Rdpack_2.6        digest_0.6.34    \n[33] grid_4.3.2        lifecycle_1.0.4   vctrs_0.6.5       evaluate_0.23    \n[37] glue_1.7.0        codetools_0.2-19  survival_3.5-7    fansi_1.0.6      \n[41] colorspace_2.1-0  rmarkdown_2.25    purrr_1.0.2       tools_4.3.2      \n[45] pkgconfig_2.0.3   htmltools_0.5.7  \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Tables",
      "DT",
      "DT1",
      "DT1B"
    ]
  },
  {
    "objectID": "tables/DT1/setup.html#setup",
    "href": "tables/DT1/setup.html#setup",
    "title": "",
    "section": "Setup",
    "text": "Setup\nThe tables below compare the overall population (“All”) with the biomarker evaluable population (“BEP”) with regards to selected demographic variables.\nWe will use the cadsl data set from the random.cdisc.data package to illustrate the tables. We add a second artificial BEP flag variable BEP02FL.\nIn order to compare All with BEP, we need to define a list bep_groups defining these two groups. The reason is that these two groups are overlapping (BEP is a subset of All). Here, we refer in the list elements to the levels Y and N of the biomarker population flag variable BEP01FL from adsl which we will use below:\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nset.seed(123)\nadsl &lt;- random.cdisc.data::cadsl %&gt;%\n  df_explicit_na() %&gt;%\n  mutate(BEP02FL = factor(sample(c(\"Y\", \"N\"), size = n(), replace = TRUE)))\n\nbep_groups &lt;- list(\n  \"All\" = c(\"Y\", \"N\"),\n  \"BEP\" = \"Y\"\n)\n\n\nThis can then be used by the tern layout function split_cols_by_groups() below."
  },
  {
    "objectID": "tables/DT2/dt02.html",
    "href": "tables/DT2/dt02.html",
    "title": "DT2",
    "section": "",
    "text": "Setup\nTable\nSession Info\n\n\n\nThe tables below compare the biomarker evaluable population (BEP, below in the table “BEP Yes”) with the remainder non-BEP (“BEP No”) within each treatment arm with regards to selected demographic variables.\nWe will use the synthetic_cdisc_data$adsl data set from the scda package to illustrate the tables.\nIn order to compare the BEP with the non-BEP, we only need to split columns on the BEP flag variable BEP01FL that categorises the evaluable and non evaluable subgroups. For readability in the tables, we define a separate label variable BEP_label below which is parallel to the original flag variable.\n\nCodelibrary(tern)\nlibrary(dplyr)\n\nadsl &lt;- scda::synthetic_cdisc_data(\"rcd_2022_06_27\")$adsl %&gt;%\n  df_explicit_na() %&gt;%\n  mutate(\n    BEP_label = case_when(\n      BEP01FL == \"Y\" ~ \"BEP Yes\",\n      BEP01FL == \"N\" ~ \"BEP No\"\n    )\n  )\n\n\nThis can then be used by the rtables layout function split_cols_by() below.\n\n\nThe demographics table DT2 splits the columns by treatment arm and by the biomarker population (Yes vs. No), and summarizes selected demographic variables in the rows. You can see here how we use the separate labels variable to specify the labels used in the column headers.\n\nCodelyt &lt;- basic_table() %&gt;%\n  split_cols_by(\"ARM\") %&gt;%\n  add_colcounts() %&gt;%\n  split_cols_by(\"BEP01FL\", labels_var = \"BEP_label\") %&gt;%\n  summarize_vars(c(\"AGE\", \"SEX\"))\n\nWarning: `summarize_vars()` was deprecated in tern 0.8.5.9010.\nℹ Please use `analyze_vars()` instead.\n\nCodebuild_table(lyt, adsl)\n\n                      A: Drug X                  B: Placebo                C: Combination      \n                BEP Yes       BEP No        BEP Yes       BEP No        BEP Yes       BEP No   \n                (N=68)        (N=66)        (N=63)        (N=71)        (N=66)        (N=66)   \n———————————————————————————————————————————————————————————————————————————————————————————————\nAGE                                                                                            \n  n               68            66            63            71            66            66     \n  Mean (SD)   32.9 (6.6)    34.6 (6.5)    35.7 (8.3)    35.2 (7.6)    35.1 (8.1)    35.8 (7.3) \n  Median         32.0          34.0          35.0          35.0          34.0          35.0    \n  Min - Max   21.0 - 50.0   24.0 - 48.0   23.0 - 62.0   21.0 - 58.0   21.0 - 69.0   20.0 - 64.0\nSEX                                                                                            \n  n               68            66            63            71            66            66     \n  F           44 (64.7%)     35 (53%)     42 (66.7%)    40 (56.3%)    40 (60.6%)    30 (45.5%) \n  M           24 (35.3%)     31 (47%)     21 (33.3%)    31 (43.7%)    26 (39.4%)    36 (54.5%) \n\n\n\n\n\nCodesessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 \nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Etc/UTC\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4           tern_0.9.3.9016       rtables_0.6.6.9010   \n[4] magrittr_2.0.3        formatters_0.5.5.9010\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.6-5      gtable_0.3.4      jsonlite_1.8.8    compiler_4.3.2   \n [5] tidyselect_1.2.0  tidyr_1.3.1       splines_4.3.2     scales_1.3.0     \n [9] yaml_2.3.8        fastmap_1.1.1     lattice_0.22-5    ggplot2_3.4.4    \n[13] R6_2.5.1          generics_0.1.3    knitr_1.45        forcats_1.0.0    \n[17] rbibutils_2.2.16  htmlwidgets_1.6.4 backports_1.4.1   checkmate_2.3.1  \n[21] tibble_3.2.1      munsell_0.5.0     scda_0.1.6.9016   pillar_1.9.0     \n[25] rlang_1.1.3       utf8_1.2.4        stringi_1.8.3     broom_1.0.5      \n[29] xfun_0.41         cli_3.6.2         Rdpack_2.6        digest_0.6.34    \n[33] grid_4.3.2        lifecycle_1.0.4   vctrs_0.6.5       evaluate_0.23    \n[37] glue_1.7.0        codetools_0.2-19  survival_3.5-7    fansi_1.0.6      \n[41] colorspace_2.1-0  rmarkdown_2.25    purrr_1.0.2       tools_4.3.2      \n[45] pkgconfig_2.0.3   htmltools_0.5.7  \n\n\n\n\n\n\n\n\n\n\nReuseCopyright 2023, Hoffmann-La Roche Ltd.",
    "crumbs": [
      "Tables",
      "DT",
      "DT2"
    ]
  }
]