---
title: SFG6
subtitle: Survival Forest Graphs for Comparing Continuous Biomarker Effects Across Subgroups
---

------------------------------------------------------------------------

::: panel-tabset
## Setup

These templates are helpful when we are interested in modelling the effects of continuous biomarker variables on a time-to-event (survival) outcome, conditional on covariates and/or stratification variables included in Cox proportional hazards regression models.
We would like to assess how the estimates effects change when we look at different subgroups.

In detail the differences to the other survival forest graphs ([SFG1](../graphs/sfg01.qmd) to [SFG5](../graphs/sfg05.qmd)) are the following:

-   The `extract_survival_subgroups()` and `tabulate_survival_subgroups()` functions evaluate the treatment effects comparing two arms, across subgroups. On the other hand, the `extract_survival_biomarkers()` and `tabulate_survival_biomarkers()` functions used here in SFG6 evaluate the effects from continuous biomarkers in the Cox proportional hazards models, across subgroups.
-   The `extract_survival_subgroups()` and `tabulate_survival_subgroups()` functions only allow specification of a single treatment arm variable, while the `extract_survival_biomarkers()` and `tabulate_survival_biomarkers()` allow to look at multiple continuous biomarker variables at once.
-   In addition to the treatment arms, the use of `extract_survival_subgroups()` and `tabulate_survival_subgroups()` functions can be extended to other binary variables, as done in [SFG3](../graphs/sfg03.qmd) and [SFG4](../graphs/sfg04.qmd). For example, we could define the binarized `ARM` variable as `AGE>=65` vs. `AGE<65` and then look at the odds ratios across subgroups. For the `extract_survival_biomarkers()` and `tabulate_survival_biomarkers()` functions, we could use the original continuous biomarker variable `AGE`, and then look at the estimated effect across subgroups.

Similarly like in [SFG3](../graphs/sfg03.qmd), we will use the `synthetic_cdisc_data$adtte` data set from the `scda` package.
Here we just filter for the overall survival outcome in a single arm in the biomarker evaluable population.

```{r, message = FALSE}
library(tern)
library(dplyr)

adtte_f <- scda::synthetic_cdisc_data("rcd_2022_06_27")$adtte %>%
  df_explicit_na() %>%
  filter(
    PARAMCD == "OS",
    ARM == "A: Drug X",
    BEP01FL == "Y"
  ) %>%
  mutate(
    AVAL = day2month(AVAL),
    AVALU = "Months",
    is_event = CNSR == 0
  ) %>%
  var_relabel(
    BEP01FL = "BEP",
    BMRKR1 = "Biomarker (Countinuous)"
  )
```

## Survival Forest Graph for Multiple Continuous Biomarkers (SFG6A)

Here we specify that we would like to analyze the two continuous biomarkers `BMRKR1` and `AGE`, conditional on the covariate `SEX`, in the subgroups defined by the levels of `BMRKR2`.

```{r}
df <- extract_survival_biomarkers(
  variables = list(
    tte = "AVAL",
    is_event = "is_event",
    biomarkers = c("BMRKR1", "AGE"),
    covariates = "SEX",
    subgroups = "BMRKR2"
  ),
  data = adtte_f
)

result <- tabulate_survival_biomarkers(
  df = df,
  vars = c("n_tot_events", "n_tot", "median", "hr", "ci"),
  time_unit = adtte_f$AVALU[1]
)
```

We can look at the result in the console already.

```{r}
result
```

Note that in addition to the `Categorical Level Biomarker 2` subgroups we automatically also get the estimates for the overall patient population in the `All Patients` rows.

We can then produce the final forest plot using the `g_forest()` function on this tabular result.

```{r, fig.width = 15}
g_forest(result, xlim = c(0.7, 1.4))
```

Here we can see that the continuous biomarker (`BMRKR1`) shows a trend towards an estimated positive effect on survival (it is not statistically significant though as the confidence intervals still overlap the hazard ratio 1).
It is a bit easier to see this here rather than in a cutpoint analysis as presented in [SFG3](../graphs/sfg03.qmd).

## Survival Forest Graph for Multiple Continuous Biomarkers by Manual Subgroup Categories (SFG6B)

It is also possible to join and select subgroup categories manually using the `groups_lists` argument, as follows.
Here we join the low and medium levels of `BMRKR2` into a category `one` and compare with the high level labeled as category `two`.

```{r, fig.width = 15}
df <- extract_survival_biomarkers(
  variables = list(
    tte = "AVAL",
    is_event = "is_event",
    biomarkers = c("BMRKR1", "AGE"),
    covariates = "SEX",
    subgroups = "BMRKR2"
  ),
  data = adtte_f,
  groups_list = list(
    BMRKR2 = list(
      one = c("LOW", "MEDIUM"),
      two = "HIGH"
    )
  )
)

result <- tabulate_survival_biomarkers(
  df = df,
  vars = c("n_tot_events", "n_tot", "median", "hr", "ci"),
  time_unit = adtte_f$AVALU[1]
)
g_forest(result, xlim = c(0.7, 1.4))
```

## Survival Forest Graph for Multiple Continuous Biomarkers with Stratification (SFG6C)

Finally we can also specify stratification variables with the `strata` variable element, then the corresponding variables are used for stratification in the Cox proportional hazards models.

```{r, fig.width = 15, warning=FALSE}
df <- extract_survival_biomarkers(
  variables = list(
    tte = "AVAL",
    is_event = "is_event",
    biomarkers = c("BMRKR1", "AGE"),
    covariates = "SEX",
    subgroups = "BMRKR2",
    strata = c("STRATA1", "STRATA2")
  ),
  data = adtte_f
)

result <- tabulate_survival_biomarkers(
  df = df,
  vars = c("n_tot_events", "n_tot", "median", "hr", "ci"),
  time_unit = adtte_f$AVALU[1]
)
g_forest(result, xlim = c(0.6, 1.4))
```

Note that warnings might be issued if the model contains e.g. too few events in the resulting strata, in that case you might want to reduce the number of stratification variables.

{{< include ../session_info.qmd >}}
:::
